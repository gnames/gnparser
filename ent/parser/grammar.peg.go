package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleGraftChimeraFormula
	ruleGraftChimeraFormulaFull
	ruleGraftChimeraFormulaPart
	ruleNamedGenusGraftChimera
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameCompSp
	ruleNameCompIsp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleIgnoredWord
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleTwoLetterGenusDashedSegment
	ruleWordAfterDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleDotPrefix
	ruleMultiDashedWord
	ruleHybridChar
	ruleGraftChimeraChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorIn
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord1
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorWord4
	ruleAuthorDashInitials
	ruleAuthorInitial
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued1
	ruleAuthorPrefixGlued2
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleDashOther
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"GraftChimeraFormula",
	"GraftChimeraFormulaFull",
	"GraftChimeraFormulaPart",
	"NamedGenusGraftChimera",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameCompSp",
	"NameCompIsp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"IgnoredWord",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"TwoLetterGenusDashedSegment",
	"WordAfterDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"DotPrefix",
	"MultiDashedWord",
	"HybridChar",
	"GraftChimeraChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorIn",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord1",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorWord4",
	"AuthorDashInitials",
	"AuthorInitial",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued1",
	"AuthorPrefixGlued2",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"DashOther",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [156]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedGenusGraftChimera / GraftChimeraFormula / NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedGenusGraftChimera]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleGraftChimeraFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleNamedHybrid]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l19
					}
					goto l15
				l19:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l20
					}
					goto l15
				l20:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position21, tokenIndex21 := position, tokenIndex
			{
				position22 := position
				if !_rules[ruleSingleName]() {
					goto l21
				}
				if !_rules[rule_]() {
					goto l21
				}
				{
					position25, tokenIndex25 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l26
					}
					goto l25
				l26:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleHybridFormulaFull]() {
						goto l21
					}
				}
			l25:
			l23:
				{
					position24, tokenIndex24 := position, tokenIndex
					if !_rules[rule_]() {
						goto l24
					}
					{
						position27, tokenIndex27 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l28
						}
						goto l27
					l28:
						position, tokenIndex = position27, tokenIndex27
						if !_rules[ruleHybridFormulaFull]() {
							goto l24
						}
					}
				l27:
					goto l23
				l24:
					position, tokenIndex = position24, tokenIndex24
				}
				add(ruleHybridFormula, position22)
			}
			return true
		l21:
			position, tokenIndex = position21, tokenIndex21
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position29, tokenIndex29 := position, tokenIndex
			{
				position30 := position
				if !_rules[ruleHybridChar]() {
					goto l29
				}
				{
					position31, tokenIndex31 := position, tokenIndex
					if !_rules[rule_]() {
						goto l31
					}
					if !_rules[ruleSingleName]() {
						goto l31
					}
					goto l32
				l31:
					position, tokenIndex = position31, tokenIndex31
				}
			l32:
				add(ruleHybridFormulaFull, position30)
			}
			return true
		l29:
			position, tokenIndex = position29, tokenIndex29
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position33, tokenIndex33 := position, tokenIndex
			{
				position34 := position
				if !_rules[ruleHybridChar]() {
					goto l33
				}
				if !_rules[rule_]() {
					goto l33
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l33
				}
				{
					position35, tokenIndex35 := position, tokenIndex
					if !_rules[rule_]() {
						goto l35
					}
					if !_rules[ruleInfraspGroup]() {
						goto l35
					}
					goto l36
				l35:
					position, tokenIndex = position35, tokenIndex35
				}
			l36:
				add(ruleHybridFormulaPart, position34)
			}
			return true
		l33:
			position, tokenIndex = position33, tokenIndex33
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position37, tokenIndex37 := position, tokenIndex
			{
				position38 := position
				{
					position39, tokenIndex39 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l40
					}
					goto l39
				l40:
					position, tokenIndex = position39, tokenIndex39
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l37
					}
				}
			l39:
				add(ruleNamedHybrid, position38)
			}
			return true
		l37:
			position, tokenIndex = position37, tokenIndex37
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position41, tokenIndex41 := position, tokenIndex
			{
				position42 := position
				if !_rules[ruleGenusWord]() {
					goto l41
				}
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleSubgenus]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					if !_rules[ruleComparison]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[rule_]() {
					goto l41
				}
				if !_rules[ruleHybridChar]() {
					goto l41
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				if !_rules[ruleSpeciesEpithet]() {
					goto l41
				}
				{
					position49, tokenIndex49 := position, tokenIndex
					if !_rules[rule_]() {
						goto l49
					}
					if !_rules[ruleInfraspGroup]() {
						goto l49
					}
					goto l50
				l49:
					position, tokenIndex = position49, tokenIndex49
				}
			l50:
				add(ruleNamedSpeciesHybrid, position42)
			}
			return true
		l41:
			position, tokenIndex = position41, tokenIndex41
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position51, tokenIndex51 := position, tokenIndex
			{
				position52 := position
				if !_rules[ruleHybridChar]() {
					goto l51
				}
				{
					position53, tokenIndex53 := position, tokenIndex
					if !_rules[rule_]() {
						goto l53
					}
					goto l54
				l53:
					position, tokenIndex = position53, tokenIndex53
				}
			l54:
				if !_rules[ruleSingleName]() {
					goto l51
				}
				add(ruleNamedGenusHybrid, position52)
			}
			return true
		l51:
			position, tokenIndex = position51, tokenIndex51
			return false
		},
		/* 9 GraftChimeraFormula <- <(SingleName (_ (GraftChimeraFormulaPart / GraftChimeraFormulaFull))+)> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if !_rules[ruleSingleName]() {
					goto l55
				}
				if !_rules[rule_]() {
					goto l55
				}
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleGraftChimeraFormulaPart]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleGraftChimeraFormulaFull]() {
						goto l55
					}
				}
			l59:
			l57:
				{
					position58, tokenIndex58 := position, tokenIndex
					if !_rules[rule_]() {
						goto l58
					}
					{
						position61, tokenIndex61 := position, tokenIndex
						if !_rules[ruleGraftChimeraFormulaPart]() {
							goto l62
						}
						goto l61
					l62:
						position, tokenIndex = position61, tokenIndex61
						if !_rules[ruleGraftChimeraFormulaFull]() {
							goto l58
						}
					}
				l61:
					goto l57
				l58:
					position, tokenIndex = position58, tokenIndex58
				}
				add(ruleGraftChimeraFormula, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 10 GraftChimeraFormulaFull <- <(GraftChimeraChar (_ SingleName)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l63
				}
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[rule_]() {
						goto l65
					}
					if !_rules[ruleSingleName]() {
						goto l65
					}
					goto l66
				l65:
					position, tokenIndex = position65, tokenIndex65
				}
			l66:
				add(ruleGraftChimeraFormulaFull, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 11 GraftChimeraFormulaPart <- <(GraftChimeraChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l67
				}
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleInfraspGroup]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				add(ruleGraftChimeraFormulaPart, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 12 NamedGenusGraftChimera <- <(GraftChimeraChar _? SingleName)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					if !_rules[rule_]() {
						goto l73
					}
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				if !_rules[ruleSingleName]() {
					goto l71
				}
				add(ruleNamedGenusGraftChimera, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 13 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				if !_rules[ruleCandidatus]() {
					goto l75
				}
				if !_rules[rule_]() {
					goto l75
				}
				if !_rules[ruleSingleName]() {
					goto l75
				}
				add(ruleCandidatusName, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 14 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if buffer[position] != rune('C') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('n') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('i') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('t') {
					goto l77
				}
				position++
				if buffer[position] != rune('u') {
					goto l77
				}
				position++
				if buffer[position] != rune('s') {
					goto l77
				}
				position++
				add(ruleCandidatus, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 15 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position79, tokenIndex79 := position, tokenIndex
			{
				position80 := position
				{
					position81, tokenIndex81 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l82
					}
					goto l81
				l82:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameApprox]() {
						goto l83
					}
					goto l81
				l83:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameSpecies]() {
						goto l84
					}
					goto l81
				l84:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameUninomial]() {
						goto l79
					}
				}
			l81:
				add(ruleSingleName, position80)
			}
			return true
		l79:
			position, tokenIndex = position79, tokenIndex79
			return false
		},
		/* 16 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleUninomial]() {
						goto l85
					}
				}
			l87:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l89
					}
					goto l90
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
			l90:
				add(ruleNameUninomial, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 17 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position91, tokenIndex91 := position, tokenIndex
			{
				position92 := position
				if !_rules[ruleGenusWord]() {
					goto l91
				}
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l93
					}
					goto l94
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
			l94:
				if !_rules[rule_]() {
					goto l91
				}
				if !_rules[ruleApproximation]() {
					goto l91
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l91
				}
				add(ruleNameApprox, position92)
			}
			return true
		l91:
			position, tokenIndex = position91, tokenIndex91
			return false
		},
		/* 18 NameComp <- <(NameCompIsp / NameCompSp)> */
		func() bool {
			position95, tokenIndex95 := position, tokenIndex
			{
				position96 := position
				{
					position97, tokenIndex97 := position, tokenIndex
					if !_rules[ruleNameCompIsp]() {
						goto l98
					}
					goto l97
				l98:
					position, tokenIndex = position97, tokenIndex97
					if !_rules[ruleNameCompSp]() {
						goto l95
					}
				}
			l97:
				add(ruleNameComp, position96)
			}
			return true
		l95:
			position, tokenIndex = position95, tokenIndex95
			return false
		},
		/* 19 NameCompSp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position99, tokenIndex99 := position, tokenIndex
			{
				position100 := position
				if !_rules[ruleGenusWord]() {
					goto l99
				}
				if !_rules[rule_]() {
					goto l99
				}
				if !_rules[ruleComparison]() {
					goto l99
				}
				{
					position101, tokenIndex101 := position, tokenIndex
					if !_rules[rule_]() {
						goto l101
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l101
					}
					goto l102
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
			l102:
				add(ruleNameCompSp, position100)
			}
			return true
		l99:
			position, tokenIndex = position99, tokenIndex99
			return false
		},
		/* 20 NameCompIsp <- <(GenusWord _ SpeciesEpithet _ Comparison (_ InfraspEpithet)?)> */
		func() bool {
			position103, tokenIndex103 := position, tokenIndex
			{
				position104 := position
				if !_rules[ruleGenusWord]() {
					goto l103
				}
				if !_rules[rule_]() {
					goto l103
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l103
				}
				if !_rules[rule_]() {
					goto l103
				}
				if !_rules[ruleComparison]() {
					goto l103
				}
				{
					position105, tokenIndex105 := position, tokenIndex
					if !_rules[rule_]() {
						goto l105
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l105
					}
					goto l106
				l105:
					position, tokenIndex = position105, tokenIndex105
				}
			l106:
				add(ruleNameCompIsp, position104)
			}
			return true
		l103:
			position, tokenIndex = position103, tokenIndex103
			return false
		},
		/* 21 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position107, tokenIndex107 := position, tokenIndex
			{
				position108 := position
				if !_rules[ruleGenusWord]() {
					goto l107
				}
				{
					position109, tokenIndex109 := position, tokenIndex
					{
						position111, tokenIndex111 := position, tokenIndex
						if !_rules[rule_]() {
							goto l111
						}
						goto l112
					l111:
						position, tokenIndex = position111, tokenIndex111
					}
				l112:
					{
						position113, tokenIndex113 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l114
						}
						goto l113
					l114:
						position, tokenIndex = position113, tokenIndex113
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l109
						}
					}
				l113:
					goto l110
				l109:
					position, tokenIndex = position109, tokenIndex109
				}
			l110:
				if !_rules[rule_]() {
					goto l107
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l107
				}
				{
					position115, tokenIndex115 := position, tokenIndex
					if !_rules[rule_]() {
						goto l115
					}
					if !_rules[ruleInfraspGroup]() {
						goto l115
					}
					goto l116
				l115:
					position, tokenIndex = position115, tokenIndex115
				}
			l116:
				{
					position117, tokenIndex117 := position, tokenIndex
					if !_rules[rule_]() {
						goto l117
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l117
					}
					goto l118
				l117:
					position, tokenIndex = position117, tokenIndex117
				}
			l118:
				add(ruleNameSpecies, position108)
			}
			return true
		l107:
			position, tokenIndex = position107, tokenIndex107
			return false
		},
		/* 22 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position119, tokenIndex119 := position, tokenIndex
			{
				position120 := position
				{
					position121, tokenIndex121 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l122
					}
					goto l121
				l122:
					position, tokenIndex = position121, tokenIndex121
					if !_rules[ruleUninomialWord]() {
						goto l119
					}
				}
			l121:
				{
					position123, tokenIndex123 := position, tokenIndex
					if !_rules[rule_]() {
						goto l123
					}
					if !_rules[ruleAuthorWord]() {
						goto l123
					}
					goto l119
				l123:
					position, tokenIndex = position123, tokenIndex123
				}
				add(ruleGenusWord, position120)
			}
			return true
		l119:
			position, tokenIndex = position119, tokenIndex119
			return false
		},
		/* 23 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position124, tokenIndex124 := position, tokenIndex
			{
				position125 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l124
				}
				{
					position126, tokenIndex126 := position, tokenIndex
					if !_rules[rule_]() {
						goto l126
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l126
					}
					goto l127
				l126:
					position, tokenIndex = position126, tokenIndex126
				}
			l127:
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[rule_]() {
						goto l128
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l128
					}
					goto l129
				l128:
					position, tokenIndex = position128, tokenIndex128
				}
			l129:
				add(ruleInfraspGroup, position125)
			}
			return true
		l124:
			position, tokenIndex = position124, tokenIndex124
			return false
		},
		/* 24 InfraspEpithet <- <((Rank _?)? !(AuthorEx / AuthorIn) Word (_ IgnoredWord)? (_? Authorship)?)> */
		func() bool {
			position130, tokenIndex130 := position, tokenIndex
			{
				position131 := position
				{
					position132, tokenIndex132 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l132
					}
					{
						position134, tokenIndex134 := position, tokenIndex
						if !_rules[rule_]() {
							goto l134
						}
						goto l135
					l134:
						position, tokenIndex = position134, tokenIndex134
					}
				l135:
					goto l133
				l132:
					position, tokenIndex = position132, tokenIndex132
				}
			l133:
				{
					position136, tokenIndex136 := position, tokenIndex
					{
						position137, tokenIndex137 := position, tokenIndex
						if !_rules[ruleAuthorEx]() {
							goto l138
						}
						goto l137
					l138:
						position, tokenIndex = position137, tokenIndex137
						if !_rules[ruleAuthorIn]() {
							goto l136
						}
					}
				l137:
					goto l130
				l136:
					position, tokenIndex = position136, tokenIndex136
				}
				if !_rules[ruleWord]() {
					goto l130
				}
				{
					position139, tokenIndex139 := position, tokenIndex
					if !_rules[rule_]() {
						goto l139
					}
					if !_rules[ruleIgnoredWord]() {
						goto l139
					}
					goto l140
				l139:
					position, tokenIndex = position139, tokenIndex139
				}
			l140:
				{
					position141, tokenIndex141 := position, tokenIndex
					{
						position143, tokenIndex143 := position, tokenIndex
						if !_rules[rule_]() {
							goto l143
						}
						goto l144
					l143:
						position, tokenIndex = position143, tokenIndex143
					}
				l144:
					if !_rules[ruleAuthorship]() {
						goto l141
					}
					goto l142
				l141:
					position, tokenIndex = position141, tokenIndex141
				}
			l142:
				add(ruleInfraspEpithet, position131)
			}
			return true
		l130:
			position, tokenIndex = position130, tokenIndex130
			return false
		},
		/* 25 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position145, tokenIndex145 := position, tokenIndex
			{
				position146 := position
				{
					position147, tokenIndex147 := position, tokenIndex
					{
						position149, tokenIndex149 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l149
						}
						if !_rules[rule_]() {
							goto l149
						}
						goto l150
					l149:
						position, tokenIndex = position149, tokenIndex149
					}
				l150:
					if !_rules[ruleCultivarApostrophe]() {
						goto l148
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l148
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l148
					}
					goto l147
				l148:
					position, tokenIndex = position147, tokenIndex147
					if !_rules[ruleRankCultivar]() {
						goto l145
					}
					if !_rules[rule_]() {
						goto l145
					}
					if !_rules[ruleCultivar]() {
						goto l145
					}
				}
			l147:
				add(ruleCultivarWordGroup, position146)
			}
			return true
		l145:
			position, tokenIndex = position145, tokenIndex145
			return false
		},
		/* 26 Cultivar <- <NotHybridChar+> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				if !_rules[ruleNotHybridChar]() {
					goto l151
				}
			l153:
				{
					position154, tokenIndex154 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l154
					}
					goto l153
				l154:
					position, tokenIndex = position154, tokenIndex154
				}
				add(ruleCultivar, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 27 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position155, tokenIndex155 := position, tokenIndex
			{
				position156 := position
				if buffer[position] != rune('c') {
					goto l155
				}
				position++
				if buffer[position] != rune('v') {
					goto l155
				}
				position++
				{
					position157, tokenIndex157 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l157
					}
					position++
					goto l158
				l157:
					position, tokenIndex = position157, tokenIndex157
				}
			l158:
				add(ruleRankCultivar, position156)
			}
			return true
		l155:
			position, tokenIndex = position155, tokenIndex155
			return false
		},
		/* 28 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position159, tokenIndex159 := position, tokenIndex
			{
				position160 := position
				{
					position161, tokenIndex161 := position, tokenIndex
					if !_rules[rule_]() {
						goto l161
					}
					if !_rules[ruleHybridChar]() {
						goto l161
					}
					goto l159
				l161:
					position, tokenIndex = position161, tokenIndex161
				}
				if !matchDot() {
					goto l159
				}
				add(ruleNotHybridChar, position160)
			}
			return true
		l159:
			position, tokenIndex = position159, tokenIndex159
			return false
		},
		/* 29 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position162, tokenIndex162 := position, tokenIndex
			{
				position163 := position
				{
					position164, tokenIndex164 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l165
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l165
					}
					goto l164
				l165:
					position, tokenIndex = position164, tokenIndex164
					{
						position166, tokenIndex166 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l162
						}
						position, tokenIndex = position166, tokenIndex166
					}
				}
			l164:
				add(ruleCultivarRecursive, position163)
			}
			return true
		l162:
			position, tokenIndex = position162, tokenIndex162
			return false
		},
		/* 30 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position167, tokenIndex167 := position, tokenIndex
			{
				position168 := position
				{
					position169, tokenIndex169 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l170
					}
					position++
					goto l169
				l170:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('‘') {
						goto l171
					}
					position++
					goto l169
				l171:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('’') {
						goto l172
					}
					position++
					goto l169
				l172:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('"') {
						goto l173
					}
					position++
					goto l169
				l173:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('“') {
						goto l174
					}
					position++
					goto l169
				l174:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('”') {
						goto l167
					}
					position++
				}
			l169:
				add(ruleCultivarApostrophe, position168)
			}
			return true
		l167:
			position, tokenIndex = position167, tokenIndex167
			return false
		},
		/* 31 SpeciesEpithet <- <(!(AuthorEx / AuthorIn) Word (_ IgnoredWord)? (_? Authorship)?)> */
		func() bool {
			position175, tokenIndex175 := position, tokenIndex
			{
				position176 := position
				{
					position177, tokenIndex177 := position, tokenIndex
					{
						position178, tokenIndex178 := position, tokenIndex
						if !_rules[ruleAuthorEx]() {
							goto l179
						}
						goto l178
					l179:
						position, tokenIndex = position178, tokenIndex178
						if !_rules[ruleAuthorIn]() {
							goto l177
						}
					}
				l178:
					goto l175
				l177:
					position, tokenIndex = position177, tokenIndex177
				}
				if !_rules[ruleWord]() {
					goto l175
				}
				{
					position180, tokenIndex180 := position, tokenIndex
					if !_rules[rule_]() {
						goto l180
					}
					if !_rules[ruleIgnoredWord]() {
						goto l180
					}
					goto l181
				l180:
					position, tokenIndex = position180, tokenIndex180
				}
			l181:
				{
					position182, tokenIndex182 := position, tokenIndex
					{
						position184, tokenIndex184 := position, tokenIndex
						if !_rules[rule_]() {
							goto l184
						}
						goto l185
					l184:
						position, tokenIndex = position184, tokenIndex184
					}
				l185:
					if !_rules[ruleAuthorship]() {
						goto l182
					}
					goto l183
				l182:
					position, tokenIndex = position182, tokenIndex182
				}
			l183:
				add(ruleSpeciesEpithet, position176)
			}
			return true
		l175:
			position, tokenIndex = position175, tokenIndex175
			return false
		},
		/* 32 IgnoredWord <- <(('m' 'i' 'h' 'i' '.') / ('m' 'i' 'h' 'i'))> */
		func() bool {
			position186, tokenIndex186 := position, tokenIndex
			{
				position187 := position
				{
					position188, tokenIndex188 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l189
					}
					position++
					if buffer[position] != rune('i') {
						goto l189
					}
					position++
					if buffer[position] != rune('h') {
						goto l189
					}
					position++
					if buffer[position] != rune('i') {
						goto l189
					}
					position++
					if buffer[position] != rune('.') {
						goto l189
					}
					position++
					goto l188
				l189:
					position, tokenIndex = position188, tokenIndex188
					if buffer[position] != rune('m') {
						goto l186
					}
					position++
					if buffer[position] != rune('i') {
						goto l186
					}
					position++
					if buffer[position] != rune('h') {
						goto l186
					}
					position++
					if buffer[position] != rune('i') {
						goto l186
					}
					position++
				}
			l188:
				add(ruleIgnoredWord, position187)
			}
			return true
		l186:
			position, tokenIndex = position186, tokenIndex186
			return false
		},
		/* 33 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position190, tokenIndex190 := position, tokenIndex
			{
				position191 := position
				if buffer[position] != rune('c') {
					goto l190
				}
				position++
				if buffer[position] != rune('f') {
					goto l190
				}
				position++
				{
					position192, tokenIndex192 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l192
					}
					position++
					goto l193
				l192:
					position, tokenIndex = position192, tokenIndex192
				}
			l193:
				{
					position194, tokenIndex194 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l190
					}
					position, tokenIndex = position194, tokenIndex194
				}
				add(ruleComparison, position191)
			}
			return true
		l190:
			position, tokenIndex = position190, tokenIndex190
			return false
		},
		/* 34 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position195, tokenIndex195 := position, tokenIndex
			{
				position196 := position
				{
					position197, tokenIndex197 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l198
					}
					goto l197
				l198:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankVar]() {
						goto l199
					}
					goto l197
				l199:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankSsp]() {
						goto l200
					}
					goto l197
				l200:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankOther]() {
						goto l201
					}
					goto l197
				l201:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankOtherUncommon]() {
						goto l202
					}
					goto l197
				l202:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankAgamo]() {
						goto l203
					}
					goto l197
				l203:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankNotho]() {
						goto l195
					}
				}
			l197:
				{
					position204, tokenIndex204 := position, tokenIndex
					{
						position206, tokenIndex206 := position, tokenIndex
						if !_rules[rule_]() {
							goto l206
						}
						goto l207
					l206:
						position, tokenIndex = position206, tokenIndex206
					}
				l207:
					if !_rules[ruleLowerGreek]() {
						goto l204
					}
					{
						position208, tokenIndex208 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l209
						}
						position++
						goto l208
					l209:
						position, tokenIndex = position208, tokenIndex208
						{
							position210, tokenIndex210 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l204
							}
							position, tokenIndex = position210, tokenIndex210
						}
					}
				l208:
					goto l205
				l204:
					position, tokenIndex = position204, tokenIndex204
				}
			l205:
				add(ruleRank, position196)
			}
			return true
		l195:
			position, tokenIndex = position195, tokenIndex195
			return false
		},
		/* 35 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position211, tokenIndex211 := position, tokenIndex
			{
				position212 := position
				{
					position213, tokenIndex213 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l214
					}
					position++
					if buffer[position] != rune('o') {
						goto l214
					}
					position++
					if buffer[position] != rune('t') {
						goto l214
					}
					position++
					if buffer[position] != rune('h') {
						goto l214
					}
					position++
					if buffer[position] != rune('o') {
						goto l214
					}
					position++
					{
						position215, tokenIndex215 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l216
						}
						position++
						if buffer[position] != rune('a') {
							goto l216
						}
						position++
						if buffer[position] != rune('r') {
							goto l216
						}
						position++
						goto l215
					l216:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('f') {
							goto l217
						}
						position++
						if buffer[position] != rune('o') {
							goto l217
						}
						position++
						goto l215
					l217:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('f') {
							goto l218
						}
						position++
						goto l215
					l218:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l219
						}
						position++
						if buffer[position] != rune('u') {
							goto l219
						}
						position++
						if buffer[position] != rune('b') {
							goto l219
						}
						position++
						if buffer[position] != rune('s') {
							goto l219
						}
						position++
						if buffer[position] != rune('p') {
							goto l219
						}
						position++
						goto l215
					l219:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l220
						}
						position++
						if buffer[position] != rune('s') {
							goto l220
						}
						position++
						if buffer[position] != rune('p') {
							goto l220
						}
						position++
						goto l215
					l220:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l221
						}
						position++
						if buffer[position] != rune('p') {
							goto l221
						}
						position++
						goto l215
					l221:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('m') {
							goto l222
						}
						position++
						if buffer[position] != rune('o') {
							goto l222
						}
						position++
						if buffer[position] != rune('r') {
							goto l222
						}
						position++
						if buffer[position] != rune('t') {
							goto l222
						}
						position++
						if buffer[position] != rune('h') {
							goto l222
						}
						position++
						goto l215
					l222:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l223
						}
						position++
						if buffer[position] != rune('u') {
							goto l223
						}
						position++
						if buffer[position] != rune('p') {
							goto l223
						}
						position++
						if buffer[position] != rune('s') {
							goto l223
						}
						position++
						if buffer[position] != rune('p') {
							goto l223
						}
						position++
						goto l215
					l223:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l214
						}
						position++
						if buffer[position] != rune('u') {
							goto l214
						}
						position++
					}
				l215:
					goto l213
				l214:
					position, tokenIndex = position213, tokenIndex213
					if buffer[position] != rune('n') {
						goto l211
					}
					position++
					if buffer[position] != rune('v') {
						goto l211
					}
					position++
					if buffer[position] != rune('a') {
						goto l211
					}
					position++
					if buffer[position] != rune('r') {
						goto l211
					}
					position++
				}
			l213:
				{
					position224, tokenIndex224 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l225
					}
					position++
					goto l224
				l225:
					position, tokenIndex = position224, tokenIndex224
					{
						position226, tokenIndex226 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l211
						}
						position, tokenIndex = position226, tokenIndex226
					}
				}
			l224:
				add(ruleRankNotho, position212)
			}
			return true
		l211:
			position, tokenIndex = position211, tokenIndex211
			return false
		},
		/* 36 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('f' '.' 's' 'p') / ('p' 'r' 'o' 'l' '.') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position227, tokenIndex227 := position, tokenIndex
			{
				position228 := position
				{
					position229, tokenIndex229 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l230
					}
					position++
					goto l229
				l230:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('n') {
						goto l231
					}
					position++
					if buffer[position] != rune('a') {
						goto l231
					}
					position++
					if buffer[position] != rune('t') {
						goto l231
					}
					position++
					if buffer[position] != rune('i') {
						goto l231
					}
					position++
					if buffer[position] != rune('o') {
						goto l231
					}
					position++
					goto l229
				l231:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('n') {
						goto l232
					}
					position++
					if buffer[position] != rune('a') {
						goto l232
					}
					position++
					if buffer[position] != rune('t') {
						goto l232
					}
					position++
					if buffer[position] != rune('.') {
						goto l232
					}
					position++
					goto l229
				l232:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('n') {
						goto l233
					}
					position++
					if buffer[position] != rune('a') {
						goto l233
					}
					position++
					if buffer[position] != rune('t') {
						goto l233
					}
					position++
					goto l229
				l233:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('f') {
						goto l234
					}
					position++
					if buffer[position] != rune('.') {
						goto l234
					}
					position++
					if buffer[position] != rune('s') {
						goto l234
					}
					position++
					if buffer[position] != rune('p') {
						goto l234
					}
					position++
					goto l229
				l234:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('p') {
						goto l235
					}
					position++
					if buffer[position] != rune('r') {
						goto l235
					}
					position++
					if buffer[position] != rune('o') {
						goto l235
					}
					position++
					if buffer[position] != rune('l') {
						goto l235
					}
					position++
					if buffer[position] != rune('.') {
						goto l235
					}
					position++
					goto l229
				l235:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('α') {
						goto l236
					}
					position++
					goto l229
				l236:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('β') {
						goto l237
					}
					position++
					if buffer[position] != rune('β') {
						goto l237
					}
					position++
					goto l229
				l237:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('β') {
						goto l238
					}
					position++
					goto l229
				l238:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('γ') {
						goto l239
					}
					position++
					goto l229
				l239:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('δ') {
						goto l240
					}
					position++
					goto l229
				l240:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('ε') {
						goto l241
					}
					position++
					goto l229
				l241:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('φ') {
						goto l242
					}
					position++
					goto l229
				l242:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('θ') {
						goto l243
					}
					position++
					goto l229
				l243:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('μ') {
						goto l244
					}
					position++
					goto l229
				l244:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('a') {
						goto l245
					}
					position++
					if buffer[position] != rune('.') {
						goto l245
					}
					position++
					goto l229
				l245:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('b') {
						goto l246
					}
					position++
					if buffer[position] != rune('.') {
						goto l246
					}
					position++
					goto l229
				l246:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('c') {
						goto l247
					}
					position++
					if buffer[position] != rune('.') {
						goto l247
					}
					position++
					goto l229
				l247:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('d') {
						goto l248
					}
					position++
					if buffer[position] != rune('.') {
						goto l248
					}
					position++
					goto l229
				l248:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('e') {
						goto l249
					}
					position++
					if buffer[position] != rune('.') {
						goto l249
					}
					position++
					goto l229
				l249:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('g') {
						goto l250
					}
					position++
					if buffer[position] != rune('.') {
						goto l250
					}
					position++
					goto l229
				l250:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('k') {
						goto l251
					}
					position++
					if buffer[position] != rune('.') {
						goto l251
					}
					position++
					goto l229
				l251:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('m') {
						goto l227
					}
					position++
					if buffer[position] != rune('u') {
						goto l227
					}
					position++
					if buffer[position] != rune('t') {
						goto l227
					}
					position++
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
				}
			l229:
				{
					position252, tokenIndex252 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l227
					}
					position, tokenIndex = position252, tokenIndex252
				}
				add(ruleRankOtherUncommon, position228)
			}
			return true
		l227:
			position, tokenIndex = position227, tokenIndex227
			return false
		},
		/* 37 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position253, tokenIndex253 := position, tokenIndex
			{
				position254 := position
				{
					position255, tokenIndex255 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l256
					}
					position++
					if buffer[position] != rune('o') {
						goto l256
					}
					position++
					if buffer[position] != rune('r') {
						goto l256
					}
					position++
					if buffer[position] != rune('p') {
						goto l256
					}
					position++
					if buffer[position] != rune('h') {
						goto l256
					}
					position++
					goto l255
				l256:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('c') {
						goto l257
					}
					position++
					if buffer[position] != rune('o') {
						goto l257
					}
					position++
					if buffer[position] != rune('n') {
						goto l257
					}
					position++
					if buffer[position] != rune('v') {
						goto l257
					}
					position++
					if buffer[position] != rune('a') {
						goto l257
					}
					position++
					if buffer[position] != rune('r') {
						goto l257
					}
					position++
					goto l255
				l257:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('p') {
						goto l258
					}
					position++
					if buffer[position] != rune('s') {
						goto l258
					}
					position++
					if buffer[position] != rune('e') {
						goto l258
					}
					position++
					if buffer[position] != rune('u') {
						goto l258
					}
					position++
					if buffer[position] != rune('d') {
						goto l258
					}
					position++
					if buffer[position] != rune('o') {
						goto l258
					}
					position++
					if buffer[position] != rune('v') {
						goto l258
					}
					position++
					if buffer[position] != rune('a') {
						goto l258
					}
					position++
					if buffer[position] != rune('r') {
						goto l258
					}
					position++
					goto l255
				l258:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('s') {
						goto l259
					}
					position++
					if buffer[position] != rune('e') {
						goto l259
					}
					position++
					if buffer[position] != rune('c') {
						goto l259
					}
					position++
					if buffer[position] != rune('t') {
						goto l259
					}
					position++
					goto l255
				l259:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('e') {
						goto l260
					}
					position++
					if buffer[position] != rune('r') {
						goto l260
					}
					position++
					goto l255
				l260:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('s') {
						goto l261
					}
					position++
					if buffer[position] != rune('u') {
						goto l261
					}
					position++
					if buffer[position] != rune('b') {
						goto l261
					}
					position++
					if buffer[position] != rune('v') {
						goto l261
					}
					position++
					if buffer[position] != rune('a') {
						goto l261
					}
					position++
					if buffer[position] != rune('r') {
						goto l261
					}
					position++
					goto l255
				l261:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('s') {
						goto l262
					}
					position++
					if buffer[position] != rune('u') {
						goto l262
					}
					position++
					if buffer[position] != rune('b') {
						goto l262
					}
					position++
					if buffer[position] != rune('f') {
						goto l262
					}
					position++
					goto l255
				l262:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('r') {
						goto l263
					}
					position++
					if buffer[position] != rune('a') {
						goto l263
					}
					position++
					if buffer[position] != rune('c') {
						goto l263
					}
					position++
					if buffer[position] != rune('e') {
						goto l263
					}
					position++
					goto l255
				l263:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('p') {
						goto l264
					}
					position++
					if buffer[position] != rune('v') {
						goto l264
					}
					position++
					goto l255
				l264:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('p') {
						goto l265
					}
					position++
					if buffer[position] != rune('a') {
						goto l265
					}
					position++
					if buffer[position] != rune('t') {
						goto l265
					}
					position++
					if buffer[position] != rune('h') {
						goto l265
					}
					position++
					if buffer[position] != rune('o') {
						goto l265
					}
					position++
					if buffer[position] != rune('v') {
						goto l265
					}
					position++
					if buffer[position] != rune('a') {
						goto l265
					}
					position++
					if buffer[position] != rune('r') {
						goto l265
					}
					position++
					goto l255
				l265:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('a') {
						goto l266
					}
					position++
					if buffer[position] != rune('b') {
						goto l266
					}
					position++
					if buffer[position] != rune('.') {
						goto l266
					}
					position++
					{
						position267, tokenIndex267 := position, tokenIndex
						{
							position269, tokenIndex269 := position, tokenIndex
							if !_rules[rule_]() {
								goto l269
							}
							goto l270
						l269:
							position, tokenIndex = position269, tokenIndex269
						}
					l270:
						if buffer[position] != rune('n') {
							goto l267
						}
						position++
						if buffer[position] != rune('.') {
							goto l267
						}
						position++
						goto l268
					l267:
						position, tokenIndex = position267, tokenIndex267
					}
				l268:
					goto l255
				l266:
					position, tokenIndex = position255, tokenIndex255
					if buffer[position] != rune('s') {
						goto l253
					}
					position++
					if buffer[position] != rune('t') {
						goto l253
					}
					position++
				}
			l255:
				{
					position271, tokenIndex271 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l272
					}
					position++
					goto l271
				l272:
					position, tokenIndex = position271, tokenIndex271
					{
						position273, tokenIndex273 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l253
						}
						position, tokenIndex = position273, tokenIndex273
					}
				}
			l271:
				add(ruleRankOther, position254)
			}
			return true
		l253:
			position, tokenIndex = position253, tokenIndex253
			return false
		},
		/* 38 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position274, tokenIndex274 := position, tokenIndex
			{
				position275 := position
				{
					position276, tokenIndex276 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l277
					}
					position++
					if buffer[position] != rune('a') {
						goto l277
					}
					position++
					if buffer[position] != rune('r') {
						goto l277
					}
					position++
					if buffer[position] != rune('i') {
						goto l277
					}
					position++
					if buffer[position] != rune('e') {
						goto l277
					}
					position++
					if buffer[position] != rune('t') {
						goto l277
					}
					position++
					if buffer[position] != rune('y') {
						goto l277
					}
					position++
					goto l276
				l277:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('[') {
						goto l278
					}
					position++
					if buffer[position] != rune('v') {
						goto l278
					}
					position++
					if buffer[position] != rune('a') {
						goto l278
					}
					position++
					if buffer[position] != rune('r') {
						goto l278
					}
					position++
					if buffer[position] != rune('.') {
						goto l278
					}
					position++
					if buffer[position] != rune(']') {
						goto l278
					}
					position++
					goto l276
				l278:
					position, tokenIndex = position276, tokenIndex276
					if buffer[position] != rune('v') {
						goto l274
					}
					position++
					if buffer[position] != rune('a') {
						goto l274
					}
					position++
					if buffer[position] != rune('r') {
						goto l274
					}
					position++
				}
			l276:
				{
					position279, tokenIndex279 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l280
					}
					position++
					goto l279
				l280:
					position, tokenIndex = position279, tokenIndex279
					{
						position281, tokenIndex281 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l274
						}
						position, tokenIndex = position281, tokenIndex281
					}
				}
			l279:
				add(ruleRankVar, position275)
			}
			return true
		l274:
			position, tokenIndex = position274, tokenIndex274
			return false
		},
		/* 39 RankForma <- <((('f' 'a') / ('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position282, tokenIndex282 := position, tokenIndex
			{
				position283 := position
				{
					position284, tokenIndex284 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l285
					}
					position++
					if buffer[position] != rune('a') {
						goto l285
					}
					position++
					goto l284
				l285:
					position, tokenIndex = position284, tokenIndex284
					if buffer[position] != rune('f') {
						goto l286
					}
					position++
					if buffer[position] != rune('o') {
						goto l286
					}
					position++
					if buffer[position] != rune('r') {
						goto l286
					}
					position++
					if buffer[position] != rune('m') {
						goto l286
					}
					position++
					if buffer[position] != rune('a') {
						goto l286
					}
					position++
					goto l284
				l286:
					position, tokenIndex = position284, tokenIndex284
					if buffer[position] != rune('f') {
						goto l287
					}
					position++
					if buffer[position] != rune('m') {
						goto l287
					}
					position++
					if buffer[position] != rune('a') {
						goto l287
					}
					position++
					goto l284
				l287:
					position, tokenIndex = position284, tokenIndex284
					if buffer[position] != rune('f') {
						goto l288
					}
					position++
					if buffer[position] != rune('m') {
						goto l288
					}
					position++
					goto l284
				l288:
					position, tokenIndex = position284, tokenIndex284
					if buffer[position] != rune('f') {
						goto l289
					}
					position++
					if buffer[position] != rune('o') {
						goto l289
					}
					position++
					if buffer[position] != rune('r') {
						goto l289
					}
					position++
					if buffer[position] != rune('m') {
						goto l289
					}
					position++
					goto l284
				l289:
					position, tokenIndex = position284, tokenIndex284
					if buffer[position] != rune('f') {
						goto l290
					}
					position++
					if buffer[position] != rune('o') {
						goto l290
					}
					position++
					goto l284
				l290:
					position, tokenIndex = position284, tokenIndex284
					if buffer[position] != rune('f') {
						goto l282
					}
					position++
				}
			l284:
				{
					position291, tokenIndex291 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l292
					}
					position++
					goto l291
				l292:
					position, tokenIndex = position291, tokenIndex291
					{
						position293, tokenIndex293 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l282
						}
						position, tokenIndex = position293, tokenIndex293
					}
				}
			l291:
				add(ruleRankForma, position283)
			}
			return true
		l282:
			position, tokenIndex = position282, tokenIndex282
			return false
		},
		/* 40 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position294, tokenIndex294 := position, tokenIndex
			{
				position295 := position
				{
					position296, tokenIndex296 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l297
					}
					position++
					if buffer[position] != rune('s') {
						goto l297
					}
					position++
					if buffer[position] != rune('p') {
						goto l297
					}
					position++
					goto l296
				l297:
					position, tokenIndex = position296, tokenIndex296
					if buffer[position] != rune('s') {
						goto l298
					}
					position++
					if buffer[position] != rune('u') {
						goto l298
					}
					position++
					if buffer[position] != rune('b') {
						goto l298
					}
					position++
					if buffer[position] != rune('s') {
						goto l298
					}
					position++
					if buffer[position] != rune('p') {
						goto l298
					}
					position++
					if buffer[position] != rune('e') {
						goto l298
					}
					position++
					if buffer[position] != rune('c') {
						goto l298
					}
					position++
					goto l296
				l298:
					position, tokenIndex = position296, tokenIndex296
					if buffer[position] != rune('s') {
						goto l294
					}
					position++
					if buffer[position] != rune('u') {
						goto l294
					}
					position++
					if buffer[position] != rune('b') {
						goto l294
					}
					position++
					if buffer[position] != rune('s') {
						goto l294
					}
					position++
					if buffer[position] != rune('p') {
						goto l294
					}
					position++
				}
			l296:
				{
					position299, tokenIndex299 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l300
					}
					position++
					goto l299
				l300:
					position, tokenIndex = position299, tokenIndex299
					{
						position301, tokenIndex301 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l294
						}
						position, tokenIndex = position301, tokenIndex301
					}
				}
			l299:
				add(ruleRankSsp, position295)
			}
			return true
		l294:
			position, tokenIndex = position294, tokenIndex294
			return false
		},
		/* 41 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position302, tokenIndex302 := position, tokenIndex
			{
				position303 := position
				{
					position304, tokenIndex304 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l305
					}
					position++
					if buffer[position] != rune('g') {
						goto l305
					}
					position++
					if buffer[position] != rune('a') {
						goto l305
					}
					position++
					if buffer[position] != rune('m') {
						goto l305
					}
					position++
					if buffer[position] != rune('o') {
						goto l305
					}
					position++
					if buffer[position] != rune('s') {
						goto l305
					}
					position++
					if buffer[position] != rune('p') {
						goto l305
					}
					position++
					goto l304
				l305:
					position, tokenIndex = position304, tokenIndex304
					if buffer[position] != rune('a') {
						goto l306
					}
					position++
					if buffer[position] != rune('g') {
						goto l306
					}
					position++
					if buffer[position] != rune('a') {
						goto l306
					}
					position++
					if buffer[position] != rune('m') {
						goto l306
					}
					position++
					if buffer[position] != rune('o') {
						goto l306
					}
					position++
					if buffer[position] != rune('s') {
						goto l306
					}
					position++
					if buffer[position] != rune('s') {
						goto l306
					}
					position++
					if buffer[position] != rune('p') {
						goto l306
					}
					position++
					goto l304
				l306:
					position, tokenIndex = position304, tokenIndex304
					if buffer[position] != rune('a') {
						goto l302
					}
					position++
					if buffer[position] != rune('g') {
						goto l302
					}
					position++
					if buffer[position] != rune('a') {
						goto l302
					}
					position++
					if buffer[position] != rune('m') {
						goto l302
					}
					position++
					if buffer[position] != rune('o') {
						goto l302
					}
					position++
					if buffer[position] != rune('v') {
						goto l302
					}
					position++
					if buffer[position] != rune('a') {
						goto l302
					}
					position++
					if buffer[position] != rune('r') {
						goto l302
					}
					position++
				}
			l304:
				{
					position307, tokenIndex307 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l308
					}
					position++
					goto l307
				l308:
					position, tokenIndex = position307, tokenIndex307
					{
						position309, tokenIndex309 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l302
						}
						position, tokenIndex = position309, tokenIndex309
					}
				}
			l307:
				add(ruleRankAgamo, position303)
			}
			return true
		l302:
			position, tokenIndex = position302, tokenIndex302
			return false
		},
		/* 42 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position310, tokenIndex310 := position, tokenIndex
			{
				position311 := position
				if buffer[position] != rune('(') {
					goto l310
				}
				position++
				{
					position312, tokenIndex312 := position, tokenIndex
					if !_rules[rule_]() {
						goto l312
					}
					goto l313
				l312:
					position, tokenIndex = position312, tokenIndex312
				}
			l313:
				if !_rules[ruleNameLowerChar]() {
					goto l310
				}
			l314:
				{
					position315, tokenIndex315 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l315
					}
					goto l314
				l315:
					position, tokenIndex = position315, tokenIndex315
				}
				{
					position316, tokenIndex316 := position, tokenIndex
					if !_rules[rule_]() {
						goto l316
					}
					goto l317
				l316:
					position, tokenIndex = position316, tokenIndex316
				}
			l317:
				if buffer[position] != rune(')') {
					goto l310
				}
				position++
				add(ruleSubgenusOrSuperspecies, position311)
			}
			return true
		l310:
			position, tokenIndex = position310, tokenIndex310
			return false
		},
		/* 43 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position318, tokenIndex318 := position, tokenIndex
			{
				position319 := position
				{
					position320, tokenIndex320 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l321
					}
					goto l320
				l321:
					position, tokenIndex = position320, tokenIndex320
					if !_rules[ruleUninomialCombo2]() {
						goto l318
					}
				}
			l320:
				add(ruleUninomialCombo, position319)
			}
			return true
		l318:
			position, tokenIndex = position318, tokenIndex318
			return false
		},
		/* 44 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position322, tokenIndex322 := position, tokenIndex
			{
				position323 := position
				if !_rules[ruleUninomialWord]() {
					goto l322
				}
				{
					position324, tokenIndex324 := position, tokenIndex
					if !_rules[rule_]() {
						goto l324
					}
					goto l325
				l324:
					position, tokenIndex = position324, tokenIndex324
				}
			l325:
				if !_rules[ruleSubgenus]() {
					goto l322
				}
				{
					position326, tokenIndex326 := position, tokenIndex
					{
						position328, tokenIndex328 := position, tokenIndex
						if !_rules[rule_]() {
							goto l328
						}
						goto l329
					l328:
						position, tokenIndex = position328, tokenIndex328
					}
				l329:
					if !_rules[ruleAuthorship]() {
						goto l326
					}
					goto l327
				l326:
					position, tokenIndex = position326, tokenIndex326
				}
			l327:
				add(ruleUninomialCombo1, position323)
			}
			return true
		l322:
			position, tokenIndex = position322, tokenIndex322
			return false
		},
		/* 45 UninomialCombo2 <- <((Uninomial _)? RankUninomial _ Uninomial)> */
		func() bool {
			position330, tokenIndex330 := position, tokenIndex
			{
				position331 := position
				{
					position332, tokenIndex332 := position, tokenIndex
					if !_rules[ruleUninomial]() {
						goto l332
					}
					if !_rules[rule_]() {
						goto l332
					}
					goto l333
				l332:
					position, tokenIndex = position332, tokenIndex332
				}
			l333:
				if !_rules[ruleRankUninomial]() {
					goto l330
				}
				if !_rules[rule_]() {
					goto l330
				}
				if !_rules[ruleUninomial]() {
					goto l330
				}
				add(ruleUninomialCombo2, position331)
			}
			return true
		l330:
			position, tokenIndex = position330, tokenIndex330
			return false
		},
		/* 46 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position334, tokenIndex334 := position, tokenIndex
			{
				position335 := position
				{
					position336, tokenIndex336 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l337
					}
					goto l336
				l337:
					position, tokenIndex = position336, tokenIndex336
					if !_rules[ruleSubgenus1]() {
						goto l334
					}
				}
			l336:
				add(ruleSubgenus, position335)
			}
			return true
		l334:
			position, tokenIndex = position334, tokenIndex334
			return false
		},
		/* 47 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? Authorship))> */
		func() bool {
			position338, tokenIndex338 := position, tokenIndex
			{
				position339 := position
				if buffer[position] != rune('(') {
					goto l338
				}
				position++
				{
					position340, tokenIndex340 := position, tokenIndex
					if !_rules[rule_]() {
						goto l340
					}
					goto l341
				l340:
					position, tokenIndex = position340, tokenIndex340
				}
			l341:
				if !_rules[ruleAbbrSubgenus]() {
					goto l338
				}
				{
					position342, tokenIndex342 := position, tokenIndex
					if !_rules[rule_]() {
						goto l342
					}
					goto l343
				l342:
					position, tokenIndex = position342, tokenIndex342
				}
			l343:
				if buffer[position] != rune(')') {
					goto l338
				}
				position++
				{
					position344, tokenIndex344 := position, tokenIndex
					{
						position345, tokenIndex345 := position, tokenIndex
						if !_rules[rule_]() {
							goto l345
						}
						goto l346
					l345:
						position, tokenIndex = position345, tokenIndex345
					}
				l346:
					if !_rules[ruleAuthorship]() {
						goto l344
					}
					goto l338
				l344:
					position, tokenIndex = position344, tokenIndex344
				}
				add(ruleSubgenus2, position339)
			}
			return true
		l338:
			position, tokenIndex = position338, tokenIndex338
			return false
		},
		/* 48 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position347, tokenIndex347 := position, tokenIndex
			{
				position348 := position
				if buffer[position] != rune('(') {
					goto l347
				}
				position++
				{
					position349, tokenIndex349 := position, tokenIndex
					if !_rules[rule_]() {
						goto l349
					}
					goto l350
				l349:
					position, tokenIndex = position349, tokenIndex349
				}
			l350:
				if !_rules[ruleUninomialWord]() {
					goto l347
				}
				{
					position351, tokenIndex351 := position, tokenIndex
					if !_rules[rule_]() {
						goto l351
					}
					goto l352
				l351:
					position, tokenIndex = position351, tokenIndex351
				}
			l352:
				if buffer[position] != rune(')') {
					goto l347
				}
				position++
				add(ruleSubgenus1, position348)
			}
			return true
		l347:
			position, tokenIndex = position347, tokenIndex347
			return false
		},
		/* 49 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position353, tokenIndex353 := position, tokenIndex
			{
				position354 := position
				{
					position355, tokenIndex355 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l356
					}
					goto l355
				l356:
					position, tokenIndex = position355, tokenIndex355
					if !_rules[ruleRankUninomialNotho]() {
						goto l353
					}
				}
			l355:
				add(ruleRankUninomial, position354)
			}
			return true
		l353:
			position, tokenIndex = position353, tokenIndex353
			return false
		},
		/* 50 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('t' 'r') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('d' 'i' 'v') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position357, tokenIndex357 := position, tokenIndex
			{
				position358 := position
				{
					position359, tokenIndex359 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l360
					}
					position++
					if buffer[position] != rune('e') {
						goto l360
					}
					position++
					if buffer[position] != rune('c') {
						goto l360
					}
					position++
					if buffer[position] != rune('t') {
						goto l360
					}
					position++
					goto l359
				l360:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l361
					}
					position++
					if buffer[position] != rune('u') {
						goto l361
					}
					position++
					if buffer[position] != rune('b') {
						goto l361
					}
					position++
					if buffer[position] != rune('s') {
						goto l361
					}
					position++
					if buffer[position] != rune('e') {
						goto l361
					}
					position++
					if buffer[position] != rune('c') {
						goto l361
					}
					position++
					if buffer[position] != rune('t') {
						goto l361
					}
					position++
					goto l359
				l361:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('t') {
						goto l362
					}
					position++
					if buffer[position] != rune('r') {
						goto l362
					}
					position++
					if buffer[position] != rune('i') {
						goto l362
					}
					position++
					if buffer[position] != rune('b') {
						goto l362
					}
					position++
					goto l359
				l362:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('t') {
						goto l363
					}
					position++
					if buffer[position] != rune('r') {
						goto l363
					}
					position++
					goto l359
				l363:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l364
					}
					position++
					if buffer[position] != rune('u') {
						goto l364
					}
					position++
					if buffer[position] != rune('b') {
						goto l364
					}
					position++
					if buffer[position] != rune('t') {
						goto l364
					}
					position++
					if buffer[position] != rune('r') {
						goto l364
					}
					position++
					if buffer[position] != rune('i') {
						goto l364
					}
					position++
					if buffer[position] != rune('b') {
						goto l364
					}
					position++
					goto l359
				l364:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l365
					}
					position++
					if buffer[position] != rune('u') {
						goto l365
					}
					position++
					if buffer[position] != rune('b') {
						goto l365
					}
					position++
					if buffer[position] != rune('t') {
						goto l365
					}
					position++
					if buffer[position] != rune('r') {
						goto l365
					}
					position++
					goto l359
				l365:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l366
					}
					position++
					if buffer[position] != rune('u') {
						goto l366
					}
					position++
					if buffer[position] != rune('b') {
						goto l366
					}
					position++
					if buffer[position] != rune('s') {
						goto l366
					}
					position++
					if buffer[position] != rune('e') {
						goto l366
					}
					position++
					if buffer[position] != rune('r') {
						goto l366
					}
					position++
					goto l359
				l366:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l367
					}
					position++
					if buffer[position] != rune('e') {
						goto l367
					}
					position++
					if buffer[position] != rune('r') {
						goto l367
					}
					position++
					goto l359
				l367:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l368
					}
					position++
					if buffer[position] != rune('u') {
						goto l368
					}
					position++
					if buffer[position] != rune('b') {
						goto l368
					}
					position++
					if buffer[position] != rune('g') {
						goto l368
					}
					position++
					if buffer[position] != rune('e') {
						goto l368
					}
					position++
					if buffer[position] != rune('n') {
						goto l368
					}
					position++
					goto l359
				l368:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l369
					}
					position++
					if buffer[position] != rune('u') {
						goto l369
					}
					position++
					if buffer[position] != rune('b') {
						goto l369
					}
					position++
					if buffer[position] != rune('g') {
						goto l369
					}
					position++
					goto l359
				l369:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('f') {
						goto l370
					}
					position++
					if buffer[position] != rune('a') {
						goto l370
					}
					position++
					if buffer[position] != rune('m') {
						goto l370
					}
					position++
					goto l359
				l370:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l371
					}
					position++
					if buffer[position] != rune('u') {
						goto l371
					}
					position++
					if buffer[position] != rune('b') {
						goto l371
					}
					position++
					if buffer[position] != rune('f') {
						goto l371
					}
					position++
					if buffer[position] != rune('a') {
						goto l371
					}
					position++
					if buffer[position] != rune('m') {
						goto l371
					}
					position++
					goto l359
				l371:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('d') {
						goto l372
					}
					position++
					if buffer[position] != rune('i') {
						goto l372
					}
					position++
					if buffer[position] != rune('v') {
						goto l372
					}
					position++
					goto l359
				l372:
					position, tokenIndex = position359, tokenIndex359
					if buffer[position] != rune('s') {
						goto l357
					}
					position++
					if buffer[position] != rune('u') {
						goto l357
					}
					position++
					if buffer[position] != rune('p') {
						goto l357
					}
					position++
					if buffer[position] != rune('e') {
						goto l357
					}
					position++
					if buffer[position] != rune('r') {
						goto l357
					}
					position++
					if buffer[position] != rune('t') {
						goto l357
					}
					position++
					if buffer[position] != rune('r') {
						goto l357
					}
					position++
					if buffer[position] != rune('i') {
						goto l357
					}
					position++
					if buffer[position] != rune('b') {
						goto l357
					}
					position++
				}
			l359:
				{
					position373, tokenIndex373 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l374
					}
					position++
					goto l373
				l374:
					position, tokenIndex = position373, tokenIndex373
					{
						position375, tokenIndex375 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l357
						}
						position, tokenIndex = position375, tokenIndex375
					}
				}
			l373:
				add(ruleRankUninomialPlain, position358)
			}
			return true
		l357:
			position, tokenIndex = position357, tokenIndex357
			return false
		},
		/* 51 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position376, tokenIndex376 := position, tokenIndex
			{
				position377 := position
				if buffer[position] != rune('n') {
					goto l376
				}
				position++
				if buffer[position] != rune('o') {
					goto l376
				}
				position++
				if buffer[position] != rune('t') {
					goto l376
				}
				position++
				if buffer[position] != rune('h') {
					goto l376
				}
				position++
				if buffer[position] != rune('o') {
					goto l376
				}
				position++
				{
					position378, tokenIndex378 := position, tokenIndex
					if !_rules[rule_]() {
						goto l378
					}
					goto l379
				l378:
					position, tokenIndex = position378, tokenIndex378
				}
			l379:
				{
					position380, tokenIndex380 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l381
					}
					position++
					if buffer[position] != rune('e') {
						goto l381
					}
					position++
					if buffer[position] != rune('c') {
						goto l381
					}
					position++
					if buffer[position] != rune('t') {
						goto l381
					}
					position++
					goto l380
				l381:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('g') {
						goto l382
					}
					position++
					if buffer[position] != rune('e') {
						goto l382
					}
					position++
					if buffer[position] != rune('n') {
						goto l382
					}
					position++
					goto l380
				l382:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('s') {
						goto l383
					}
					position++
					if buffer[position] != rune('e') {
						goto l383
					}
					position++
					if buffer[position] != rune('r') {
						goto l383
					}
					position++
					goto l380
				l383:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('s') {
						goto l384
					}
					position++
					if buffer[position] != rune('u') {
						goto l384
					}
					position++
					if buffer[position] != rune('b') {
						goto l384
					}
					position++
					if buffer[position] != rune('g') {
						goto l384
					}
					position++
					if buffer[position] != rune('e') {
						goto l384
					}
					position++
					if buffer[position] != rune('e') {
						goto l384
					}
					position++
					if buffer[position] != rune('n') {
						goto l384
					}
					position++
					goto l380
				l384:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('s') {
						goto l385
					}
					position++
					if buffer[position] != rune('u') {
						goto l385
					}
					position++
					if buffer[position] != rune('b') {
						goto l385
					}
					position++
					if buffer[position] != rune('g') {
						goto l385
					}
					position++
					if buffer[position] != rune('e') {
						goto l385
					}
					position++
					if buffer[position] != rune('n') {
						goto l385
					}
					position++
					goto l380
				l385:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('s') {
						goto l386
					}
					position++
					if buffer[position] != rune('u') {
						goto l386
					}
					position++
					if buffer[position] != rune('b') {
						goto l386
					}
					position++
					if buffer[position] != rune('g') {
						goto l386
					}
					position++
					goto l380
				l386:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('s') {
						goto l387
					}
					position++
					if buffer[position] != rune('u') {
						goto l387
					}
					position++
					if buffer[position] != rune('b') {
						goto l387
					}
					position++
					if buffer[position] != rune('s') {
						goto l387
					}
					position++
					if buffer[position] != rune('e') {
						goto l387
					}
					position++
					if buffer[position] != rune('c') {
						goto l387
					}
					position++
					if buffer[position] != rune('t') {
						goto l387
					}
					position++
					goto l380
				l387:
					position, tokenIndex = position380, tokenIndex380
					if buffer[position] != rune('s') {
						goto l376
					}
					position++
					if buffer[position] != rune('u') {
						goto l376
					}
					position++
					if buffer[position] != rune('b') {
						goto l376
					}
					position++
					if buffer[position] != rune('t') {
						goto l376
					}
					position++
					if buffer[position] != rune('r') {
						goto l376
					}
					position++
					if buffer[position] != rune('i') {
						goto l376
					}
					position++
					if buffer[position] != rune('b') {
						goto l376
					}
					position++
				}
			l380:
				{
					position388, tokenIndex388 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l389
					}
					position++
					goto l388
				l389:
					position, tokenIndex = position388, tokenIndex388
					{
						position390, tokenIndex390 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l376
						}
						position, tokenIndex = position390, tokenIndex390
					}
				}
			l388:
				add(ruleRankUninomialNotho, position377)
			}
			return true
		l376:
			position, tokenIndex = position376, tokenIndex376
			return false
		},
		/* 52 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position391, tokenIndex391 := position, tokenIndex
			{
				position392 := position
				if !_rules[ruleUninomialWord]() {
					goto l391
				}
				{
					position393, tokenIndex393 := position, tokenIndex
					if !_rules[rule_]() {
						goto l393
					}
					if !_rules[ruleAuthorship]() {
						goto l393
					}
					{
						position395, tokenIndex395 := position, tokenIndex
						if !_rules[rule_]() {
							goto l395
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l395
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l395
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l395
						}
						goto l393
					l395:
						position, tokenIndex = position395, tokenIndex395
					}
					goto l394
				l393:
					position, tokenIndex = position393, tokenIndex393
				}
			l394:
				add(ruleUninomial, position392)
			}
			return true
		l391:
			position, tokenIndex = position391, tokenIndex391
			return false
		},
		/* 53 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position396, tokenIndex396 := position, tokenIndex
			{
				position397 := position
				{
					position398, tokenIndex398 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l399
					}
					goto l398
				l399:
					position, tokenIndex = position398, tokenIndex398
					if !_rules[ruleTwoLetterGenus]() {
						goto l396
					}
				}
			l398:
				add(ruleUninomialWord, position397)
			}
			return true
		l396:
			position, tokenIndex = position396, tokenIndex396
			return false
		},
		/* 54 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position400, tokenIndex400 := position, tokenIndex
			{
				position401 := position
				if !_rules[ruleUpperChar]() {
					goto l400
				}
			l402:
				{
					position403, tokenIndex403 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l403
					}
					goto l402
				l403:
					position, tokenIndex = position403, tokenIndex403
				}
				if buffer[position] != rune('.') {
					goto l400
				}
				position++
				add(ruleAbbrSubgenus, position401)
			}
			return true
		l400:
			position, tokenIndex = position400, tokenIndex400
			return false
		},
		/* 55 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position404, tokenIndex404 := position, tokenIndex
			{
				position405 := position
				if !_rules[ruleUpperChar]() {
					goto l404
				}
				{
					position406, tokenIndex406 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l406
					}
					goto l407
				l406:
					position, tokenIndex = position406, tokenIndex406
				}
			l407:
				if buffer[position] != rune('.') {
					goto l404
				}
				position++
				add(ruleAbbrGenus, position405)
			}
			return true
		l404:
			position, tokenIndex = position404, tokenIndex404
			return false
		},
		/* 56 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position408, tokenIndex408 := position, tokenIndex
			{
				position409 := position
				{
					position410, tokenIndex410 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l411
					}
					goto l410
				l411:
					position, tokenIndex = position410, tokenIndex410
					if !_rules[ruleCapWord1]() {
						goto l408
					}
				}
			l410:
				add(ruleCapWord, position409)
			}
			return true
		l408:
			position, tokenIndex = position408, tokenIndex408
			return false
		},
		/* 57 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position412, tokenIndex412 := position, tokenIndex
			{
				position413 := position
				if !_rules[ruleNameUpperChar]() {
					goto l412
				}
				if !_rules[ruleNameLowerChar]() {
					goto l412
				}
				if !_rules[ruleNameLowerChar]() {
					goto l412
				}
			l414:
				{
					position415, tokenIndex415 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l415
					}
					goto l414
				l415:
					position, tokenIndex = position415, tokenIndex415
				}
				{
					position416, tokenIndex416 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l416
					}
					position++
					goto l417
				l416:
					position, tokenIndex = position416, tokenIndex416
				}
			l417:
				add(ruleCapWord1, position413)
			}
			return true
		l412:
			position, tokenIndex = position412, tokenIndex412
			return false
		},
		/* 58 CapWordWithDash <- <((CapWord1 / TwoLetterGenusDashedSegment) Dash WordAfterDash (Dash WordAfterDash)?)> */
		func() bool {
			position418, tokenIndex418 := position, tokenIndex
			{
				position419 := position
				{
					position420, tokenIndex420 := position, tokenIndex
					if !_rules[ruleCapWord1]() {
						goto l421
					}
					goto l420
				l421:
					position, tokenIndex = position420, tokenIndex420
					if !_rules[ruleTwoLetterGenusDashedSegment]() {
						goto l418
					}
				}
			l420:
				if !_rules[ruleDash]() {
					goto l418
				}
				if !_rules[ruleWordAfterDash]() {
					goto l418
				}
				{
					position422, tokenIndex422 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l422
					}
					if !_rules[ruleWordAfterDash]() {
						goto l422
					}
					goto l423
				l422:
					position, tokenIndex = position422, tokenIndex422
				}
			l423:
				add(ruleCapWordWithDash, position419)
			}
			return true
		l418:
			position, tokenIndex = position418, tokenIndex418
			return false
		},
		/* 59 TwoLetterGenusDashedSegment <- <(('D' 'e') / ('E' 'u') / ('L' 'e') / ('N' 'e'))> */
		func() bool {
			position424, tokenIndex424 := position, tokenIndex
			{
				position425 := position
				{
					position426, tokenIndex426 := position, tokenIndex
					if buffer[position] != rune('D') {
						goto l427
					}
					position++
					if buffer[position] != rune('e') {
						goto l427
					}
					position++
					goto l426
				l427:
					position, tokenIndex = position426, tokenIndex426
					if buffer[position] != rune('E') {
						goto l428
					}
					position++
					if buffer[position] != rune('u') {
						goto l428
					}
					position++
					goto l426
				l428:
					position, tokenIndex = position426, tokenIndex426
					if buffer[position] != rune('L') {
						goto l429
					}
					position++
					if buffer[position] != rune('e') {
						goto l429
					}
					position++
					goto l426
				l429:
					position, tokenIndex = position426, tokenIndex426
					if buffer[position] != rune('N') {
						goto l424
					}
					position++
					if buffer[position] != rune('e') {
						goto l424
					}
					position++
				}
			l426:
				add(ruleTwoLetterGenusDashedSegment, position425)
			}
			return true
		l424:
			position, tokenIndex = position424, tokenIndex424
			return false
		},
		/* 60 WordAfterDash <- <(UpperAfterDash / LowerAfterDash)> */
		func() bool {
			position430, tokenIndex430 := position, tokenIndex
			{
				position431 := position
				{
					position432, tokenIndex432 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l433
					}
					goto l432
				l433:
					position, tokenIndex = position432, tokenIndex432
					if !_rules[ruleLowerAfterDash]() {
						goto l430
					}
				}
			l432:
				add(ruleWordAfterDash, position431)
			}
			return true
		l430:
			position, tokenIndex = position430, tokenIndex430
			return false
		},
		/* 61 UpperAfterDash <- <CapWord1> */
		func() bool {
			position434, tokenIndex434 := position, tokenIndex
			{
				position435 := position
				if !_rules[ruleCapWord1]() {
					goto l434
				}
				add(ruleUpperAfterDash, position435)
			}
			return true
		l434:
			position, tokenIndex = position434, tokenIndex434
			return false
		},
		/* 62 LowerAfterDash <- <Word1> */
		func() bool {
			position436, tokenIndex436 := position, tokenIndex
			{
				position437 := position
				if !_rules[ruleWord1]() {
					goto l436
				}
				add(ruleLowerAfterDash, position437)
			}
			return true
		l436:
			position, tokenIndex = position436, tokenIndex436
			return false
		},
		/* 63 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position438, tokenIndex438 := position, tokenIndex
			{
				position439 := position
				{
					position440, tokenIndex440 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l441
					}
					position++
					if buffer[position] != rune('a') {
						goto l441
					}
					position++
					goto l440
				l441:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('D') {
						goto l442
					}
					position++
					if buffer[position] != rune('o') {
						goto l442
					}
					position++
					goto l440
				l442:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('E') {
						goto l443
					}
					position++
					if buffer[position] != rune('a') {
						goto l443
					}
					position++
					goto l440
				l443:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('G') {
						goto l444
					}
					position++
					if buffer[position] != rune('e') {
						goto l444
					}
					position++
					goto l440
				l444:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('I') {
						goto l445
					}
					position++
					if buffer[position] != rune('a') {
						goto l445
					}
					position++
					goto l440
				l445:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('I') {
						goto l446
					}
					position++
					if buffer[position] != rune('o') {
						goto l446
					}
					position++
					goto l440
				l446:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('I') {
						goto l447
					}
					position++
					if buffer[position] != rune('x') {
						goto l447
					}
					position++
					goto l440
				l447:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('L') {
						goto l448
					}
					position++
					if buffer[position] != rune('o') {
						goto l448
					}
					position++
					goto l440
				l448:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('O') {
						goto l449
					}
					position++
					if buffer[position] != rune('a') {
						goto l449
					}
					position++
					goto l440
				l449:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('O') {
						goto l450
					}
					position++
					if buffer[position] != rune('o') {
						goto l450
					}
					position++
					goto l440
				l450:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('N') {
						goto l451
					}
					position++
					if buffer[position] != rune('u') {
						goto l451
					}
					position++
					goto l440
				l451:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('R') {
						goto l452
					}
					position++
					if buffer[position] != rune('a') {
						goto l452
					}
					position++
					goto l440
				l452:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('T') {
						goto l453
					}
					position++
					if buffer[position] != rune('y') {
						goto l453
					}
					position++
					goto l440
				l453:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('U') {
						goto l454
					}
					position++
					if buffer[position] != rune('a') {
						goto l454
					}
					position++
					goto l440
				l454:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('A') {
						goto l455
					}
					position++
					if buffer[position] != rune('a') {
						goto l455
					}
					position++
					goto l440
				l455:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('J') {
						goto l456
					}
					position++
					if buffer[position] != rune('a') {
						goto l456
					}
					position++
					goto l440
				l456:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('Z') {
						goto l457
					}
					position++
					if buffer[position] != rune('u') {
						goto l457
					}
					position++
					goto l440
				l457:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('L') {
						goto l458
					}
					position++
					if buffer[position] != rune('a') {
						goto l458
					}
					position++
					goto l440
				l458:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('Q') {
						goto l459
					}
					position++
					if buffer[position] != rune('u') {
						goto l459
					}
					position++
					goto l440
				l459:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('A') {
						goto l460
					}
					position++
					if buffer[position] != rune('s') {
						goto l460
					}
					position++
					goto l440
				l460:
					position, tokenIndex = position440, tokenIndex440
					if buffer[position] != rune('B') {
						goto l438
					}
					position++
					if buffer[position] != rune('a') {
						goto l438
					}
					position++
				}
			l440:
				add(ruleTwoLetterGenus, position439)
			}
			return true
		l438:
			position, tokenIndex = position438, tokenIndex438
			return false
		},
		/* 64 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position461, tokenIndex461 := position, tokenIndex
			{
				position462 := position
				{
					position463, tokenIndex463 := position, tokenIndex
					{
						position464, tokenIndex464 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l465
						}
						position++
						if buffer[position] != rune('x') {
							goto l465
						}
						position++
						goto l464
					l465:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('e') {
							goto l466
						}
						position++
						if buffer[position] != rune('t') {
							goto l466
						}
						position++
						goto l464
					l466:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('a') {
							goto l467
						}
						position++
						if buffer[position] != rune('n') {
							goto l467
						}
						position++
						if buffer[position] != rune('d') {
							goto l467
						}
						position++
						goto l464
					l467:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('a') {
							goto l468
						}
						position++
						if buffer[position] != rune('p') {
							goto l468
						}
						position++
						if buffer[position] != rune('u') {
							goto l468
						}
						position++
						if buffer[position] != rune('d') {
							goto l468
						}
						position++
						goto l464
					l468:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('p') {
							goto l469
						}
						position++
						if buffer[position] != rune('r') {
							goto l469
						}
						position++
						if buffer[position] != rune('o') {
							goto l469
						}
						position++
						goto l464
					l469:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('c') {
							goto l470
						}
						position++
						if buffer[position] != rune('v') {
							goto l470
						}
						position++
						goto l464
					l470:
						position, tokenIndex = position464, tokenIndex464
						if buffer[position] != rune('c') {
							goto l471
						}
						position++
						if buffer[position] != rune('u') {
							goto l471
						}
						position++
						if buffer[position] != rune('l') {
							goto l471
						}
						position++
						if buffer[position] != rune('t') {
							goto l471
						}
						position++
						if buffer[position] != rune('i') {
							goto l471
						}
						position++
						if buffer[position] != rune('v') {
							goto l471
						}
						position++
						if buffer[position] != rune('a') {
							goto l471
						}
						position++
						if buffer[position] != rune('r') {
							goto l471
						}
						position++
						goto l464
					l471:
						position, tokenIndex = position464, tokenIndex464
						if !_rules[ruleAuthorPrefix]() {
							goto l472
						}
						goto l464
					l472:
						position, tokenIndex = position464, tokenIndex464
						if !_rules[ruleRankUninomial]() {
							goto l473
						}
						goto l464
					l473:
						position, tokenIndex = position464, tokenIndex464
						if !_rules[ruleApproximation]() {
							goto l474
						}
						goto l464
					l474:
						position, tokenIndex = position464, tokenIndex464
						if !_rules[ruleWord4]() {
							goto l463
						}
					}
				l464:
					if !_rules[ruleSpaceCharEOI]() {
						goto l463
					}
					goto l461
				l463:
					position, tokenIndex = position463, tokenIndex463
				}
				{
					position475, tokenIndex475 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l476
					}
					goto l475
				l476:
					position, tokenIndex = position475, tokenIndex475
					if !_rules[ruleWordStartsWithDigit]() {
						goto l477
					}
					goto l475
				l477:
					position, tokenIndex = position475, tokenIndex475
					if !_rules[ruleMultiDashedWord]() {
						goto l478
					}
					goto l475
				l478:
					position, tokenIndex = position475, tokenIndex475
					if !_rules[ruleWord2]() {
						goto l479
					}
					goto l475
				l479:
					position, tokenIndex = position475, tokenIndex475
					if !_rules[ruleWord1]() {
						goto l461
					}
				}
			l475:
				{
					position480, tokenIndex480 := position, tokenIndex
					{
						position481, tokenIndex481 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l482
						}
						goto l481
					l482:
						position, tokenIndex = position481, tokenIndex481
						if buffer[position] != rune('(') {
							goto l461
						}
						position++
					}
				l481:
					position, tokenIndex = position480, tokenIndex480
				}
				add(ruleWord, position462)
			}
			return true
		l461:
			position, tokenIndex = position461, tokenIndex461
			return false
		},
		/* 65 Word1 <- <(((DotPrefix / LowerASCII) Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position483, tokenIndex483 := position, tokenIndex
			{
				position484 := position
				{
					position485, tokenIndex485 := position, tokenIndex
					{
						position487, tokenIndex487 := position, tokenIndex
						if !_rules[ruleDotPrefix]() {
							goto l488
						}
						goto l487
					l488:
						position, tokenIndex = position487, tokenIndex487
						if !_rules[ruleLowerASCII]() {
							goto l485
						}
					}
				l487:
					if !_rules[ruleDash]() {
						goto l485
					}
					goto l486
				l485:
					position, tokenIndex = position485, tokenIndex485
				}
			l486:
				if !_rules[ruleNameLowerChar]() {
					goto l483
				}
				if !_rules[ruleNameLowerChar]() {
					goto l483
				}
			l489:
				{
					position490, tokenIndex490 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l490
					}
					goto l489
				l490:
					position, tokenIndex = position490, tokenIndex490
				}
				add(ruleWord1, position484)
			}
			return true
		l483:
			position, tokenIndex = position483, tokenIndex483
			return false
		},
		/* 66 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position491, tokenIndex491 := position, tokenIndex
			{
				position492 := position
				{
					position493, tokenIndex493 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l494
					}
					position++
					goto l493
				l494:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('2') {
						goto l495
					}
					position++
					goto l493
				l495:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('3') {
						goto l496
					}
					position++
					goto l493
				l496:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('4') {
						goto l497
					}
					position++
					goto l493
				l497:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('5') {
						goto l498
					}
					position++
					goto l493
				l498:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('6') {
						goto l499
					}
					position++
					goto l493
				l499:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('7') {
						goto l500
					}
					position++
					goto l493
				l500:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('8') {
						goto l501
					}
					position++
					goto l493
				l501:
					position, tokenIndex = position493, tokenIndex493
					if buffer[position] != rune('9') {
						goto l491
					}
					position++
				}
			l493:
				{
					position502, tokenIndex502 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l502
					}
					goto l503
				l502:
					position, tokenIndex = position502, tokenIndex502
				}
			l503:
				{
					position504, tokenIndex504 := position, tokenIndex
					{
						position506, tokenIndex506 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l507
						}
						position++
						goto l506
					l507:
						position, tokenIndex = position506, tokenIndex506
						if !_rules[ruleDash]() {
							goto l504
						}
					}
				l506:
					goto l505
				l504:
					position, tokenIndex = position504, tokenIndex504
				}
			l505:
				if !_rules[ruleNameLowerChar]() {
					goto l491
				}
				if !_rules[ruleNameLowerChar]() {
					goto l491
				}
				if !_rules[ruleNameLowerChar]() {
					goto l491
				}
				if !_rules[ruleNameLowerChar]() {
					goto l491
				}
			l508:
				{
					position509, tokenIndex509 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l509
					}
					goto l508
				l509:
					position, tokenIndex = position509, tokenIndex509
				}
				add(ruleWordStartsWithDigit, position492)
			}
			return true
		l491:
			position, tokenIndex = position491, tokenIndex491
			return false
		},
		/* 67 Word2 <- <(NameLowerChar+ Dash? (WordApostr / NameLowerChar+))> */
		func() bool {
			position510, tokenIndex510 := position, tokenIndex
			{
				position511 := position
				if !_rules[ruleNameLowerChar]() {
					goto l510
				}
			l512:
				{
					position513, tokenIndex513 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l513
					}
					goto l512
				l513:
					position, tokenIndex = position513, tokenIndex513
				}
				{
					position514, tokenIndex514 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l514
					}
					goto l515
				l514:
					position, tokenIndex = position514, tokenIndex514
				}
			l515:
				{
					position516, tokenIndex516 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l517
					}
					goto l516
				l517:
					position, tokenIndex = position516, tokenIndex516
					if !_rules[ruleNameLowerChar]() {
						goto l510
					}
				l518:
					{
						position519, tokenIndex519 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l519
						}
						goto l518
					l519:
						position, tokenIndex = position519, tokenIndex519
					}
				}
			l516:
				add(ruleWord2, position511)
			}
			return true
		l510:
			position, tokenIndex = position510, tokenIndex510
			return false
		},
		/* 68 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position520, tokenIndex520 := position, tokenIndex
			{
				position521 := position
				if !_rules[ruleNameLowerChar]() {
					goto l520
				}
			l522:
				{
					position523, tokenIndex523 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l523
					}
					goto l522
				l523:
					position, tokenIndex = position523, tokenIndex523
				}
				if !_rules[ruleApostrophe]() {
					goto l520
				}
				if !_rules[ruleWord1]() {
					goto l520
				}
				add(ruleWordApostr, position521)
			}
			return true
		l520:
			position, tokenIndex = position520, tokenIndex520
			return false
		},
		/* 69 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position524, tokenIndex524 := position, tokenIndex
			{
				position525 := position
				if !_rules[ruleNameLowerChar]() {
					goto l524
				}
			l526:
				{
					position527, tokenIndex527 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l527
					}
					goto l526
				l527:
					position, tokenIndex = position527, tokenIndex527
				}
				if buffer[position] != rune('.') {
					goto l524
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l524
				}
				add(ruleWord4, position525)
			}
			return true
		l524:
			position, tokenIndex = position524, tokenIndex524
			return false
		},
		/* 70 DotPrefix <- <('s' 't' '.')> */
		func() bool {
			position528, tokenIndex528 := position, tokenIndex
			{
				position529 := position
				if buffer[position] != rune('s') {
					goto l528
				}
				position++
				if buffer[position] != rune('t') {
					goto l528
				}
				position++
				if buffer[position] != rune('.') {
					goto l528
				}
				position++
				add(ruleDotPrefix, position529)
			}
			return true
		l528:
			position, tokenIndex = position528, tokenIndex528
			return false
		},
		/* 71 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position530, tokenIndex530 := position, tokenIndex
			{
				position531 := position
				if !_rules[ruleNameLowerChar]() {
					goto l530
				}
			l532:
				{
					position533, tokenIndex533 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l533
					}
					goto l532
				l533:
					position, tokenIndex = position533, tokenIndex533
				}
				if !_rules[ruleDash]() {
					goto l530
				}
				if !_rules[ruleNameLowerChar]() {
					goto l530
				}
			l534:
				{
					position535, tokenIndex535 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l535
					}
					goto l534
				l535:
					position, tokenIndex = position535, tokenIndex535
				}
				if !_rules[ruleDash]() {
					goto l530
				}
				if !_rules[ruleNameLowerChar]() {
					goto l530
				}
			l536:
				{
					position537, tokenIndex537 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l537
					}
					goto l536
				l537:
					position, tokenIndex = position537, tokenIndex537
				}
				{
					position538, tokenIndex538 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l538
					}
					if !_rules[ruleNameLowerChar]() {
						goto l538
					}
				l540:
					{
						position541, tokenIndex541 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l541
						}
						goto l540
					l541:
						position, tokenIndex = position541, tokenIndex541
					}
					goto l539
				l538:
					position, tokenIndex = position538, tokenIndex538
				}
			l539:
				add(ruleMultiDashedWord, position531)
			}
			return true
		l530:
			position, tokenIndex = position530, tokenIndex530
			return false
		},
		/* 72 HybridChar <- <('×' / (('x' / 'X') &_) / (('x' / 'X') &UninomialWord) / (('x' / 'X') &END))> */
		func() bool {
			position542, tokenIndex542 := position, tokenIndex
			{
				position543 := position
				{
					position544, tokenIndex544 := position, tokenIndex
					if buffer[position] != rune('×') {
						goto l545
					}
					position++
					goto l544
				l545:
					position, tokenIndex = position544, tokenIndex544
					{
						position547, tokenIndex547 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l548
						}
						position++
						goto l547
					l548:
						position, tokenIndex = position547, tokenIndex547
						if buffer[position] != rune('X') {
							goto l546
						}
						position++
					}
				l547:
					{
						position549, tokenIndex549 := position, tokenIndex
						if !_rules[rule_]() {
							goto l546
						}
						position, tokenIndex = position549, tokenIndex549
					}
					goto l544
				l546:
					position, tokenIndex = position544, tokenIndex544
					{
						position551, tokenIndex551 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l552
						}
						position++
						goto l551
					l552:
						position, tokenIndex = position551, tokenIndex551
						if buffer[position] != rune('X') {
							goto l550
						}
						position++
					}
				l551:
					{
						position553, tokenIndex553 := position, tokenIndex
						if !_rules[ruleUninomialWord]() {
							goto l550
						}
						position, tokenIndex = position553, tokenIndex553
					}
					goto l544
				l550:
					position, tokenIndex = position544, tokenIndex544
					{
						position554, tokenIndex554 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l555
						}
						position++
						goto l554
					l555:
						position, tokenIndex = position554, tokenIndex554
						if buffer[position] != rune('X') {
							goto l542
						}
						position++
					}
				l554:
					{
						position556, tokenIndex556 := position, tokenIndex
						if !_rules[ruleEND]() {
							goto l542
						}
						position, tokenIndex = position556, tokenIndex556
					}
				}
			l544:
				add(ruleHybridChar, position543)
			}
			return true
		l542:
			position, tokenIndex = position542, tokenIndex542
			return false
		},
		/* 73 GraftChimeraChar <- <'+'> */
		func() bool {
			position557, tokenIndex557 := position, tokenIndex
			{
				position558 := position
				if buffer[position] != rune('+') {
					goto l557
				}
				position++
				add(ruleGraftChimeraChar, position558)
			}
			return true
		l557:
			position, tokenIndex = position557, tokenIndex557
			return false
		},
		/* 74 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position560 := position
			l561:
				{
					position562, tokenIndex562 := position, tokenIndex
					if !matchDot() {
						goto l562
					}
					goto l561
				l562:
					position, tokenIndex = position562, tokenIndex562
				}
				add(ruleApproxNameIgnored, position560)
			}
			return true
		},
		/* 75 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position563, tokenIndex563 := position, tokenIndex
			{
				position564 := position
				{
					position565, tokenIndex565 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l566
					}
					position++
					if buffer[position] != rune('p') {
						goto l566
					}
					position++
					if buffer[position] != rune('.') {
						goto l566
					}
					position++
					{
						position567, tokenIndex567 := position, tokenIndex
						if !_rules[rule_]() {
							goto l567
						}
						goto l568
					l567:
						position, tokenIndex = position567, tokenIndex567
					}
				l568:
					if buffer[position] != rune('n') {
						goto l566
					}
					position++
					if buffer[position] != rune('r') {
						goto l566
					}
					position++
					if buffer[position] != rune('.') {
						goto l566
					}
					position++
					goto l565
				l566:
					position, tokenIndex = position565, tokenIndex565
					if buffer[position] != rune('s') {
						goto l569
					}
					position++
					if buffer[position] != rune('p') {
						goto l569
					}
					position++
					if buffer[position] != rune('.') {
						goto l569
					}
					position++
					{
						position570, tokenIndex570 := position, tokenIndex
						if !_rules[rule_]() {
							goto l570
						}
						goto l571
					l570:
						position, tokenIndex = position570, tokenIndex570
					}
				l571:
					if buffer[position] != rune('a') {
						goto l569
					}
					position++
					if buffer[position] != rune('f') {
						goto l569
					}
					position++
					if buffer[position] != rune('f') {
						goto l569
					}
					position++
					if buffer[position] != rune('.') {
						goto l569
					}
					position++
					goto l565
				l569:
					position, tokenIndex = position565, tokenIndex565
					if buffer[position] != rune('m') {
						goto l572
					}
					position++
					if buffer[position] != rune('o') {
						goto l572
					}
					position++
					if buffer[position] != rune('n') {
						goto l572
					}
					position++
					if buffer[position] != rune('s') {
						goto l572
					}
					position++
					if buffer[position] != rune('t') {
						goto l572
					}
					position++
					if buffer[position] != rune('.') {
						goto l572
					}
					position++
					goto l565
				l572:
					position, tokenIndex = position565, tokenIndex565
					if buffer[position] != rune('?') {
						goto l573
					}
					position++
					goto l565
				l573:
					position, tokenIndex = position565, tokenIndex565
					{
						position574, tokenIndex574 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l575
						}
						position++
						if buffer[position] != rune('p') {
							goto l575
						}
						position++
						if buffer[position] != rune('p') {
							goto l575
						}
						position++
						goto l574
					l575:
						position, tokenIndex = position574, tokenIndex574
						if buffer[position] != rune('n') {
							goto l576
						}
						position++
						if buffer[position] != rune('r') {
							goto l576
						}
						position++
						goto l574
					l576:
						position, tokenIndex = position574, tokenIndex574
						if buffer[position] != rune('s') {
							goto l577
						}
						position++
						if buffer[position] != rune('p') {
							goto l577
						}
						position++
						goto l574
					l577:
						position, tokenIndex = position574, tokenIndex574
						if buffer[position] != rune('a') {
							goto l578
						}
						position++
						if buffer[position] != rune('f') {
							goto l578
						}
						position++
						if buffer[position] != rune('f') {
							goto l578
						}
						position++
						goto l574
					l578:
						position, tokenIndex = position574, tokenIndex574
						if buffer[position] != rune('s') {
							goto l563
						}
						position++
						if buffer[position] != rune('p') {
							goto l563
						}
						position++
						if buffer[position] != rune('e') {
							goto l563
						}
						position++
						if buffer[position] != rune('c') {
							goto l563
						}
						position++
						if buffer[position] != rune('i') {
							goto l563
						}
						position++
						if buffer[position] != rune('e') {
							goto l563
						}
						position++
						if buffer[position] != rune('s') {
							goto l563
						}
						position++
					}
				l574:
					{
						position579, tokenIndex579 := position, tokenIndex
						{
							position581, tokenIndex581 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l580
							}
							position, tokenIndex = position581, tokenIndex581
						}
						goto l579
					l580:
						position, tokenIndex = position579, tokenIndex579
						if buffer[position] != rune('.') {
							goto l563
						}
						position++
					}
				l579:
				}
			l565:
				add(ruleApproximation, position564)
			}
			return true
		l563:
			position, tokenIndex = position563, tokenIndex563
			return false
		},
		/* 76 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position582, tokenIndex582 := position, tokenIndex
			{
				position583 := position
				{
					position584, tokenIndex584 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l585
					}
					goto l584
				l585:
					position, tokenIndex = position584, tokenIndex584
					if !_rules[ruleOriginalAuthorship]() {
						goto l582
					}
				}
			l584:
				{
					position586, tokenIndex586 := position, tokenIndex
					{
						position587, tokenIndex587 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l588
						}
						goto l587
					l588:
						position, tokenIndex = position587, tokenIndex587
						if buffer[position] != rune(';') {
							goto l589
						}
						position++
						goto l587
					l589:
						position, tokenIndex = position587, tokenIndex587
						if buffer[position] != rune(',') {
							goto l582
						}
						position++
					}
				l587:
					position, tokenIndex = position586, tokenIndex586
				}
				add(ruleAuthorship, position583)
			}
			return true
		l582:
			position, tokenIndex = position582, tokenIndex582
			return false
		},
		/* 77 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position590, tokenIndex590 := position, tokenIndex
			{
				position591 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l590
				}
				{
					position592, tokenIndex592 := position, tokenIndex
					{
						position594, tokenIndex594 := position, tokenIndex
						if !_rules[rule_]() {
							goto l594
						}
						goto l595
					l594:
						position, tokenIndex = position594, tokenIndex594
					}
				l595:
					if !_rules[ruleCombinationAuthorship]() {
						goto l592
					}
					goto l593
				l592:
					position, tokenIndex = position592, tokenIndex592
				}
			l593:
				add(ruleAuthorshipCombo, position591)
			}
			return true
		l590:
			position, tokenIndex = position590, tokenIndex590
			return false
		},
		/* 78 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position596, tokenIndex596 := position, tokenIndex
			{
				position597 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l596
				}
				add(ruleOriginalAuthorship, position597)
			}
			return true
		l596:
			position, tokenIndex = position596, tokenIndex596
			return false
		},
		/* 79 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position598, tokenIndex598 := position, tokenIndex
			{
				position599 := position
				{
					position600, tokenIndex600 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l601
					}
					goto l600
				l601:
					position, tokenIndex = position600, tokenIndex600
					if !_rules[ruleBasionymAuthorship]() {
						goto l602
					}
					goto l600
				l602:
					position, tokenIndex = position600, tokenIndex600
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l598
					}
				}
			l600:
				add(ruleOriginalAuthorshipComb, position599)
			}
			return true
		l598:
			position, tokenIndex = position598, tokenIndex598
			return false
		},
		/* 80 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position603, tokenIndex603 := position, tokenIndex
			{
				position604 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l603
				}
				add(ruleCombinationAuthorship, position604)
			}
			return true
		l603:
			position, tokenIndex = position603, tokenIndex603
			return false
		},
		/* 81 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position605, tokenIndex605 := position, tokenIndex
			{
				position606 := position
				{
					position607, tokenIndex607 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l608
					}
					goto l607
				l608:
					position, tokenIndex = position607, tokenIndex607
					if !_rules[ruleMissingParensEnd]() {
						goto l605
					}
				}
			l607:
				add(ruleBasionymAuthorshipMissingParens, position606)
			}
			return true
		l605:
			position, tokenIndex = position605, tokenIndex605
			return false
		},
		/* 82 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position609, tokenIndex609 := position, tokenIndex
			{
				position610 := position
				if buffer[position] != rune('(') {
					goto l609
				}
				position++
				{
					position611, tokenIndex611 := position, tokenIndex
					if !_rules[rule_]() {
						goto l611
					}
					goto l612
				l611:
					position, tokenIndex = position611, tokenIndex611
				}
			l612:
				if !_rules[ruleAuthorsGroup]() {
					goto l609
				}
				add(ruleMissingParensStart, position610)
			}
			return true
		l609:
			position, tokenIndex = position609, tokenIndex609
			return false
		},
		/* 83 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position613, tokenIndex613 := position, tokenIndex
			{
				position614 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l613
				}
				{
					position615, tokenIndex615 := position, tokenIndex
					if !_rules[rule_]() {
						goto l615
					}
					goto l616
				l615:
					position, tokenIndex = position615, tokenIndex615
				}
			l616:
				if buffer[position] != rune(')') {
					goto l613
				}
				position++
				add(ruleMissingParensEnd, position614)
			}
			return true
		l613:
			position, tokenIndex = position613, tokenIndex613
			return false
		},
		/* 84 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position617, tokenIndex617 := position, tokenIndex
			{
				position618 := position
				if buffer[position] != rune('(') {
					goto l617
				}
				position++
				{
					position619, tokenIndex619 := position, tokenIndex
					if !_rules[rule_]() {
						goto l619
					}
					goto l620
				l619:
					position, tokenIndex = position619, tokenIndex619
				}
			l620:
				if !_rules[ruleAuthorsGroup]() {
					goto l617
				}
				{
					position621, tokenIndex621 := position, tokenIndex
					if !_rules[rule_]() {
						goto l621
					}
					goto l622
				l621:
					position, tokenIndex = position621, tokenIndex621
				}
			l622:
				if buffer[position] != rune(')') {
					goto l617
				}
				position++
				{
					position623, tokenIndex623 := position, tokenIndex
					{
						position625, tokenIndex625 := position, tokenIndex
						if !_rules[rule_]() {
							goto l625
						}
						goto l626
					l625:
						position, tokenIndex = position625, tokenIndex625
					}
				l626:
					if buffer[position] != rune(',') {
						goto l623
					}
					position++
					goto l624
				l623:
					position, tokenIndex = position623, tokenIndex623
				}
			l624:
				{
					position627, tokenIndex627 := position, tokenIndex
					if !_rules[rule_]() {
						goto l627
					}
					goto l628
				l627:
					position, tokenIndex = position627, tokenIndex627
				}
			l628:
				if !_rules[ruleYear]() {
					goto l617
				}
				add(ruleBasionymAuthorshipYearMisformed, position618)
			}
			return true
		l617:
			position, tokenIndex = position617, tokenIndex617
			return false
		},
		/* 85 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position629, tokenIndex629 := position, tokenIndex
			{
				position630 := position
				{
					position631, tokenIndex631 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l632
					}
					goto l631
				l632:
					position, tokenIndex = position631, tokenIndex631
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l629
					}
				}
			l631:
				add(ruleBasionymAuthorship, position630)
			}
			return true
		l629:
			position, tokenIndex = position629, tokenIndex629
			return false
		},
		/* 86 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position633, tokenIndex633 := position, tokenIndex
			{
				position634 := position
				if buffer[position] != rune('(') {
					goto l633
				}
				position++
				{
					position635, tokenIndex635 := position, tokenIndex
					if !_rules[rule_]() {
						goto l635
					}
					goto l636
				l635:
					position, tokenIndex = position635, tokenIndex635
				}
			l636:
				if !_rules[ruleAuthorsGroup]() {
					goto l633
				}
				{
					position637, tokenIndex637 := position, tokenIndex
					if !_rules[rule_]() {
						goto l637
					}
					goto l638
				l637:
					position, tokenIndex = position637, tokenIndex637
				}
			l638:
				if buffer[position] != rune(')') {
					goto l633
				}
				position++
				add(ruleBasionymAuthorship1, position634)
			}
			return true
		l633:
			position, tokenIndex = position633, tokenIndex633
			return false
		},
		/* 87 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position639, tokenIndex639 := position, tokenIndex
			{
				position640 := position
				if buffer[position] != rune('(') {
					goto l639
				}
				position++
				{
					position641, tokenIndex641 := position, tokenIndex
					if !_rules[rule_]() {
						goto l641
					}
					goto l642
				l641:
					position, tokenIndex = position641, tokenIndex641
				}
			l642:
				if buffer[position] != rune('(') {
					goto l639
				}
				position++
				{
					position643, tokenIndex643 := position, tokenIndex
					if !_rules[rule_]() {
						goto l643
					}
					goto l644
				l643:
					position, tokenIndex = position643, tokenIndex643
				}
			l644:
				if !_rules[ruleAuthorsGroup]() {
					goto l639
				}
				{
					position645, tokenIndex645 := position, tokenIndex
					if !_rules[rule_]() {
						goto l645
					}
					goto l646
				l645:
					position, tokenIndex = position645, tokenIndex645
				}
			l646:
				if buffer[position] != rune(')') {
					goto l639
				}
				position++
				{
					position647, tokenIndex647 := position, tokenIndex
					if !_rules[rule_]() {
						goto l647
					}
					goto l648
				l647:
					position, tokenIndex = position647, tokenIndex647
				}
			l648:
				if buffer[position] != rune(')') {
					goto l639
				}
				position++
				add(ruleBasionymAuthorship2Parens, position640)
			}
			return true
		l639:
			position, tokenIndex = position639, tokenIndex639
			return false
		},
		/* 88 AuthorsGroup <- <(AuthorsTeam (','? _ (AuthorEmend / AuthorEx / AuthorIn) AuthorsTeam)?)> */
		func() bool {
			position649, tokenIndex649 := position, tokenIndex
			{
				position650 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l649
				}
				{
					position651, tokenIndex651 := position, tokenIndex
					{
						position653, tokenIndex653 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l653
						}
						position++
						goto l654
					l653:
						position, tokenIndex = position653, tokenIndex653
					}
				l654:
					if !_rules[rule_]() {
						goto l651
					}
					{
						position655, tokenIndex655 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l656
						}
						goto l655
					l656:
						position, tokenIndex = position655, tokenIndex655
						if !_rules[ruleAuthorEx]() {
							goto l657
						}
						goto l655
					l657:
						position, tokenIndex = position655, tokenIndex655
						if !_rules[ruleAuthorIn]() {
							goto l651
						}
					}
				l655:
					if !_rules[ruleAuthorsTeam]() {
						goto l651
					}
					goto l652
				l651:
					position, tokenIndex = position651, tokenIndex651
				}
			l652:
				add(ruleAuthorsGroup, position650)
			}
			return true
		l649:
			position, tokenIndex = position649, tokenIndex649
			return false
		},
		/* 89 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position658, tokenIndex658 := position, tokenIndex
			{
				position659 := position
				if !_rules[ruleAuthor]() {
					goto l658
				}
			l660:
				{
					position661, tokenIndex661 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l661
					}
					if !_rules[ruleAuthor]() {
						goto l661
					}
					goto l660
				l661:
					position, tokenIndex = position661, tokenIndex661
				}
				{
					position662, tokenIndex662 := position, tokenIndex
					{
						position664, tokenIndex664 := position, tokenIndex
						if !_rules[rule_]() {
							goto l664
						}
						goto l665
					l664:
						position, tokenIndex = position664, tokenIndex664
					}
				l665:
					{
						position666, tokenIndex666 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l666
						}
						position++
						goto l667
					l666:
						position, tokenIndex = position666, tokenIndex666
					}
				l667:
					{
						position668, tokenIndex668 := position, tokenIndex
						if !_rules[rule_]() {
							goto l668
						}
						goto l669
					l668:
						position, tokenIndex = position668, tokenIndex668
					}
				l669:
					if !_rules[ruleYear]() {
						goto l662
					}
					goto l663
				l662:
					position, tokenIndex = position662, tokenIndex662
				}
			l663:
				add(ruleAuthorsTeam, position659)
			}
			return true
		l658:
			position, tokenIndex = position658, tokenIndex658
			return false
		},
		/* 90 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position670, tokenIndex670 := position, tokenIndex
			{
				position671 := position
				{
					position672, tokenIndex672 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l673
					}
					goto l672
				l673:
					position, tokenIndex = position672, tokenIndex672
					if !_rules[ruleAuthorSep2]() {
						goto l670
					}
				}
			l672:
				add(ruleAuthorSep, position671)
			}
			return true
		l670:
			position, tokenIndex = position670, tokenIndex670
			return false
		},
		/* 91 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position674, tokenIndex674 := position, tokenIndex
			{
				position675 := position
				{
					position676, tokenIndex676 := position, tokenIndex
					if !_rules[rule_]() {
						goto l676
					}
					goto l677
				l676:
					position, tokenIndex = position676, tokenIndex676
				}
			l677:
				{
					position678, tokenIndex678 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l678
					}
					position++
					if !_rules[rule_]() {
						goto l678
					}
					goto l679
				l678:
					position, tokenIndex = position678, tokenIndex678
				}
			l679:
				{
					position680, tokenIndex680 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l681
					}
					position++
					goto l680
				l681:
					position, tokenIndex = position680, tokenIndex680
					if !_rules[ruleAuthorSepSpanish]() {
						goto l682
					}
					goto l680
				l682:
					position, tokenIndex = position680, tokenIndex680
					if buffer[position] != rune('e') {
						goto l683
					}
					position++
					if buffer[position] != rune('t') {
						goto l683
					}
					position++
					goto l680
				l683:
					position, tokenIndex = position680, tokenIndex680
					if buffer[position] != rune('a') {
						goto l684
					}
					position++
					if buffer[position] != rune('n') {
						goto l684
					}
					position++
					if buffer[position] != rune('d') {
						goto l684
					}
					position++
					goto l680
				l684:
					position, tokenIndex = position680, tokenIndex680
					if buffer[position] != rune('a') {
						goto l674
					}
					position++
					if buffer[position] != rune('p') {
						goto l674
					}
					position++
					if buffer[position] != rune('u') {
						goto l674
					}
					position++
					if buffer[position] != rune('d') {
						goto l674
					}
					position++
				}
			l680:
				{
					position685, tokenIndex685 := position, tokenIndex
					if !_rules[rule_]() {
						goto l685
					}
					goto l686
				l685:
					position, tokenIndex = position685, tokenIndex685
				}
			l686:
				add(ruleAuthorSep1, position675)
			}
			return true
		l674:
			position, tokenIndex = position674, tokenIndex674
			return false
		},
		/* 92 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position687, tokenIndex687 := position, tokenIndex
			{
				position688 := position
				{
					position689, tokenIndex689 := position, tokenIndex
					if !_rules[rule_]() {
						goto l689
					}
					goto l690
				l689:
					position, tokenIndex = position689, tokenIndex689
				}
			l690:
				if buffer[position] != rune(',') {
					goto l687
				}
				position++
				{
					position691, tokenIndex691 := position, tokenIndex
					if !_rules[rule_]() {
						goto l691
					}
					goto l692
				l691:
					position, tokenIndex = position691, tokenIndex691
				}
			l692:
				add(ruleAuthorSep2, position688)
			}
			return true
		l687:
			position, tokenIndex = position687, tokenIndex687
			return false
		},
		/* 93 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position693, tokenIndex693 := position, tokenIndex
			{
				position694 := position
				{
					position695, tokenIndex695 := position, tokenIndex
					if !_rules[rule_]() {
						goto l695
					}
					goto l696
				l695:
					position, tokenIndex = position695, tokenIndex695
				}
			l696:
				if buffer[position] != rune('y') {
					goto l693
				}
				position++
				{
					position697, tokenIndex697 := position, tokenIndex
					if !_rules[rule_]() {
						goto l697
					}
					goto l698
				l697:
					position, tokenIndex = position697, tokenIndex697
				}
			l698:
				add(ruleAuthorSepSpanish, position694)
			}
			return true
		l693:
			position, tokenIndex = position693, tokenIndex693
			return false
		},
		/* 94 AuthorEx <- <('e' 'x' '.'? _)> */
		func() bool {
			position699, tokenIndex699 := position, tokenIndex
			{
				position700 := position
				if buffer[position] != rune('e') {
					goto l699
				}
				position++
				if buffer[position] != rune('x') {
					goto l699
				}
				position++
				{
					position701, tokenIndex701 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l701
					}
					position++
					goto l702
				l701:
					position, tokenIndex = position701, tokenIndex701
				}
			l702:
				if !_rules[rule_]() {
					goto l699
				}
				add(ruleAuthorEx, position700)
			}
			return true
		l699:
			position, tokenIndex = position699, tokenIndex699
			return false
		},
		/* 95 AuthorIn <- <((('m' 's' _ ('i' 'n')) / ('i' 'n')) _)> */
		func() bool {
			position703, tokenIndex703 := position, tokenIndex
			{
				position704 := position
				{
					position705, tokenIndex705 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l706
					}
					position++
					if buffer[position] != rune('s') {
						goto l706
					}
					position++
					if !_rules[rule_]() {
						goto l706
					}
					if buffer[position] != rune('i') {
						goto l706
					}
					position++
					if buffer[position] != rune('n') {
						goto l706
					}
					position++
					goto l705
				l706:
					position, tokenIndex = position705, tokenIndex705
					if buffer[position] != rune('i') {
						goto l703
					}
					position++
					if buffer[position] != rune('n') {
						goto l703
					}
					position++
				}
			l705:
				if !_rules[rule_]() {
					goto l703
				}
				add(ruleAuthorIn, position704)
			}
			return true
		l703:
			position, tokenIndex = position703, tokenIndex703
			return false
		},
		/* 96 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position707, tokenIndex707 := position, tokenIndex
			{
				position708 := position
				if buffer[position] != rune('e') {
					goto l707
				}
				position++
				if buffer[position] != rune('m') {
					goto l707
				}
				position++
				if buffer[position] != rune('e') {
					goto l707
				}
				position++
				if buffer[position] != rune('n') {
					goto l707
				}
				position++
				if buffer[position] != rune('d') {
					goto l707
				}
				position++
				{
					position709, tokenIndex709 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l709
					}
					position++
					goto l710
				l709:
					position, tokenIndex = position709, tokenIndex709
				}
			l710:
				if !_rules[rule_]() {
					goto l707
				}
				add(ruleAuthorEmend, position708)
			}
			return true
		l707:
			position, tokenIndex = position707, tokenIndex707
			return false
		},
		/* 97 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position711, tokenIndex711 := position, tokenIndex
			{
				position712 := position
				{
					position713, tokenIndex713 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l714
					}
					goto l713
				l714:
					position, tokenIndex = position713, tokenIndex713
					if !_rules[ruleAuthor1]() {
						goto l715
					}
					goto l713
				l715:
					position, tokenIndex = position713, tokenIndex713
					if !_rules[ruleAuthor2]() {
						goto l716
					}
					goto l713
				l716:
					position, tokenIndex = position713, tokenIndex713
					if !_rules[ruleUnknownAuthor]() {
						goto l711
					}
				}
			l713:
				{
					position717, tokenIndex717 := position, tokenIndex
					if !_rules[rule_]() {
						goto l717
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l717
					}
					goto l718
				l717:
					position, tokenIndex = position717, tokenIndex717
				}
			l718:
				add(ruleAuthor, position712)
			}
			return true
		l711:
			position, tokenIndex = position711, tokenIndex711
			return false
		},
		/* 98 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position719, tokenIndex719 := position, tokenIndex
			{
				position720 := position
				if !_rules[ruleAuthor2]() {
					goto l719
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l719
				}
				add(ruleAuthor0, position720)
			}
			return true
		l719:
			position, tokenIndex = position719, tokenIndex719
			return false
		},
		/* 99 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position721, tokenIndex721 := position, tokenIndex
			{
				position722 := position
				if !_rules[ruleAuthor2]() {
					goto l721
				}
				{
					position723, tokenIndex723 := position, tokenIndex
					if !_rules[rule_]() {
						goto l723
					}
					goto l724
				l723:
					position, tokenIndex = position723, tokenIndex723
				}
			l724:
				{
					position725, tokenIndex725 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l726
					}
					goto l725
				l726:
					position, tokenIndex = position725, tokenIndex725
					if !_rules[ruleAuthorSuffix]() {
						goto l721
					}
				}
			l725:
				add(ruleAuthor1, position722)
			}
			return true
		l721:
			position, tokenIndex = position721, tokenIndex721
			return false
		},
		/* 100 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position727, tokenIndex727 := position, tokenIndex
			{
				position728 := position
				if !_rules[ruleAuthorWord]() {
					goto l727
				}
			l729:
				{
					position730, tokenIndex730 := position, tokenIndex
					{
						position731, tokenIndex731 := position, tokenIndex
						if !_rules[rule_]() {
							goto l731
						}
						goto l732
					l731:
						position, tokenIndex = position731, tokenIndex731
					}
				l732:
					if !_rules[ruleAuthorWord]() {
						goto l730
					}
					goto l729
				l730:
					position, tokenIndex = position730, tokenIndex730
				}
				add(ruleAuthor2, position728)
			}
			return true
		l727:
			position, tokenIndex = position727, tokenIndex727
			return false
		},
		/* 101 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position733, tokenIndex733 := position, tokenIndex
			{
				position734 := position
				{
					position735, tokenIndex735 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l736
					}
					position++
					goto l735
				l736:
					position, tokenIndex = position735, tokenIndex735
					{
						position737, tokenIndex737 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l738
						}
						position++
						if buffer[position] != rune('u') {
							goto l738
						}
						position++
						if buffer[position] != rune('c') {
							goto l738
						}
						position++
						if buffer[position] != rune('t') {
							goto l738
						}
						position++
						goto l737
					l738:
						position, tokenIndex = position737, tokenIndex737
						if buffer[position] != rune('a') {
							goto l733
						}
						position++
						if buffer[position] != rune('n') {
							goto l733
						}
						position++
						if buffer[position] != rune('o') {
							goto l733
						}
						position++
						if buffer[position] != rune('n') {
							goto l733
						}
						position++
					}
				l737:
					{
						position739, tokenIndex739 := position, tokenIndex
						{
							position741, tokenIndex741 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l740
							}
							position, tokenIndex = position741, tokenIndex741
						}
						goto l739
					l740:
						position, tokenIndex = position739, tokenIndex739
						if buffer[position] != rune('.') {
							goto l733
						}
						position++
					}
				l739:
				}
			l735:
				add(ruleUnknownAuthor, position734)
			}
			return true
		l733:
			position, tokenIndex = position733, tokenIndex733
			return false
		},
		/* 102 AuthorWord <- <(!(HybridChar / (('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':')) (AuthorDashInitials / AuthorWord1 / AuthorWord2 / AuthorWord3 / AuthorWord4 / AuthorPrefix))> */
		func() bool {
			position742, tokenIndex742 := position, tokenIndex
			{
				position743 := position
				{
					position744, tokenIndex744 := position, tokenIndex
					{
						position745, tokenIndex745 := position, tokenIndex
						if !_rules[ruleHybridChar]() {
							goto l746
						}
						goto l745
					l746:
						position, tokenIndex = position745, tokenIndex745
						{
							position747, tokenIndex747 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l748
							}
							position++
							goto l747
						l748:
							position, tokenIndex = position747, tokenIndex747
							if buffer[position] != rune('B') {
								goto l744
							}
							position++
						}
					l747:
						{
							position749, tokenIndex749 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l750
							}
							position++
							goto l749
						l750:
							position, tokenIndex = position749, tokenIndex749
							if buffer[position] != rune('O') {
								goto l744
							}
							position++
						}
					l749:
						{
							position751, tokenIndex751 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l752
							}
							position++
							goto l751
						l752:
							position, tokenIndex = position751, tokenIndex751
							if buffer[position] != rune('L') {
								goto l744
							}
							position++
						}
					l751:
						{
							position753, tokenIndex753 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l754
							}
							position++
							goto l753
						l754:
							position, tokenIndex = position753, tokenIndex753
							if buffer[position] != rune('D') {
								goto l744
							}
							position++
						}
					l753:
						if buffer[position] != rune(':') {
							goto l744
						}
						position++
					}
				l745:
					goto l742
				l744:
					position, tokenIndex = position744, tokenIndex744
				}
				{
					position755, tokenIndex755 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l756
					}
					goto l755
				l756:
					position, tokenIndex = position755, tokenIndex755
					if !_rules[ruleAuthorWord1]() {
						goto l757
					}
					goto l755
				l757:
					position, tokenIndex = position755, tokenIndex755
					if !_rules[ruleAuthorWord2]() {
						goto l758
					}
					goto l755
				l758:
					position, tokenIndex = position755, tokenIndex755
					if !_rules[ruleAuthorWord3]() {
						goto l759
					}
					goto l755
				l759:
					position, tokenIndex = position755, tokenIndex755
					if !_rules[ruleAuthorWord4]() {
						goto l760
					}
					goto l755
				l760:
					position, tokenIndex = position755, tokenIndex755
					if !_rules[ruleAuthorPrefix]() {
						goto l742
					}
				}
			l755:
				add(ruleAuthorWord, position743)
			}
			return true
		l742:
			position, tokenIndex = position742, tokenIndex742
			return false
		},
		/* 103 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position761, tokenIndex761 := position, tokenIndex
			{
				position762 := position
				{
					position763, tokenIndex763 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l764
					}
					position++
					if buffer[position] != rune('r') {
						goto l764
					}
					position++
					if buffer[position] != rune('g') {
						goto l764
					}
					position++
					if buffer[position] != rune('.') {
						goto l764
					}
					position++
					goto l763
				l764:
					position, tokenIndex = position763, tokenIndex763
					if buffer[position] != rune('e') {
						goto l765
					}
					position++
					if buffer[position] != rune('t') {
						goto l765
					}
					position++
					if buffer[position] != rune(' ') {
						goto l765
					}
					position++
					if buffer[position] != rune('a') {
						goto l765
					}
					position++
					if buffer[position] != rune('l') {
						goto l765
					}
					position++
					if buffer[position] != rune('.') {
						goto l765
					}
					position++
					if buffer[position] != rune('{') {
						goto l765
					}
					position++
					if buffer[position] != rune('?') {
						goto l765
					}
					position++
					if buffer[position] != rune('}') {
						goto l765
					}
					position++
					goto l763
				l765:
					position, tokenIndex = position763, tokenIndex763
					{
						position766, tokenIndex766 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l767
						}
						position++
						if buffer[position] != rune('t') {
							goto l767
						}
						position++
						goto l766
					l767:
						position, tokenIndex = position766, tokenIndex766
						if buffer[position] != rune('&') {
							goto l761
						}
						position++
					}
				l766:
					if buffer[position] != rune(' ') {
						goto l761
					}
					position++
					if buffer[position] != rune('a') {
						goto l761
					}
					position++
					if buffer[position] != rune('l') {
						goto l761
					}
					position++
					{
						position768, tokenIndex768 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l768
						}
						position++
						goto l769
					l768:
						position, tokenIndex = position768, tokenIndex768
					}
				l769:
				}
			l763:
				add(ruleAuthorEtAl, position762)
			}
			return true
		l761:
			position, tokenIndex = position761, tokenIndex761
			return false
		},
		/* 104 AuthorWord1 <- <(('d' 'u' 'P' 'o' 'n' 't') / ('d' 'e' 'g' 'l' 'i') / ('A' 'r' 'a' 'n' 'g' 'o' ' ' 'y' ' ' 'M' 'o' 'l' 'i' 'n' 'a'))> */
		func() bool {
			position770, tokenIndex770 := position, tokenIndex
			{
				position771 := position
				{
					position772, tokenIndex772 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l773
					}
					position++
					if buffer[position] != rune('u') {
						goto l773
					}
					position++
					if buffer[position] != rune('P') {
						goto l773
					}
					position++
					if buffer[position] != rune('o') {
						goto l773
					}
					position++
					if buffer[position] != rune('n') {
						goto l773
					}
					position++
					if buffer[position] != rune('t') {
						goto l773
					}
					position++
					goto l772
				l773:
					position, tokenIndex = position772, tokenIndex772
					if buffer[position] != rune('d') {
						goto l774
					}
					position++
					if buffer[position] != rune('e') {
						goto l774
					}
					position++
					if buffer[position] != rune('g') {
						goto l774
					}
					position++
					if buffer[position] != rune('l') {
						goto l774
					}
					position++
					if buffer[position] != rune('i') {
						goto l774
					}
					position++
					goto l772
				l774:
					position, tokenIndex = position772, tokenIndex772
					if buffer[position] != rune('A') {
						goto l770
					}
					position++
					if buffer[position] != rune('r') {
						goto l770
					}
					position++
					if buffer[position] != rune('a') {
						goto l770
					}
					position++
					if buffer[position] != rune('n') {
						goto l770
					}
					position++
					if buffer[position] != rune('g') {
						goto l770
					}
					position++
					if buffer[position] != rune('o') {
						goto l770
					}
					position++
					if buffer[position] != rune(' ') {
						goto l770
					}
					position++
					if buffer[position] != rune('y') {
						goto l770
					}
					position++
					if buffer[position] != rune(' ') {
						goto l770
					}
					position++
					if buffer[position] != rune('M') {
						goto l770
					}
					position++
					if buffer[position] != rune('o') {
						goto l770
					}
					position++
					if buffer[position] != rune('l') {
						goto l770
					}
					position++
					if buffer[position] != rune('i') {
						goto l770
					}
					position++
					if buffer[position] != rune('n') {
						goto l770
					}
					position++
					if buffer[position] != rune('a') {
						goto l770
					}
					position++
				}
			l772:
				add(ruleAuthorWord1, position771)
			}
			return true
		l770:
			position, tokenIndex = position770, tokenIndex770
			return false
		},
		/* 105 AuthorWord2 <- <((AuthorWord3 / AuthorWord4) Dash (AuthorWordSoft / AuthorInitial) (Dash (AuthorWordSoft / AuthorInitial))?)> */
		func() bool {
			position775, tokenIndex775 := position, tokenIndex
			{
				position776 := position
				{
					position777, tokenIndex777 := position, tokenIndex
					if !_rules[ruleAuthorWord3]() {
						goto l778
					}
					goto l777
				l778:
					position, tokenIndex = position777, tokenIndex777
					if !_rules[ruleAuthorWord4]() {
						goto l775
					}
				}
			l777:
				if !_rules[ruleDash]() {
					goto l775
				}
				{
					position779, tokenIndex779 := position, tokenIndex
					if !_rules[ruleAuthorWordSoft]() {
						goto l780
					}
					goto l779
				l780:
					position, tokenIndex = position779, tokenIndex779
					if !_rules[ruleAuthorInitial]() {
						goto l775
					}
				}
			l779:
				{
					position781, tokenIndex781 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l781
					}
					{
						position783, tokenIndex783 := position, tokenIndex
						if !_rules[ruleAuthorWordSoft]() {
							goto l784
						}
						goto l783
					l784:
						position, tokenIndex = position783, tokenIndex783
						if !_rules[ruleAuthorInitial]() {
							goto l781
						}
					}
				l783:
					goto l782
				l781:
					position, tokenIndex = position781, tokenIndex781
				}
			l782:
				add(ruleAuthorWord2, position776)
			}
			return true
		l775:
			position, tokenIndex = position775, tokenIndex775
			return false
		},
		/* 106 AuthorWord3 <- <(AuthorPrefixGlued2 (CapAuthorWord / AuthorLowerChar+) '.'?)> */
		func() bool {
			position785, tokenIndex785 := position, tokenIndex
			{
				position786 := position
				if !_rules[ruleAuthorPrefixGlued2]() {
					goto l785
				}
				{
					position787, tokenIndex787 := position, tokenIndex
					if !_rules[ruleCapAuthorWord]() {
						goto l788
					}
					goto l787
				l788:
					position, tokenIndex = position787, tokenIndex787
					if !_rules[ruleAuthorLowerChar]() {
						goto l785
					}
				l789:
					{
						position790, tokenIndex790 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l790
						}
						goto l789
					l790:
						position, tokenIndex = position790, tokenIndex790
					}
				}
			l787:
				{
					position791, tokenIndex791 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l791
					}
					position++
					goto l792
				l791:
					position, tokenIndex = position791, tokenIndex791
				}
			l792:
				add(ruleAuthorWord3, position786)
			}
			return true
		l785:
			position, tokenIndex = position785, tokenIndex785
			return false
		},
		/* 107 AuthorWord4 <- <(AuthorPrefixGlued1? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position793, tokenIndex793 := position, tokenIndex
			{
				position794 := position
				{
					position795, tokenIndex795 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued1]() {
						goto l795
					}
					goto l796
				l795:
					position, tokenIndex = position795, tokenIndex795
				}
			l796:
				{
					position797, tokenIndex797 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l798
					}
					goto l797
				l798:
					position, tokenIndex = position797, tokenIndex797
					if !_rules[ruleCapAuthorWord]() {
						goto l793
					}
				}
			l797:
				{
					position799, tokenIndex799 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l799
					}
					position++
					goto l800
				l799:
					position, tokenIndex = position799, tokenIndex799
				}
			l800:
				add(ruleAuthorWord4, position794)
			}
			return true
		l793:
			position, tokenIndex = position793, tokenIndex793
			return false
		},
		/* 108 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position801, tokenIndex801 := position, tokenIndex
			{
				position802 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l801
				}
				{
					position803, tokenIndex803 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l803
					}
					position++
					goto l804
				l803:
					position, tokenIndex = position803, tokenIndex803
				}
			l804:
				if !_rules[ruleDash]() {
					goto l801
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l801
				}
				{
					position805, tokenIndex805 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l805
					}
					position++
					goto l806
				l805:
					position, tokenIndex = position805, tokenIndex805
				}
			l806:
				add(ruleAuthorDashInitials, position802)
			}
			return true
		l801:
			position, tokenIndex = position801, tokenIndex801
			return false
		},
		/* 109 AuthorInitial <- <(AuthorUpperChar '.'?)> */
		func() bool {
			position807, tokenIndex807 := position, tokenIndex
			{
				position808 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l807
				}
				{
					position809, tokenIndex809 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l809
					}
					position++
					goto l810
				l809:
					position, tokenIndex = position809, tokenIndex809
				}
			l810:
				add(ruleAuthorInitial, position808)
			}
			return true
		l807:
			position, tokenIndex = position807, tokenIndex807
			return false
		},
		/* 110 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position811, tokenIndex811 := position, tokenIndex
			{
				position812 := position
				{
					position813, tokenIndex813 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l814
					}
					{
						position815, tokenIndex815 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l816
						}
					l817:
						{
							position818, tokenIndex818 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l818
							}
							goto l817
						l818:
							position, tokenIndex = position818, tokenIndex818
						}
						goto l815
					l816:
						position, tokenIndex = position815, tokenIndex815
						if !_rules[ruleAuthorLowerChar]() {
							goto l814
						}
					l819:
						{
							position820, tokenIndex820 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l820
							}
							goto l819
						l820:
							position, tokenIndex = position820, tokenIndex820
						}
					}
				l815:
					goto l813
				l814:
					position, tokenIndex = position813, tokenIndex813
					if !_rules[ruleAuthorLowerChar]() {
						goto l811
					}
				l821:
					{
						position822, tokenIndex822 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l822
						}
						goto l821
					l822:
						position, tokenIndex = position822, tokenIndex822
					}
				}
			l813:
				{
					position823, tokenIndex823 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l823
					}
					position++
					goto l824
				l823:
					position, tokenIndex = position823, tokenIndex823
				}
			l824:
				add(ruleAuthorWordSoft, position812)
			}
			return true
		l811:
			position, tokenIndex = position811, tokenIndex811
			return false
		},
		/* 111 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position825, tokenIndex825 := position, tokenIndex
			{
				position826 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l825
				}
			l827:
				{
					position828, tokenIndex828 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l828
					}
					goto l827
				l828:
					position, tokenIndex = position828, tokenIndex828
				}
				add(ruleCapAuthorWord, position826)
			}
			return true
		l825:
			position, tokenIndex = position825, tokenIndex825
			return false
		},
		/* 112 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position829, tokenIndex829 := position, tokenIndex
			{
				position830 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l829
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l829
				}
			l831:
				{
					position832, tokenIndex832 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l832
					}
					goto l831
				l832:
					position, tokenIndex = position832, tokenIndex832
				}
				add(ruleAllCapsAuthorWord, position830)
			}
			return true
		l829:
			position, tokenIndex = position829, tokenIndex829
			return false
		},
		/* 113 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position833, tokenIndex833 := position, tokenIndex
			{
				position834 := position
				{
					position835, tokenIndex835 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l836
					}
					goto l835
				l836:
					position, tokenIndex = position835, tokenIndex835
					if buffer[position] != rune('f') {
						goto l837
					}
					position++
					if buffer[position] != rune('i') {
						goto l837
					}
					position++
					if buffer[position] != rune('l') {
						goto l837
					}
					position++
					if buffer[position] != rune('.') {
						goto l837
					}
					position++
					goto l835
				l837:
					position, tokenIndex = position835, tokenIndex835
					if buffer[position] != rune('f') {
						goto l833
					}
					position++
					if buffer[position] != rune('i') {
						goto l833
					}
					position++
					if buffer[position] != rune('l') {
						goto l833
					}
					position++
					if buffer[position] != rune('i') {
						goto l833
					}
					position++
					if buffer[position] != rune('u') {
						goto l833
					}
					position++
					if buffer[position] != rune('s') {
						goto l833
					}
					position++
				}
			l835:
				add(ruleFilius, position834)
			}
			return true
		l833:
			position, tokenIndex = position833, tokenIndex833
			return false
		},
		/* 114 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position838, tokenIndex838 := position, tokenIndex
			{
				position839 := position
				if buffer[position] != rune('f') {
					goto l838
				}
				position++
				if buffer[position] != rune('.') {
					goto l838
				}
				position++
				{
					position840, tokenIndex840 := position, tokenIndex
					if !_rules[rule_]() {
						goto l840
					}
					if !_rules[ruleWord]() {
						goto l840
					}
					goto l838
				l840:
					position, tokenIndex = position840, tokenIndex840
				}
				add(ruleFiliusF, position839)
			}
			return true
		l838:
			position, tokenIndex = position838, tokenIndex838
			return false
		},
		/* 115 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position841, tokenIndex841 := position, tokenIndex
			{
				position842 := position
				if buffer[position] != rune('f') {
					goto l841
				}
				position++
				if buffer[position] != rune('.') {
					goto l841
				}
				position++
				add(ruleFiliusFNoSpace, position842)
			}
			return true
		l841:
			position, tokenIndex = position841, tokenIndex841
			return false
		},
		/* 116 AuthorSuffix <- <(('b' 'i' 's') / ('t' 'e' 'r'))> */
		func() bool {
			position843, tokenIndex843 := position, tokenIndex
			{
				position844 := position
				{
					position845, tokenIndex845 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l846
					}
					position++
					if buffer[position] != rune('i') {
						goto l846
					}
					position++
					if buffer[position] != rune('s') {
						goto l846
					}
					position++
					goto l845
				l846:
					position, tokenIndex = position845, tokenIndex845
					if buffer[position] != rune('t') {
						goto l843
					}
					position++
					if buffer[position] != rune('e') {
						goto l843
					}
					position++
					if buffer[position] != rune('r') {
						goto l843
					}
					position++
				}
			l845:
				add(ruleAuthorSuffix, position844)
			}
			return true
		l843:
			position, tokenIndex = position843, tokenIndex843
			return false
		},
		/* 117 AuthorPrefixGlued1 <- <(('d' / 'D' / 'O' / 'L' / 'M') Apostrophe)> */
		func() bool {
			position847, tokenIndex847 := position, tokenIndex
			{
				position848 := position
				{
					position849, tokenIndex849 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l850
					}
					position++
					goto l849
				l850:
					position, tokenIndex = position849, tokenIndex849
					if buffer[position] != rune('D') {
						goto l851
					}
					position++
					goto l849
				l851:
					position, tokenIndex = position849, tokenIndex849
					if buffer[position] != rune('O') {
						goto l852
					}
					position++
					goto l849
				l852:
					position, tokenIndex = position849, tokenIndex849
					if buffer[position] != rune('L') {
						goto l853
					}
					position++
					goto l849
				l853:
					position, tokenIndex = position849, tokenIndex849
					if buffer[position] != rune('M') {
						goto l847
					}
					position++
				}
			l849:
				if !_rules[ruleApostrophe]() {
					goto l847
				}
				add(ruleAuthorPrefixGlued1, position848)
			}
			return true
		l847:
			position, tokenIndex = position847, tokenIndex847
			return false
		},
		/* 118 AuthorPrefixGlued2 <- <((('M' 'c') / ('M' 'a' 'c')) Apostrophe?)> */
		func() bool {
			position854, tokenIndex854 := position, tokenIndex
			{
				position855 := position
				{
					position856, tokenIndex856 := position, tokenIndex
					if buffer[position] != rune('M') {
						goto l857
					}
					position++
					if buffer[position] != rune('c') {
						goto l857
					}
					position++
					goto l856
				l857:
					position, tokenIndex = position856, tokenIndex856
					if buffer[position] != rune('M') {
						goto l854
					}
					position++
					if buffer[position] != rune('a') {
						goto l854
					}
					position++
					if buffer[position] != rune('c') {
						goto l854
					}
					position++
				}
			l856:
				{
					position858, tokenIndex858 := position, tokenIndex
					if !_rules[ruleApostrophe]() {
						goto l858
					}
					goto l859
				l858:
					position, tokenIndex = position858, tokenIndex858
				}
			l859:
				add(ruleAuthorPrefixGlued2, position855)
			}
			return true
		l854:
			position, tokenIndex = position854, tokenIndex854
			return false
		},
		/* 119 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position860, tokenIndex860 := position, tokenIndex
			{
				position861 := position
				{
					position862, tokenIndex862 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l863
					}
					goto l862
				l863:
					position, tokenIndex = position862, tokenIndex862
					if !_rules[ruleAuthorPrefix2]() {
						goto l860
					}
				}
			l862:
				add(ruleAuthorPrefix, position861)
			}
			return true
		l860:
			position, tokenIndex = position860, tokenIndex860
			return false
		},
		/* 120 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position864, tokenIndex864 := position, tokenIndex
			{
				position865 := position
				{
					position866, tokenIndex866 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l867
					}
					position++
					if buffer[position] != rune('.') {
						goto l867
					}
					position++
					{
						position868, tokenIndex868 := position, tokenIndex
						{
							position870, tokenIndex870 := position, tokenIndex
							if !_rules[rule_]() {
								goto l870
							}
							goto l871
						l870:
							position, tokenIndex = position870, tokenIndex870
						}
					l871:
						if buffer[position] != rune('d') {
							goto l868
						}
						position++
						if buffer[position] != rune('.') {
							goto l868
						}
						position++
						goto l869
					l868:
						position, tokenIndex = position868, tokenIndex868
					}
				l869:
					goto l866
				l867:
					position, tokenIndex = position866, tokenIndex866
					if !_rules[ruleApostrophe]() {
						goto l864
					}
					if buffer[position] != rune('t') {
						goto l864
					}
					position++
				}
			l866:
				add(ruleAuthorPrefix2, position865)
			}
			return true
		l864:
			position, tokenIndex = position864, tokenIndex864
			return false
		},
		/* 121 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'm') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e' 'l' 'l' 'e') / ('d' 'e' 'l') / ('d' 'e' ' ' 'l' 'o' 's') / ('d' 'e') / ('d' 'i') / ('d' 'o' 's') / ('d' 'u') / ('d' 'o') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'n') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('v' 'e' 'r') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position872, tokenIndex872 := position, tokenIndex
			{
				position873 := position
				{
					position874, tokenIndex874 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l875
					}
					position++
					if buffer[position] != rune('b') {
						goto l875
					}
					position++
					goto l874
				l875:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('a') {
						goto l876
					}
					position++
					if buffer[position] != rune('f') {
						goto l876
					}
					position++
					goto l874
				l876:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('b') {
						goto l877
					}
					position++
					if buffer[position] != rune('i') {
						goto l877
					}
					position++
					if buffer[position] != rune('s') {
						goto l877
					}
					position++
					goto l874
				l877:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l878
					}
					position++
					if buffer[position] != rune('a') {
						goto l878
					}
					position++
					goto l874
				l878:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l879
					}
					position++
					if buffer[position] != rune('e') {
						goto l879
					}
					position++
					if buffer[position] != rune('r') {
						goto l879
					}
					position++
					goto l874
				l879:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l880
					}
					position++
					if buffer[position] != rune('e') {
						goto l880
					}
					position++
					if buffer[position] != rune('s') {
						goto l880
					}
					position++
					goto l874
				l880:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l881
					}
					position++
					if buffer[position] != rune('e') {
						goto l881
					}
					position++
					if buffer[position] != rune('n') {
						goto l881
					}
					position++
					goto l874
				l881:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l882
					}
					position++
					if buffer[position] != rune('e') {
						goto l882
					}
					position++
					if buffer[position] != rune('m') {
						goto l882
					}
					position++
					goto l874
				l882:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l883
					}
					position++
					if buffer[position] != rune('e') {
						goto l883
					}
					position++
					if buffer[position] != rune('l') {
						goto l883
					}
					position++
					if buffer[position] != rune('l') {
						goto l883
					}
					position++
					if buffer[position] != rune('a') {
						goto l883
					}
					position++
					goto l874
				l883:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l884
					}
					position++
					if buffer[position] != rune('e') {
						goto l884
					}
					position++
					if buffer[position] != rune('l') {
						goto l884
					}
					position++
					if buffer[position] != rune('a') {
						goto l884
					}
					position++
					goto l874
				l884:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l885
					}
					position++
					if buffer[position] != rune('e') {
						goto l885
					}
					position++
					if buffer[position] != rune('l') {
						goto l885
					}
					position++
					if buffer[position] != rune('l') {
						goto l885
					}
					position++
					if buffer[position] != rune('e') {
						goto l885
					}
					position++
					goto l874
				l885:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l886
					}
					position++
					if buffer[position] != rune('e') {
						goto l886
					}
					position++
					if buffer[position] != rune('l') {
						goto l886
					}
					position++
					goto l874
				l886:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l887
					}
					position++
					if buffer[position] != rune('e') {
						goto l887
					}
					position++
					if buffer[position] != rune(' ') {
						goto l887
					}
					position++
					if buffer[position] != rune('l') {
						goto l887
					}
					position++
					if buffer[position] != rune('o') {
						goto l887
					}
					position++
					if buffer[position] != rune('s') {
						goto l887
					}
					position++
					goto l874
				l887:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l888
					}
					position++
					if buffer[position] != rune('e') {
						goto l888
					}
					position++
					goto l874
				l888:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l889
					}
					position++
					if buffer[position] != rune('i') {
						goto l889
					}
					position++
					goto l874
				l889:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l890
					}
					position++
					if buffer[position] != rune('o') {
						goto l890
					}
					position++
					if buffer[position] != rune('s') {
						goto l890
					}
					position++
					goto l874
				l890:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l891
					}
					position++
					if buffer[position] != rune('u') {
						goto l891
					}
					position++
					goto l874
				l891:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l892
					}
					position++
					if buffer[position] != rune('o') {
						goto l892
					}
					position++
					goto l874
				l892:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('e') {
						goto l893
					}
					position++
					if buffer[position] != rune('l') {
						goto l893
					}
					position++
					goto l874
				l893:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('l') {
						goto l894
					}
					position++
					if buffer[position] != rune('a') {
						goto l894
					}
					position++
					goto l874
				l894:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('l') {
						goto l895
					}
					position++
					if buffer[position] != rune('e') {
						goto l895
					}
					position++
					goto l874
				l895:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('t') {
						goto l896
					}
					position++
					if buffer[position] != rune('e') {
						goto l896
					}
					position++
					if buffer[position] != rune('n') {
						goto l896
					}
					position++
					goto l874
				l896:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('t') {
						goto l897
					}
					position++
					if buffer[position] != rune('e') {
						goto l897
					}
					position++
					if buffer[position] != rune('r') {
						goto l897
					}
					position++
					goto l874
				l897:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('v') {
						goto l898
					}
					position++
					if buffer[position] != rune('a') {
						goto l898
					}
					position++
					if buffer[position] != rune('n') {
						goto l898
					}
					position++
					goto l874
				l898:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('v') {
						goto l899
					}
					position++
					if buffer[position] != rune('e') {
						goto l899
					}
					position++
					if buffer[position] != rune('r') {
						goto l899
					}
					position++
					goto l874
				l899:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('d') {
						goto l900
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l900
					}
					goto l874
				l900:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('i') {
						goto l901
					}
					position++
					if buffer[position] != rune('n') {
						goto l901
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l901
					}
					if buffer[position] != rune('t') {
						goto l901
					}
					position++
					goto l874
				l901:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('z') {
						goto l902
					}
					position++
					if buffer[position] != rune('u') {
						goto l902
					}
					position++
					if buffer[position] != rune('r') {
						goto l902
					}
					position++
					goto l874
				l902:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('z') {
						goto l903
					}
					position++
					if buffer[position] != rune('u') {
						goto l903
					}
					position++
					goto l874
				l903:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('v') {
						goto l904
					}
					position++
					if buffer[position] != rune('o') {
						goto l904
					}
					position++
					if buffer[position] != rune('n') {
						goto l904
					}
					position++
					{
						position905, tokenIndex905 := position, tokenIndex
						if !_rules[rule_]() {
							goto l905
						}
						{
							position907, tokenIndex907 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l908
							}
							position++
							if buffer[position] != rune('.') {
								goto l908
							}
							position++
							goto l907
						l908:
							position, tokenIndex = position907, tokenIndex907
							if buffer[position] != rune('d') {
								goto l905
							}
							position++
							if buffer[position] != rune('e') {
								goto l905
							}
							position++
							if buffer[position] != rune('m') {
								goto l905
							}
							position++
						}
					l907:
						goto l906
					l905:
						position, tokenIndex = position905, tokenIndex905
					}
				l906:
					goto l874
				l904:
					position, tokenIndex = position874, tokenIndex874
					if buffer[position] != rune('v') {
						goto l872
					}
					position++
					{
						position909, tokenIndex909 := position, tokenIndex
						if !_rules[rule_]() {
							goto l909
						}
						if buffer[position] != rune('d') {
							goto l909
						}
						position++
						goto l910
					l909:
						position, tokenIndex = position909, tokenIndex909
					}
				l910:
				}
			l874:
				{
					position911, tokenIndex911 := position, tokenIndex
					if !_rules[rule_]() {
						goto l872
					}
					position, tokenIndex = position911, tokenIndex911
				}
				add(ruleAuthorPrefix1, position873)
			}
			return true
		l872:
			position, tokenIndex = position872, tokenIndex872
			return false
		},
		/* 122 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position912, tokenIndex912 := position, tokenIndex
			{
				position913 := position
				{
					position914, tokenIndex914 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l915
					}
					goto l914
				l915:
					position, tokenIndex = position914, tokenIndex914
					if !_rules[ruleMiscodedChar]() {
						goto l916
					}
					goto l914
				l916:
					position, tokenIndex = position914, tokenIndex914
					{
						position917, tokenIndex917 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l918
						}
						position++
						goto l917
					l918:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Á') {
							goto l919
						}
						position++
						goto l917
					l919:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Â') {
							goto l920
						}
						position++
						goto l917
					l920:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ã') {
							goto l921
						}
						position++
						goto l917
					l921:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ä') {
							goto l922
						}
						position++
						goto l917
					l922:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Å') {
							goto l923
						}
						position++
						goto l917
					l923:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Æ') {
							goto l924
						}
						position++
						goto l917
					l924:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ç') {
							goto l925
						}
						position++
						goto l917
					l925:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('È') {
							goto l926
						}
						position++
						goto l917
					l926:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('É') {
							goto l927
						}
						position++
						goto l917
					l927:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ê') {
							goto l928
						}
						position++
						goto l917
					l928:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ë') {
							goto l929
						}
						position++
						goto l917
					l929:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ì') {
							goto l930
						}
						position++
						goto l917
					l930:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Í') {
							goto l931
						}
						position++
						goto l917
					l931:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Î') {
							goto l932
						}
						position++
						goto l917
					l932:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ï') {
							goto l933
						}
						position++
						goto l917
					l933:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ð') {
							goto l934
						}
						position++
						goto l917
					l934:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ñ') {
							goto l935
						}
						position++
						goto l917
					l935:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ò') {
							goto l936
						}
						position++
						goto l917
					l936:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ó') {
							goto l937
						}
						position++
						goto l917
					l937:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ô') {
							goto l938
						}
						position++
						goto l917
					l938:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Õ') {
							goto l939
						}
						position++
						goto l917
					l939:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ö') {
							goto l940
						}
						position++
						goto l917
					l940:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ø') {
							goto l941
						}
						position++
						goto l917
					l941:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ù') {
							goto l942
						}
						position++
						goto l917
					l942:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ú') {
							goto l943
						}
						position++
						goto l917
					l943:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Û') {
							goto l944
						}
						position++
						goto l917
					l944:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ü') {
							goto l945
						}
						position++
						goto l917
					l945:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ý') {
							goto l946
						}
						position++
						goto l917
					l946:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ć') {
							goto l947
						}
						position++
						goto l917
					l947:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Č') {
							goto l948
						}
						position++
						goto l917
					l948:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ď') {
							goto l949
						}
						position++
						goto l917
					l949:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('İ') {
							goto l950
						}
						position++
						goto l917
					l950:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ķ') {
							goto l951
						}
						position++
						goto l917
					l951:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ĺ') {
							goto l952
						}
						position++
						goto l917
					l952:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('ĺ') {
							goto l953
						}
						position++
						goto l917
					l953:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ľ') {
							goto l954
						}
						position++
						goto l917
					l954:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('ľ') {
							goto l955
						}
						position++
						goto l917
					l955:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ł') {
							goto l956
						}
						position++
						goto l917
					l956:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('ł') {
							goto l957
						}
						position++
						goto l917
					l957:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ņ') {
							goto l958
						}
						position++
						goto l917
					l958:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ō') {
							goto l959
						}
						position++
						goto l917
					l959:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ő') {
							goto l960
						}
						position++
						goto l917
					l960:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Œ') {
							goto l961
						}
						position++
						goto l917
					l961:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ř') {
							goto l962
						}
						position++
						goto l917
					l962:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ś') {
							goto l963
						}
						position++
						goto l917
					l963:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ŝ') {
							goto l964
						}
						position++
						goto l917
					l964:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ş') {
							goto l965
						}
						position++
						goto l917
					l965:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Š') {
							goto l966
						}
						position++
						goto l917
					l966:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ÿ') {
							goto l967
						}
						position++
						goto l917
					l967:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ź') {
							goto l968
						}
						position++
						goto l917
					l968:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ż') {
							goto l969
						}
						position++
						goto l917
					l969:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ž') {
							goto l970
						}
						position++
						goto l917
					l970:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('ƒ') {
							goto l971
						}
						position++
						goto l917
					l971:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ǿ') {
							goto l972
						}
						position++
						goto l917
					l972:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ș') {
							goto l973
						}
						position++
						goto l917
					l973:
						position, tokenIndex = position917, tokenIndex917
						if buffer[position] != rune('Ț') {
							goto l912
						}
						position++
					}
				l917:
				}
			l914:
				add(ruleAuthorUpperChar, position913)
			}
			return true
		l912:
			position, tokenIndex = position912, tokenIndex912
			return false
		},
		/* 123 AuthorLowerChar <- <(LowerASCII / MiscodedChar / Apostrophe / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position974, tokenIndex974 := position, tokenIndex
			{
				position975 := position
				{
					position976, tokenIndex976 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l977
					}
					goto l976
				l977:
					position, tokenIndex = position976, tokenIndex976
					if !_rules[ruleMiscodedChar]() {
						goto l978
					}
					goto l976
				l978:
					position, tokenIndex = position976, tokenIndex976
					if !_rules[ruleApostrophe]() {
						goto l979
					}
					goto l976
				l979:
					position, tokenIndex = position976, tokenIndex976
					{
						position980, tokenIndex980 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l981
						}
						position++
						goto l980
					l981:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('á') {
							goto l982
						}
						position++
						goto l980
					l982:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('â') {
							goto l983
						}
						position++
						goto l980
					l983:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ã') {
							goto l984
						}
						position++
						goto l980
					l984:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ä') {
							goto l985
						}
						position++
						goto l980
					l985:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('å') {
							goto l986
						}
						position++
						goto l980
					l986:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('æ') {
							goto l987
						}
						position++
						goto l980
					l987:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ç') {
							goto l988
						}
						position++
						goto l980
					l988:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('è') {
							goto l989
						}
						position++
						goto l980
					l989:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('é') {
							goto l990
						}
						position++
						goto l980
					l990:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ê') {
							goto l991
						}
						position++
						goto l980
					l991:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ë') {
							goto l992
						}
						position++
						goto l980
					l992:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ì') {
							goto l993
						}
						position++
						goto l980
					l993:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('í') {
							goto l994
						}
						position++
						goto l980
					l994:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('î') {
							goto l995
						}
						position++
						goto l980
					l995:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ï') {
							goto l996
						}
						position++
						goto l980
					l996:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ð') {
							goto l997
						}
						position++
						goto l980
					l997:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ñ') {
							goto l998
						}
						position++
						goto l980
					l998:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ò') {
							goto l999
						}
						position++
						goto l980
					l999:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ó') {
							goto l1000
						}
						position++
						goto l980
					l1000:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ó') {
							goto l1001
						}
						position++
						goto l980
					l1001:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ô') {
							goto l1002
						}
						position++
						goto l980
					l1002:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('õ') {
							goto l1003
						}
						position++
						goto l980
					l1003:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ö') {
							goto l1004
						}
						position++
						goto l980
					l1004:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ø') {
							goto l1005
						}
						position++
						goto l980
					l1005:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ù') {
							goto l1006
						}
						position++
						goto l980
					l1006:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ú') {
							goto l1007
						}
						position++
						goto l980
					l1007:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('û') {
							goto l1008
						}
						position++
						goto l980
					l1008:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ü') {
							goto l1009
						}
						position++
						goto l980
					l1009:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ý') {
							goto l1010
						}
						position++
						goto l980
					l1010:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ÿ') {
							goto l1011
						}
						position++
						goto l980
					l1011:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ā') {
							goto l1012
						}
						position++
						goto l980
					l1012:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ă') {
							goto l1013
						}
						position++
						goto l980
					l1013:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ą') {
							goto l1014
						}
						position++
						goto l980
					l1014:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ć') {
							goto l1015
						}
						position++
						goto l980
					l1015:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ĉ') {
							goto l1016
						}
						position++
						goto l980
					l1016:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('č') {
							goto l1017
						}
						position++
						goto l980
					l1017:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ď') {
							goto l1018
						}
						position++
						goto l980
					l1018:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('đ') {
							goto l1019
						}
						position++
						goto l980
					l1019:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ē') {
							goto l1020
						}
						position++
						goto l980
					l1020:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ĕ') {
							goto l1021
						}
						position++
						goto l980
					l1021:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ė') {
							goto l1022
						}
						position++
						goto l980
					l1022:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ę') {
							goto l1023
						}
						position++
						goto l980
					l1023:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ě') {
							goto l1024
						}
						position++
						goto l980
					l1024:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ğ') {
							goto l1025
						}
						position++
						goto l980
					l1025:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ī') {
							goto l1026
						}
						position++
						goto l980
					l1026:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ĭ') {
							goto l1027
						}
						position++
						goto l980
					l1027:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('İ') {
							goto l1028
						}
						position++
						goto l980
					l1028:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ı') {
							goto l1029
						}
						position++
						goto l980
					l1029:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ĺ') {
							goto l1030
						}
						position++
						goto l980
					l1030:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ľ') {
							goto l1031
						}
						position++
						goto l980
					l1031:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ł') {
							goto l1032
						}
						position++
						goto l980
					l1032:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ń') {
							goto l1033
						}
						position++
						goto l980
					l1033:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ņ') {
							goto l1034
						}
						position++
						goto l980
					l1034:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ň') {
							goto l1035
						}
						position++
						goto l980
					l1035:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ŏ') {
							goto l1036
						}
						position++
						goto l980
					l1036:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ő') {
							goto l1037
						}
						position++
						goto l980
					l1037:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('œ') {
							goto l1038
						}
						position++
						goto l980
					l1038:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ŕ') {
							goto l1039
						}
						position++
						goto l980
					l1039:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ř') {
							goto l1040
						}
						position++
						goto l980
					l1040:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ś') {
							goto l1041
						}
						position++
						goto l980
					l1041:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ş') {
							goto l1042
						}
						position++
						goto l980
					l1042:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('š') {
							goto l1043
						}
						position++
						goto l980
					l1043:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ţ') {
							goto l1044
						}
						position++
						goto l980
					l1044:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ť') {
							goto l1045
						}
						position++
						goto l980
					l1045:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ũ') {
							goto l1046
						}
						position++
						goto l980
					l1046:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ū') {
							goto l1047
						}
						position++
						goto l980
					l1047:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ŭ') {
							goto l1048
						}
						position++
						goto l980
					l1048:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ů') {
							goto l1049
						}
						position++
						goto l980
					l1049:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ű') {
							goto l1050
						}
						position++
						goto l980
					l1050:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ź') {
							goto l1051
						}
						position++
						goto l980
					l1051:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ż') {
							goto l1052
						}
						position++
						goto l980
					l1052:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ž') {
							goto l1053
						}
						position++
						goto l980
					l1053:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ſ') {
							goto l1054
						}
						position++
						goto l980
					l1054:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ǎ') {
							goto l1055
						}
						position++
						goto l980
					l1055:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ǔ') {
							goto l1056
						}
						position++
						goto l980
					l1056:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ǧ') {
							goto l1057
						}
						position++
						goto l980
					l1057:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ș') {
							goto l1058
						}
						position++
						goto l980
					l1058:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ț') {
							goto l1059
						}
						position++
						goto l980
					l1059:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ȳ') {
							goto l1060
						}
						position++
						goto l980
					l1060:
						position, tokenIndex = position980, tokenIndex980
						if buffer[position] != rune('ß') {
							goto l974
						}
						position++
					}
				l980:
				}
			l976:
				add(ruleAuthorLowerChar, position975)
			}
			return true
		l974:
			position, tokenIndex = position974, tokenIndex974
			return false
		},
		/* 124 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position1061, tokenIndex1061 := position, tokenIndex
			{
				position1062 := position
				{
					position1063, tokenIndex1063 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l1064
					}
					goto l1063
				l1064:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleYearApprox]() {
						goto l1065
					}
					goto l1063
				l1065:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleYearWithParens]() {
						goto l1066
					}
					goto l1063
				l1066:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleYearWithPage]() {
						goto l1067
					}
					goto l1063
				l1067:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleYearWithDot]() {
						goto l1068
					}
					goto l1063
				l1068:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleYearWithChar]() {
						goto l1069
					}
					goto l1063
				l1069:
					position, tokenIndex = position1063, tokenIndex1063
					if !_rules[ruleYearNum]() {
						goto l1061
					}
				}
			l1063:
				add(ruleYear, position1062)
			}
			return true
		l1061:
			position, tokenIndex = position1061, tokenIndex1061
			return false
		},
		/* 125 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position1070, tokenIndex1070 := position, tokenIndex
			{
				position1071 := position
				if !_rules[ruleYearNum]() {
					goto l1070
				}
				{
					position1072, tokenIndex1072 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l1073
					}
					goto l1072
				l1073:
					position, tokenIndex = position1072, tokenIndex1072
					if !_rules[ruleSlash]() {
						goto l1070
					}
				}
			l1072:
				if !_rules[ruleNums]() {
					goto l1070
				}
			l1074:
				{
					position1075, tokenIndex1075 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1075
					}
					goto l1074
				l1075:
					position, tokenIndex = position1075, tokenIndex1075
				}
			l1076:
				{
					position1077, tokenIndex1077 := position, tokenIndex
					{
						position1078, tokenIndex1078 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l1079
						}
						position++
						goto l1078
					l1079:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('b') {
							goto l1080
						}
						position++
						goto l1078
					l1080:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('c') {
							goto l1081
						}
						position++
						goto l1078
					l1081:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('d') {
							goto l1082
						}
						position++
						goto l1078
					l1082:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('e') {
							goto l1083
						}
						position++
						goto l1078
					l1083:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('f') {
							goto l1084
						}
						position++
						goto l1078
					l1084:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('g') {
							goto l1085
						}
						position++
						goto l1078
					l1085:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('h') {
							goto l1086
						}
						position++
						goto l1078
					l1086:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('i') {
							goto l1087
						}
						position++
						goto l1078
					l1087:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('j') {
							goto l1088
						}
						position++
						goto l1078
					l1088:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('k') {
							goto l1089
						}
						position++
						goto l1078
					l1089:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('l') {
							goto l1090
						}
						position++
						goto l1078
					l1090:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('m') {
							goto l1091
						}
						position++
						goto l1078
					l1091:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('n') {
							goto l1092
						}
						position++
						goto l1078
					l1092:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('o') {
							goto l1093
						}
						position++
						goto l1078
					l1093:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('p') {
							goto l1094
						}
						position++
						goto l1078
					l1094:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('q') {
							goto l1095
						}
						position++
						goto l1078
					l1095:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('r') {
							goto l1096
						}
						position++
						goto l1078
					l1096:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('s') {
							goto l1097
						}
						position++
						goto l1078
					l1097:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('t') {
							goto l1098
						}
						position++
						goto l1078
					l1098:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('u') {
							goto l1099
						}
						position++
						goto l1078
					l1099:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('v') {
							goto l1100
						}
						position++
						goto l1078
					l1100:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('w') {
							goto l1101
						}
						position++
						goto l1078
					l1101:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('x') {
							goto l1102
						}
						position++
						goto l1078
					l1102:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('y') {
							goto l1103
						}
						position++
						goto l1078
					l1103:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('z') {
							goto l1104
						}
						position++
						goto l1078
					l1104:
						position, tokenIndex = position1078, tokenIndex1078
						if buffer[position] != rune('?') {
							goto l1077
						}
						position++
					}
				l1078:
					goto l1076
				l1077:
					position, tokenIndex = position1077, tokenIndex1077
				}
				add(ruleYearRange, position1071)
			}
			return true
		l1070:
			position, tokenIndex = position1070, tokenIndex1070
			return false
		},
		/* 126 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position1105, tokenIndex1105 := position, tokenIndex
			{
				position1106 := position
				if !_rules[ruleYearNum]() {
					goto l1105
				}
				if buffer[position] != rune('.') {
					goto l1105
				}
				position++
				add(ruleYearWithDot, position1106)
			}
			return true
		l1105:
			position, tokenIndex = position1105, tokenIndex1105
			return false
		},
		/* 127 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position1107, tokenIndex1107 := position, tokenIndex
			{
				position1108 := position
				if buffer[position] != rune('[') {
					goto l1107
				}
				position++
				{
					position1109, tokenIndex1109 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1109
					}
					goto l1110
				l1109:
					position, tokenIndex = position1109, tokenIndex1109
				}
			l1110:
				if !_rules[ruleYearNum]() {
					goto l1107
				}
				{
					position1111, tokenIndex1111 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1111
					}
					goto l1112
				l1111:
					position, tokenIndex = position1111, tokenIndex1111
				}
			l1112:
				if buffer[position] != rune(']') {
					goto l1107
				}
				position++
				add(ruleYearApprox, position1108)
			}
			return true
		l1107:
			position, tokenIndex = position1107, tokenIndex1107
			return false
		},
		/* 128 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position1113, tokenIndex1113 := position, tokenIndex
			{
				position1114 := position
				{
					position1115, tokenIndex1115 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1116
					}
					goto l1115
				l1116:
					position, tokenIndex = position1115, tokenIndex1115
					if !_rules[ruleYearNum]() {
						goto l1113
					}
				}
			l1115:
				{
					position1117, tokenIndex1117 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1117
					}
					goto l1118
				l1117:
					position, tokenIndex = position1117, tokenIndex1117
				}
			l1118:
				if buffer[position] != rune(':') {
					goto l1113
				}
				position++
				{
					position1119, tokenIndex1119 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1119
					}
					goto l1120
				l1119:
					position, tokenIndex = position1119, tokenIndex1119
				}
			l1120:
				if !_rules[ruleNums]() {
					goto l1113
				}
			l1121:
				{
					position1122, tokenIndex1122 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1122
					}
					goto l1121
				l1122:
					position, tokenIndex = position1122, tokenIndex1122
				}
				add(ruleYearWithPage, position1114)
			}
			return true
		l1113:
			position, tokenIndex = position1113, tokenIndex1113
			return false
		},
		/* 129 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position1123, tokenIndex1123 := position, tokenIndex
			{
				position1124 := position
				if buffer[position] != rune('(') {
					goto l1123
				}
				position++
				{
					position1125, tokenIndex1125 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1126
					}
					goto l1125
				l1126:
					position, tokenIndex = position1125, tokenIndex1125
					if !_rules[ruleYearNum]() {
						goto l1123
					}
				}
			l1125:
				if buffer[position] != rune(')') {
					goto l1123
				}
				position++
				add(ruleYearWithParens, position1124)
			}
			return true
		l1123:
			position, tokenIndex = position1123, tokenIndex1123
			return false
		},
		/* 130 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position1127, tokenIndex1127 := position, tokenIndex
			{
				position1128 := position
				if !_rules[ruleYearNum]() {
					goto l1127
				}
				if !_rules[ruleLowerASCII]() {
					goto l1127
				}
				add(ruleYearWithChar, position1128)
			}
			return true
		l1127:
			position, tokenIndex = position1127, tokenIndex1127
			return false
		},
		/* 131 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position1129, tokenIndex1129 := position, tokenIndex
			{
				position1130 := position
				{
					position1131, tokenIndex1131 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l1132
					}
					position++
					goto l1131
				l1132:
					position, tokenIndex = position1131, tokenIndex1131
					if buffer[position] != rune('2') {
						goto l1129
					}
					position++
				}
			l1131:
				{
					position1133, tokenIndex1133 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1134
					}
					position++
					goto l1133
				l1134:
					position, tokenIndex = position1133, tokenIndex1133
					if buffer[position] != rune('7') {
						goto l1135
					}
					position++
					goto l1133
				l1135:
					position, tokenIndex = position1133, tokenIndex1133
					if buffer[position] != rune('8') {
						goto l1136
					}
					position++
					goto l1133
				l1136:
					position, tokenIndex = position1133, tokenIndex1133
					if buffer[position] != rune('9') {
						goto l1129
					}
					position++
				}
			l1133:
				if !_rules[ruleNums]() {
					goto l1129
				}
				{
					position1137, tokenIndex1137 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1138
					}
					goto l1137
				l1138:
					position, tokenIndex = position1137, tokenIndex1137
					if buffer[position] != rune('?') {
						goto l1129
					}
					position++
				}
			l1137:
			l1139:
				{
					position1140, tokenIndex1140 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1140
					}
					position++
					goto l1139
				l1140:
					position, tokenIndex = position1140, tokenIndex1140
				}
				add(ruleYearNum, position1130)
			}
			return true
		l1129:
			position, tokenIndex = position1129, tokenIndex1129
			return false
		},
		/* 132 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1141, tokenIndex1141 := position, tokenIndex
			{
				position1142 := position
				{
					position1143, tokenIndex1143 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1144
					}
					goto l1143
				l1144:
					position, tokenIndex = position1143, tokenIndex1143
					if !_rules[ruleUpperCharExtended]() {
						goto l1141
					}
				}
			l1143:
				add(ruleNameUpperChar, position1142)
			}
			return true
		l1141:
			position, tokenIndex = position1141, tokenIndex1141
			return false
		},
		/* 133 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1145, tokenIndex1145 := position, tokenIndex
			{
				position1146 := position
				{
					position1147, tokenIndex1147 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1148
					}
					position++
					goto l1147
				l1148:
					position, tokenIndex = position1147, tokenIndex1147
					if buffer[position] != rune('Œ') {
						goto l1149
					}
					position++
					goto l1147
				l1149:
					position, tokenIndex = position1147, tokenIndex1147
					if buffer[position] != rune('Ö') {
						goto l1145
					}
					position++
				}
			l1147:
				add(ruleUpperCharExtended, position1146)
			}
			return true
		l1145:
			position, tokenIndex = position1145, tokenIndex1145
			return false
		},
		/* 134 UpperChar <- <UpperASCII> */
		func() bool {
			position1150, tokenIndex1150 := position, tokenIndex
			{
				position1151 := position
				if !_rules[ruleUpperASCII]() {
					goto l1150
				}
				add(ruleUpperChar, position1151)
			}
			return true
		l1150:
			position, tokenIndex = position1150, tokenIndex1150
			return false
		},
		/* 135 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1152, tokenIndex1152 := position, tokenIndex
			{
				position1153 := position
				{
					position1154, tokenIndex1154 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1155
					}
					goto l1154
				l1155:
					position, tokenIndex = position1154, tokenIndex1154
					if !_rules[ruleLowerCharExtended]() {
						goto l1156
					}
					goto l1154
				l1156:
					position, tokenIndex = position1154, tokenIndex1154
					if !_rules[ruleMiscodedChar]() {
						goto l1152
					}
				}
			l1154:
				add(ruleNameLowerChar, position1153)
			}
			return true
		l1152:
			position, tokenIndex = position1152, tokenIndex1152
			return false
		},
		/* 136 MiscodedChar <- <'�'> */
		func() bool {
			position1157, tokenIndex1157 := position, tokenIndex
			{
				position1158 := position
				if buffer[position] != rune('�') {
					goto l1157
				}
				position++
				add(ruleMiscodedChar, position1158)
			}
			return true
		l1157:
			position, tokenIndex = position1157, tokenIndex1157
			return false
		},
		/* 137 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'û' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1159, tokenIndex1159 := position, tokenIndex
			{
				position1160 := position
				{
					position1161, tokenIndex1161 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1162
					}
					position++
					goto l1161
				l1162:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('œ') {
						goto l1163
					}
					position++
					goto l1161
				l1163:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('à') {
						goto l1164
					}
					position++
					goto l1161
				l1164:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('â') {
						goto l1165
					}
					position++
					goto l1161
				l1165:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('å') {
						goto l1166
					}
					position++
					goto l1161
				l1166:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ã') {
						goto l1167
					}
					position++
					goto l1161
				l1167:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ä') {
						goto l1168
					}
					position++
					goto l1161
				l1168:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('á') {
						goto l1169
					}
					position++
					goto l1161
				l1169:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ç') {
						goto l1170
					}
					position++
					goto l1161
				l1170:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('č') {
						goto l1171
					}
					position++
					goto l1161
				l1171:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('é') {
						goto l1172
					}
					position++
					goto l1161
				l1172:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('è') {
						goto l1173
					}
					position++
					goto l1161
				l1173:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ë') {
						goto l1174
					}
					position++
					goto l1161
				l1174:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('í') {
						goto l1175
					}
					position++
					goto l1161
				l1175:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ì') {
						goto l1176
					}
					position++
					goto l1161
				l1176:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ï') {
						goto l1177
					}
					position++
					goto l1161
				l1177:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ň') {
						goto l1178
					}
					position++
					goto l1161
				l1178:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ñ') {
						goto l1179
					}
					position++
					goto l1161
				l1179:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ñ') {
						goto l1180
					}
					position++
					goto l1161
				l1180:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ó') {
						goto l1181
					}
					position++
					goto l1161
				l1181:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ò') {
						goto l1182
					}
					position++
					goto l1161
				l1182:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ô') {
						goto l1183
					}
					position++
					goto l1161
				l1183:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ø') {
						goto l1184
					}
					position++
					goto l1161
				l1184:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('õ') {
						goto l1185
					}
					position++
					goto l1161
				l1185:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ö') {
						goto l1186
					}
					position++
					goto l1161
				l1186:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ú') {
						goto l1187
					}
					position++
					goto l1161
				l1187:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('û') {
						goto l1188
					}
					position++
					goto l1161
				l1188:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ù') {
						goto l1189
					}
					position++
					goto l1161
				l1189:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ü') {
						goto l1190
					}
					position++
					goto l1161
				l1190:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ŕ') {
						goto l1191
					}
					position++
					goto l1161
				l1191:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ř') {
						goto l1192
					}
					position++
					goto l1161
				l1192:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ŗ') {
						goto l1193
					}
					position++
					goto l1161
				l1193:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ſ') {
						goto l1194
					}
					position++
					goto l1161
				l1194:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('š') {
						goto l1195
					}
					position++
					goto l1161
				l1195:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('š') {
						goto l1196
					}
					position++
					goto l1161
				l1196:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ş') {
						goto l1197
					}
					position++
					goto l1161
				l1197:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ß') {
						goto l1198
					}
					position++
					goto l1161
				l1198:
					position, tokenIndex = position1161, tokenIndex1161
					if buffer[position] != rune('ž') {
						goto l1159
					}
					position++
				}
			l1161:
				add(ruleLowerCharExtended, position1160)
			}
			return true
		l1159:
			position, tokenIndex = position1159, tokenIndex1159
			return false
		},
		/* 138 LowerChar <- <LowerASCII> */
		func() bool {
			position1199, tokenIndex1199 := position, tokenIndex
			{
				position1200 := position
				if !_rules[ruleLowerASCII]() {
					goto l1199
				}
				add(ruleLowerChar, position1200)
			}
			return true
		l1199:
			position, tokenIndex = position1199, tokenIndex1199
			return false
		},
		/* 139 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1201, tokenIndex1201 := position, tokenIndex
			{
				position1202 := position
				{
					position1203, tokenIndex1203 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1204
					}
					goto l1203
				l1204:
					position, tokenIndex = position1203, tokenIndex1203
					{
						position1205, tokenIndex1205 := position, tokenIndex
						if !matchDot() {
							goto l1205
						}
						goto l1201
					l1205:
						position, tokenIndex = position1205, tokenIndex1205
					}
				}
			l1203:
				add(ruleSpaceCharEOI, position1202)
			}
			return true
		l1201:
			position, tokenIndex = position1201, tokenIndex1201
			return false
		},
		/* 140 Nums <- <[0-9]> */
		func() bool {
			position1206, tokenIndex1206 := position, tokenIndex
			{
				position1207 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1206
				}
				position++
				add(ruleNums, position1207)
			}
			return true
		l1206:
			position, tokenIndex = position1206, tokenIndex1206
			return false
		},
		/* 141 LowerGreek <- <[α-ω]> */
		func() bool {
			position1208, tokenIndex1208 := position, tokenIndex
			{
				position1209 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1208
				}
				position++
				add(ruleLowerGreek, position1209)
			}
			return true
		l1208:
			position, tokenIndex = position1208, tokenIndex1208
			return false
		},
		/* 142 LowerASCII <- <[a-z]> */
		func() bool {
			position1210, tokenIndex1210 := position, tokenIndex
			{
				position1211 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1210
				}
				position++
				add(ruleLowerASCII, position1211)
			}
			return true
		l1210:
			position, tokenIndex = position1210, tokenIndex1210
			return false
		},
		/* 143 UpperASCII <- <[A-Z]> */
		func() bool {
			position1212, tokenIndex1212 := position, tokenIndex
			{
				position1213 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1212
				}
				position++
				add(ruleUpperASCII, position1213)
			}
			return true
		l1212:
			position, tokenIndex = position1212, tokenIndex1212
			return false
		},
		/* 144 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1214, tokenIndex1214 := position, tokenIndex
			{
				position1215 := position
				{
					position1216, tokenIndex1216 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1217
					}
					goto l1216
				l1217:
					position, tokenIndex = position1216, tokenIndex1216
					if !_rules[ruleApostrASCII]() {
						goto l1214
					}
				}
			l1216:
				add(ruleApostrophe, position1215)
			}
			return true
		l1214:
			position, tokenIndex = position1214, tokenIndex1214
			return false
		},
		/* 145 ApostrASCII <- <'\''> */
		func() bool {
			position1218, tokenIndex1218 := position, tokenIndex
			{
				position1219 := position
				if buffer[position] != rune('\'') {
					goto l1218
				}
				position++
				add(ruleApostrASCII, position1219)
			}
			return true
		l1218:
			position, tokenIndex = position1218, tokenIndex1218
			return false
		},
		/* 146 ApostrOther <- <('‘' / '’' / '`' / '´')> */
		func() bool {
			position1220, tokenIndex1220 := position, tokenIndex
			{
				position1221 := position
				{
					position1222, tokenIndex1222 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1223
					}
					position++
					goto l1222
				l1223:
					position, tokenIndex = position1222, tokenIndex1222
					if buffer[position] != rune('’') {
						goto l1224
					}
					position++
					goto l1222
				l1224:
					position, tokenIndex = position1222, tokenIndex1222
					if buffer[position] != rune('`') {
						goto l1225
					}
					position++
					goto l1222
				l1225:
					position, tokenIndex = position1222, tokenIndex1222
					if buffer[position] != rune('´') {
						goto l1220
					}
					position++
				}
			l1222:
				add(ruleApostrOther, position1221)
			}
			return true
		l1220:
			position, tokenIndex = position1220, tokenIndex1220
			return false
		},
		/* 147 Dash <- <('-' / DashOther)> */
		func() bool {
			position1226, tokenIndex1226 := position, tokenIndex
			{
				position1227 := position
				{
					position1228, tokenIndex1228 := position, tokenIndex
					if buffer[position] != rune('-') {
						goto l1229
					}
					position++
					goto l1228
				l1229:
					position, tokenIndex = position1228, tokenIndex1228
					if !_rules[ruleDashOther]() {
						goto l1226
					}
				}
			l1228:
				add(ruleDash, position1227)
			}
			return true
		l1226:
			position, tokenIndex = position1226, tokenIndex1226
			return false
		},
		/* 148 DashOther <- <'‑'> */
		func() bool {
			position1230, tokenIndex1230 := position, tokenIndex
			{
				position1231 := position
				if buffer[position] != rune('‑') {
					goto l1230
				}
				position++
				add(ruleDashOther, position1231)
			}
			return true
		l1230:
			position, tokenIndex = position1230, tokenIndex1230
			return false
		},
		/* 149 Slash <- <'/'> */
		func() bool {
			position1232, tokenIndex1232 := position, tokenIndex
			{
				position1233 := position
				if buffer[position] != rune('/') {
					goto l1232
				}
				position++
				add(ruleSlash, position1233)
			}
			return true
		l1232:
			position, tokenIndex = position1232, tokenIndex1232
			return false
		},
		/* 150 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1234, tokenIndex1234 := position, tokenIndex
			{
				position1235 := position
				{
					position1236, tokenIndex1236 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1237
					}
					goto l1236
				l1237:
					position, tokenIndex = position1236, tokenIndex1236
					if !_rules[ruleSingleSpace]() {
						goto l1234
					}
				}
			l1236:
				add(rule_, position1235)
			}
			return true
		l1234:
			position, tokenIndex = position1234, tokenIndex1234
			return false
		},
		/* 151 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1238, tokenIndex1238 := position, tokenIndex
			{
				position1239 := position
				if !_rules[ruleSingleSpace]() {
					goto l1238
				}
				if !_rules[ruleSingleSpace]() {
					goto l1238
				}
			l1240:
				{
					position1241, tokenIndex1241 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1241
					}
					goto l1240
				l1241:
					position, tokenIndex = position1241, tokenIndex1241
				}
				add(ruleMultipleSpace, position1239)
			}
			return true
		l1238:
			position, tokenIndex = position1238, tokenIndex1238
			return false
		},
		/* 152 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1242, tokenIndex1242 := position, tokenIndex
			{
				position1243 := position
				{
					position1244, tokenIndex1244 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1245
					}
					position++
					goto l1244
				l1245:
					position, tokenIndex = position1244, tokenIndex1244
					if !_rules[ruleOtherSpace]() {
						goto l1242
					}
				}
			l1244:
				add(ruleSingleSpace, position1243)
			}
			return true
		l1242:
			position, tokenIndex = position1242, tokenIndex1242
			return false
		},
		/* 153 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1246, tokenIndex1246 := position, tokenIndex
			{
				position1247 := position
				{
					position1248, tokenIndex1248 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1249
					}
					position++
					goto l1248
				l1249:
					position, tokenIndex = position1248, tokenIndex1248
					if buffer[position] != rune('\u00a0') {
						goto l1250
					}
					position++
					goto l1248
				l1250:
					position, tokenIndex = position1248, tokenIndex1248
					if buffer[position] != rune('\t') {
						goto l1251
					}
					position++
					goto l1248
				l1251:
					position, tokenIndex = position1248, tokenIndex1248
					if buffer[position] != rune('\r') {
						goto l1252
					}
					position++
					goto l1248
				l1252:
					position, tokenIndex = position1248, tokenIndex1248
					if buffer[position] != rune('\n') {
						goto l1253
					}
					position++
					goto l1248
				l1253:
					position, tokenIndex = position1248, tokenIndex1248
					if buffer[position] != rune('\f') {
						goto l1254
					}
					position++
					goto l1248
				l1254:
					position, tokenIndex = position1248, tokenIndex1248
					if buffer[position] != rune('\v') {
						goto l1246
					}
					position++
				}
			l1248:
				add(ruleOtherSpace, position1247)
			}
			return true
		l1246:
			position, tokenIndex = position1246, tokenIndex1246
			return false
		},
		/* 154 END <- <!.> */
		func() bool {
			position1255, tokenIndex1255 := position, tokenIndex
			{
				position1256 := position
				{
					position1257, tokenIndex1257 := position, tokenIndex
					if !matchDot() {
						goto l1257
					}
					goto l1255
				l1257:
					position, tokenIndex = position1257, tokenIndex1257
				}
				add(ruleEND, position1256)
			}
			return true
		l1255:
			position, tokenIndex = position1255, tokenIndex1255
			return false
		},
	}
	p.rules = _rules
	return nil
}
