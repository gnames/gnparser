package parser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleSciName
	ruleTail
	ruleName
	ruleHybridFormula
	ruleHybridFormulaFull
	ruleHybridFormulaPart
	ruleNamedHybrid
	ruleNamedSpeciesHybrid
	ruleNamedGenusHybrid
	ruleGraftChimeraFormula
	ruleGraftChimeraFormulaFull
	ruleGraftChimeraFormulaPart
	ruleNamedGenusGraftChimera
	ruleCandidatusName
	ruleCandidatus
	ruleSingleName
	ruleNameUninomial
	ruleNameApprox
	ruleNameComp
	ruleNameCompSp
	ruleNameCompIsp
	ruleNameSpecies
	ruleGenusWord
	ruleInfraspGroup
	ruleInfraspEpithet
	ruleCultivarWordGroup
	ruleCultivar
	ruleRankCultivar
	ruleNotHybridChar
	ruleCultivarRecursive
	ruleCultivarApostrophe
	ruleSpeciesEpithet
	ruleIgnoredWord
	ruleComparison
	ruleRank
	ruleRankNotho
	ruleRankOtherUncommon
	ruleRankOther
	ruleRankVar
	ruleRankForma
	ruleRankSsp
	ruleRankAgamo
	ruleSubgenusOrSuperspecies
	ruleUninomialCombo
	ruleUninomialCombo1
	ruleUninomialCombo2
	ruleSubgenus
	ruleSubgenus2
	ruleSubgenus1
	ruleRankUninomial
	ruleRankUninomialPlain
	ruleRankUninomialNotho
	ruleUninomial
	ruleUninomialWord
	ruleAbbrSubgenus
	ruleAbbrGenus
	ruleCapWord
	ruleCapWord1
	ruleCapWordWithDash
	ruleTwoLetterGenusDashedSegment
	ruleWordAfterDash
	ruleUpperAfterDash
	ruleLowerAfterDash
	ruleTwoLetterGenus
	ruleWord
	ruleWord1
	ruleWordStartsWithDigit
	ruleWord2
	ruleWordApostr
	ruleWord4
	ruleDotPrefix
	ruleMultiDashedWord
	ruleHybridChar
	ruleGraftChimeraChar
	ruleApproxNameIgnored
	ruleApproximation
	ruleAuthorship
	ruleAuthorshipCombo
	ruleOriginalAuthorship
	ruleOriginalAuthorshipComb
	ruleCombinationAuthorship
	ruleBasionymAuthorshipMissingParens
	ruleMissingParensStart
	ruleMissingParensEnd
	ruleBasionymAuthorshipYearMisformed
	ruleBasionymAuthorship
	ruleBasionymAuthorship1
	ruleBasionymAuthorship2Parens
	ruleAuthorsGroup
	ruleAuthorsTeam
	ruleAuthorSep
	ruleAuthorSep1
	ruleAuthorSep2
	ruleAuthorSepSpanish
	ruleAuthorEx
	ruleAuthorIn
	ruleAuthorEmend
	ruleAuthor
	ruleAuthor0
	ruleAuthor1
	ruleAuthor2
	ruleUnknownAuthor
	ruleAuthorWord
	ruleAuthorEtAl
	ruleAuthorWord1
	ruleAuthorWord2
	ruleAuthorWord3
	ruleAuthorWord4
	ruleAuthorDashInitials
	ruleAuthorInitial
	ruleAuthorWordSoft
	ruleCapAuthorWord
	ruleAllCapsAuthorWord
	ruleFilius
	ruleFiliusF
	ruleFiliusFNoSpace
	ruleAuthorSuffix
	ruleAuthorPrefixGlued1
	ruleAuthorPrefixGlued2
	ruleAuthorPrefix
	ruleAuthorPrefix2
	ruleAuthorPrefix1
	ruleAuthorUpperChar
	ruleAuthorLowerChar
	ruleYear
	ruleYearRange
	ruleYearWithDot
	ruleYearApprox
	ruleYearWithPage
	ruleYearWithParens
	ruleYearWithChar
	ruleYearNum
	ruleNameUpperChar
	ruleUpperCharExtended
	ruleUpperChar
	ruleNameLowerChar
	ruleMiscodedChar
	ruleLowerCharExtended
	ruleLowerChar
	ruleSpaceCharEOI
	ruleNums
	ruleLowerGreek
	ruleLowerASCII
	ruleUpperASCII
	ruleApostrophe
	ruleApostrASCII
	ruleApostrOther
	ruleDash
	ruleDashOther
	ruleSlash
	rule_
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
)

var rul3s = [...]string{
	"Unknown",
	"SciName",
	"Tail",
	"Name",
	"HybridFormula",
	"HybridFormulaFull",
	"HybridFormulaPart",
	"NamedHybrid",
	"NamedSpeciesHybrid",
	"NamedGenusHybrid",
	"GraftChimeraFormula",
	"GraftChimeraFormulaFull",
	"GraftChimeraFormulaPart",
	"NamedGenusGraftChimera",
	"CandidatusName",
	"Candidatus",
	"SingleName",
	"NameUninomial",
	"NameApprox",
	"NameComp",
	"NameCompSp",
	"NameCompIsp",
	"NameSpecies",
	"GenusWord",
	"InfraspGroup",
	"InfraspEpithet",
	"CultivarWordGroup",
	"Cultivar",
	"RankCultivar",
	"NotHybridChar",
	"CultivarRecursive",
	"CultivarApostrophe",
	"SpeciesEpithet",
	"IgnoredWord",
	"Comparison",
	"Rank",
	"RankNotho",
	"RankOtherUncommon",
	"RankOther",
	"RankVar",
	"RankForma",
	"RankSsp",
	"RankAgamo",
	"SubgenusOrSuperspecies",
	"UninomialCombo",
	"UninomialCombo1",
	"UninomialCombo2",
	"Subgenus",
	"Subgenus2",
	"Subgenus1",
	"RankUninomial",
	"RankUninomialPlain",
	"RankUninomialNotho",
	"Uninomial",
	"UninomialWord",
	"AbbrSubgenus",
	"AbbrGenus",
	"CapWord",
	"CapWord1",
	"CapWordWithDash",
	"TwoLetterGenusDashedSegment",
	"WordAfterDash",
	"UpperAfterDash",
	"LowerAfterDash",
	"TwoLetterGenus",
	"Word",
	"Word1",
	"WordStartsWithDigit",
	"Word2",
	"WordApostr",
	"Word4",
	"DotPrefix",
	"MultiDashedWord",
	"HybridChar",
	"GraftChimeraChar",
	"ApproxNameIgnored",
	"Approximation",
	"Authorship",
	"AuthorshipCombo",
	"OriginalAuthorship",
	"OriginalAuthorshipComb",
	"CombinationAuthorship",
	"BasionymAuthorshipMissingParens",
	"MissingParensStart",
	"MissingParensEnd",
	"BasionymAuthorshipYearMisformed",
	"BasionymAuthorship",
	"BasionymAuthorship1",
	"BasionymAuthorship2Parens",
	"AuthorsGroup",
	"AuthorsTeam",
	"AuthorSep",
	"AuthorSep1",
	"AuthorSep2",
	"AuthorSepSpanish",
	"AuthorEx",
	"AuthorIn",
	"AuthorEmend",
	"Author",
	"Author0",
	"Author1",
	"Author2",
	"UnknownAuthor",
	"AuthorWord",
	"AuthorEtAl",
	"AuthorWord1",
	"AuthorWord2",
	"AuthorWord3",
	"AuthorWord4",
	"AuthorDashInitials",
	"AuthorInitial",
	"AuthorWordSoft",
	"CapAuthorWord",
	"AllCapsAuthorWord",
	"Filius",
	"FiliusF",
	"FiliusFNoSpace",
	"AuthorSuffix",
	"AuthorPrefixGlued1",
	"AuthorPrefixGlued2",
	"AuthorPrefix",
	"AuthorPrefix2",
	"AuthorPrefix1",
	"AuthorUpperChar",
	"AuthorLowerChar",
	"Year",
	"YearRange",
	"YearWithDot",
	"YearApprox",
	"YearWithPage",
	"YearWithParens",
	"YearWithChar",
	"YearNum",
	"NameUpperChar",
	"UpperCharExtended",
	"UpperChar",
	"NameLowerChar",
	"MiscodedChar",
	"LowerCharExtended",
	"LowerChar",
	"SpaceCharEOI",
	"Nums",
	"LowerGreek",
	"LowerASCII",
	"UpperASCII",
	"Apostrophe",
	"ApostrASCII",
	"ApostrOther",
	"Dash",
	"DashOther",
	"Slash",
	"_",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type Engine struct {
	baseEngine

	Buffer string
	buffer []rune
	rules  [156]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *Engine) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *Engine) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *Engine
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *Engine) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *Engine) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *Engine) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func Pretty(pretty bool) func(*Engine) error {
	return func(p *Engine) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*Engine) error {
	return func(p *Engine) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *Engine) Init(options ...func(*Engine) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 SciName <- <(_? Name Tail END)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				if !_rules[ruleName]() {
					goto l0
				}
				if !_rules[ruleTail]() {
					goto l0
				}
				if !_rules[ruleEND]() {
					goto l0
				}
				add(ruleSciName, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Tail <- <((_ / ';' / ',') .*)?> */
		func() bool {
			{
				position5 := position
				{
					position6, tokenIndex6 := position, tokenIndex
					{
						position8, tokenIndex8 := position, tokenIndex
						if !_rules[rule_]() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(';') {
							goto l10
						}
						position++
						goto l8
					l10:
						position, tokenIndex = position8, tokenIndex8
						if buffer[position] != rune(',') {
							goto l6
						}
						position++
					}
				l8:
				l11:
					{
						position12, tokenIndex12 := position, tokenIndex
						if !matchDot() {
							goto l12
						}
						goto l11
					l12:
						position, tokenIndex = position12, tokenIndex12
					}
					goto l7
				l6:
					position, tokenIndex = position6, tokenIndex6
				}
			l7:
				add(ruleTail, position5)
			}
			return true
		},
		/* 2 Name <- <(NamedGenusGraftChimera / GraftChimeraFormula / NamedHybrid / HybridFormula / CandidatusName / SingleName)> */
		func() bool {
			position13, tokenIndex13 := position, tokenIndex
			{
				position14 := position
				{
					position15, tokenIndex15 := position, tokenIndex
					if !_rules[ruleNamedGenusGraftChimera]() {
						goto l16
					}
					goto l15
				l16:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleGraftChimeraFormula]() {
						goto l17
					}
					goto l15
				l17:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleNamedHybrid]() {
						goto l18
					}
					goto l15
				l18:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleHybridFormula]() {
						goto l19
					}
					goto l15
				l19:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleCandidatusName]() {
						goto l20
					}
					goto l15
				l20:
					position, tokenIndex = position15, tokenIndex15
					if !_rules[ruleSingleName]() {
						goto l13
					}
				}
			l15:
				add(ruleName, position14)
			}
			return true
		l13:
			position, tokenIndex = position13, tokenIndex13
			return false
		},
		/* 3 HybridFormula <- <(SingleName (_ (HybridFormulaPart / HybridFormulaFull))+)> */
		func() bool {
			position21, tokenIndex21 := position, tokenIndex
			{
				position22 := position
				if !_rules[ruleSingleName]() {
					goto l21
				}
				if !_rules[rule_]() {
					goto l21
				}
				{
					position25, tokenIndex25 := position, tokenIndex
					if !_rules[ruleHybridFormulaPart]() {
						goto l26
					}
					goto l25
				l26:
					position, tokenIndex = position25, tokenIndex25
					if !_rules[ruleHybridFormulaFull]() {
						goto l21
					}
				}
			l25:
			l23:
				{
					position24, tokenIndex24 := position, tokenIndex
					if !_rules[rule_]() {
						goto l24
					}
					{
						position27, tokenIndex27 := position, tokenIndex
						if !_rules[ruleHybridFormulaPart]() {
							goto l28
						}
						goto l27
					l28:
						position, tokenIndex = position27, tokenIndex27
						if !_rules[ruleHybridFormulaFull]() {
							goto l24
						}
					}
				l27:
					goto l23
				l24:
					position, tokenIndex = position24, tokenIndex24
				}
				add(ruleHybridFormula, position22)
			}
			return true
		l21:
			position, tokenIndex = position21, tokenIndex21
			return false
		},
		/* 4 HybridFormulaFull <- <(HybridChar (_ SingleName)?)> */
		func() bool {
			position29, tokenIndex29 := position, tokenIndex
			{
				position30 := position
				if !_rules[ruleHybridChar]() {
					goto l29
				}
				{
					position31, tokenIndex31 := position, tokenIndex
					if !_rules[rule_]() {
						goto l31
					}
					if !_rules[ruleSingleName]() {
						goto l31
					}
					goto l32
				l31:
					position, tokenIndex = position31, tokenIndex31
				}
			l32:
				add(ruleHybridFormulaFull, position30)
			}
			return true
		l29:
			position, tokenIndex = position29, tokenIndex29
			return false
		},
		/* 5 HybridFormulaPart <- <(HybridChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position33, tokenIndex33 := position, tokenIndex
			{
				position34 := position
				if !_rules[ruleHybridChar]() {
					goto l33
				}
				if !_rules[rule_]() {
					goto l33
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l33
				}
				{
					position35, tokenIndex35 := position, tokenIndex
					if !_rules[rule_]() {
						goto l35
					}
					if !_rules[ruleInfraspGroup]() {
						goto l35
					}
					goto l36
				l35:
					position, tokenIndex = position35, tokenIndex35
				}
			l36:
				add(ruleHybridFormulaPart, position34)
			}
			return true
		l33:
			position, tokenIndex = position33, tokenIndex33
			return false
		},
		/* 6 NamedHybrid <- <(NamedGenusHybrid / NamedSpeciesHybrid)> */
		func() bool {
			position37, tokenIndex37 := position, tokenIndex
			{
				position38 := position
				{
					position39, tokenIndex39 := position, tokenIndex
					if !_rules[ruleNamedGenusHybrid]() {
						goto l40
					}
					goto l39
				l40:
					position, tokenIndex = position39, tokenIndex39
					if !_rules[ruleNamedSpeciesHybrid]() {
						goto l37
					}
				}
			l39:
				add(ruleNamedHybrid, position38)
			}
			return true
		l37:
			position, tokenIndex = position37, tokenIndex37
			return false
		},
		/* 7 NamedSpeciesHybrid <- <(GenusWord (_ Subgenus)? (_ Comparison)? _ HybridChar _? SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position41, tokenIndex41 := position, tokenIndex
			{
				position42 := position
				if !_rules[ruleGenusWord]() {
					goto l41
				}
				{
					position43, tokenIndex43 := position, tokenIndex
					if !_rules[rule_]() {
						goto l43
					}
					if !_rules[ruleSubgenus]() {
						goto l43
					}
					goto l44
				l43:
					position, tokenIndex = position43, tokenIndex43
				}
			l44:
				{
					position45, tokenIndex45 := position, tokenIndex
					if !_rules[rule_]() {
						goto l45
					}
					if !_rules[ruleComparison]() {
						goto l45
					}
					goto l46
				l45:
					position, tokenIndex = position45, tokenIndex45
				}
			l46:
				if !_rules[rule_]() {
					goto l41
				}
				if !_rules[ruleHybridChar]() {
					goto l41
				}
				{
					position47, tokenIndex47 := position, tokenIndex
					if !_rules[rule_]() {
						goto l47
					}
					goto l48
				l47:
					position, tokenIndex = position47, tokenIndex47
				}
			l48:
				if !_rules[ruleSpeciesEpithet]() {
					goto l41
				}
				{
					position49, tokenIndex49 := position, tokenIndex
					if !_rules[rule_]() {
						goto l49
					}
					if !_rules[ruleInfraspGroup]() {
						goto l49
					}
					goto l50
				l49:
					position, tokenIndex = position49, tokenIndex49
				}
			l50:
				add(ruleNamedSpeciesHybrid, position42)
			}
			return true
		l41:
			position, tokenIndex = position41, tokenIndex41
			return false
		},
		/* 8 NamedGenusHybrid <- <(HybridChar _? SingleName)> */
		func() bool {
			position51, tokenIndex51 := position, tokenIndex
			{
				position52 := position
				if !_rules[ruleHybridChar]() {
					goto l51
				}
				{
					position53, tokenIndex53 := position, tokenIndex
					if !_rules[rule_]() {
						goto l53
					}
					goto l54
				l53:
					position, tokenIndex = position53, tokenIndex53
				}
			l54:
				if !_rules[ruleSingleName]() {
					goto l51
				}
				add(ruleNamedGenusHybrid, position52)
			}
			return true
		l51:
			position, tokenIndex = position51, tokenIndex51
			return false
		},
		/* 9 GraftChimeraFormula <- <(SingleName (_ (GraftChimeraFormulaPart / GraftChimeraFormulaFull))+)> */
		func() bool {
			position55, tokenIndex55 := position, tokenIndex
			{
				position56 := position
				if !_rules[ruleSingleName]() {
					goto l55
				}
				if !_rules[rule_]() {
					goto l55
				}
				{
					position59, tokenIndex59 := position, tokenIndex
					if !_rules[ruleGraftChimeraFormulaPart]() {
						goto l60
					}
					goto l59
				l60:
					position, tokenIndex = position59, tokenIndex59
					if !_rules[ruleGraftChimeraFormulaFull]() {
						goto l55
					}
				}
			l59:
			l57:
				{
					position58, tokenIndex58 := position, tokenIndex
					if !_rules[rule_]() {
						goto l58
					}
					{
						position61, tokenIndex61 := position, tokenIndex
						if !_rules[ruleGraftChimeraFormulaPart]() {
							goto l62
						}
						goto l61
					l62:
						position, tokenIndex = position61, tokenIndex61
						if !_rules[ruleGraftChimeraFormulaFull]() {
							goto l58
						}
					}
				l61:
					goto l57
				l58:
					position, tokenIndex = position58, tokenIndex58
				}
				add(ruleGraftChimeraFormula, position56)
			}
			return true
		l55:
			position, tokenIndex = position55, tokenIndex55
			return false
		},
		/* 10 GraftChimeraFormulaFull <- <(GraftChimeraChar (_ SingleName)?)> */
		func() bool {
			position63, tokenIndex63 := position, tokenIndex
			{
				position64 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l63
				}
				{
					position65, tokenIndex65 := position, tokenIndex
					if !_rules[rule_]() {
						goto l65
					}
					if !_rules[ruleSingleName]() {
						goto l65
					}
					goto l66
				l65:
					position, tokenIndex = position65, tokenIndex65
				}
			l66:
				add(ruleGraftChimeraFormulaFull, position64)
			}
			return true
		l63:
			position, tokenIndex = position63, tokenIndex63
			return false
		},
		/* 11 GraftChimeraFormulaPart <- <(GraftChimeraChar _ SpeciesEpithet (_ InfraspGroup)?)> */
		func() bool {
			position67, tokenIndex67 := position, tokenIndex
			{
				position68 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l67
				}
				if !_rules[rule_]() {
					goto l67
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l67
				}
				{
					position69, tokenIndex69 := position, tokenIndex
					if !_rules[rule_]() {
						goto l69
					}
					if !_rules[ruleInfraspGroup]() {
						goto l69
					}
					goto l70
				l69:
					position, tokenIndex = position69, tokenIndex69
				}
			l70:
				add(ruleGraftChimeraFormulaPart, position68)
			}
			return true
		l67:
			position, tokenIndex = position67, tokenIndex67
			return false
		},
		/* 12 NamedGenusGraftChimera <- <(GraftChimeraChar _? SingleName)> */
		func() bool {
			position71, tokenIndex71 := position, tokenIndex
			{
				position72 := position
				if !_rules[ruleGraftChimeraChar]() {
					goto l71
				}
				{
					position73, tokenIndex73 := position, tokenIndex
					if !_rules[rule_]() {
						goto l73
					}
					goto l74
				l73:
					position, tokenIndex = position73, tokenIndex73
				}
			l74:
				if !_rules[ruleSingleName]() {
					goto l71
				}
				add(ruleNamedGenusGraftChimera, position72)
			}
			return true
		l71:
			position, tokenIndex = position71, tokenIndex71
			return false
		},
		/* 13 CandidatusName <- <(Candidatus _ SingleName)> */
		func() bool {
			position75, tokenIndex75 := position, tokenIndex
			{
				position76 := position
				if !_rules[ruleCandidatus]() {
					goto l75
				}
				if !_rules[rule_]() {
					goto l75
				}
				if !_rules[ruleSingleName]() {
					goto l75
				}
				add(ruleCandidatusName, position76)
			}
			return true
		l75:
			position, tokenIndex = position75, tokenIndex75
			return false
		},
		/* 14 Candidatus <- <('C' 'a' 'n' 'd' 'i' 'd' 'a' 't' 'u' 's')> */
		func() bool {
			position77, tokenIndex77 := position, tokenIndex
			{
				position78 := position
				if buffer[position] != rune('C') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('n') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('i') {
					goto l77
				}
				position++
				if buffer[position] != rune('d') {
					goto l77
				}
				position++
				if buffer[position] != rune('a') {
					goto l77
				}
				position++
				if buffer[position] != rune('t') {
					goto l77
				}
				position++
				if buffer[position] != rune('u') {
					goto l77
				}
				position++
				if buffer[position] != rune('s') {
					goto l77
				}
				position++
				add(ruleCandidatus, position78)
			}
			return true
		l77:
			position, tokenIndex = position77, tokenIndex77
			return false
		},
		/* 15 SingleName <- <(NameComp / NameApprox / NameSpecies / NameUninomial)> */
		func() bool {
			position79, tokenIndex79 := position, tokenIndex
			{
				position80 := position
				{
					position81, tokenIndex81 := position, tokenIndex
					if !_rules[ruleNameComp]() {
						goto l82
					}
					goto l81
				l82:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameApprox]() {
						goto l83
					}
					goto l81
				l83:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameSpecies]() {
						goto l84
					}
					goto l81
				l84:
					position, tokenIndex = position81, tokenIndex81
					if !_rules[ruleNameUninomial]() {
						goto l79
					}
				}
			l81:
				add(ruleSingleName, position80)
			}
			return true
		l79:
			position, tokenIndex = position79, tokenIndex79
			return false
		},
		/* 16 NameUninomial <- <((UninomialCombo / Uninomial) (_ CultivarWordGroup)?)> */
		func() bool {
			position85, tokenIndex85 := position, tokenIndex
			{
				position86 := position
				{
					position87, tokenIndex87 := position, tokenIndex
					if !_rules[ruleUninomialCombo]() {
						goto l88
					}
					goto l87
				l88:
					position, tokenIndex = position87, tokenIndex87
					if !_rules[ruleUninomial]() {
						goto l85
					}
				}
			l87:
				{
					position89, tokenIndex89 := position, tokenIndex
					if !_rules[rule_]() {
						goto l89
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l89
					}
					goto l90
				l89:
					position, tokenIndex = position89, tokenIndex89
				}
			l90:
				add(ruleNameUninomial, position86)
			}
			return true
		l85:
			position, tokenIndex = position85, tokenIndex85
			return false
		},
		/* 17 NameApprox <- <(GenusWord (_ SpeciesEpithet)? _ Approximation ApproxNameIgnored)> */
		func() bool {
			position91, tokenIndex91 := position, tokenIndex
			{
				position92 := position
				if !_rules[ruleGenusWord]() {
					goto l91
				}
				{
					position93, tokenIndex93 := position, tokenIndex
					if !_rules[rule_]() {
						goto l93
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l93
					}
					goto l94
				l93:
					position, tokenIndex = position93, tokenIndex93
				}
			l94:
				if !_rules[rule_]() {
					goto l91
				}
				if !_rules[ruleApproximation]() {
					goto l91
				}
				if !_rules[ruleApproxNameIgnored]() {
					goto l91
				}
				add(ruleNameApprox, position92)
			}
			return true
		l91:
			position, tokenIndex = position91, tokenIndex91
			return false
		},
		/* 18 NameComp <- <(NameCompIsp / NameCompSp)> */
		func() bool {
			position95, tokenIndex95 := position, tokenIndex
			{
				position96 := position
				{
					position97, tokenIndex97 := position, tokenIndex
					if !_rules[ruleNameCompIsp]() {
						goto l98
					}
					goto l97
				l98:
					position, tokenIndex = position97, tokenIndex97
					if !_rules[ruleNameCompSp]() {
						goto l95
					}
				}
			l97:
				add(ruleNameComp, position96)
			}
			return true
		l95:
			position, tokenIndex = position95, tokenIndex95
			return false
		},
		/* 19 NameCompSp <- <(GenusWord _ Comparison (_ SpeciesEpithet)?)> */
		func() bool {
			position99, tokenIndex99 := position, tokenIndex
			{
				position100 := position
				if !_rules[ruleGenusWord]() {
					goto l99
				}
				if !_rules[rule_]() {
					goto l99
				}
				if !_rules[ruleComparison]() {
					goto l99
				}
				{
					position101, tokenIndex101 := position, tokenIndex
					if !_rules[rule_]() {
						goto l101
					}
					if !_rules[ruleSpeciesEpithet]() {
						goto l101
					}
					goto l102
				l101:
					position, tokenIndex = position101, tokenIndex101
				}
			l102:
				add(ruleNameCompSp, position100)
			}
			return true
		l99:
			position, tokenIndex = position99, tokenIndex99
			return false
		},
		/* 20 NameCompIsp <- <(GenusWord _ SpeciesEpithet _ Comparison (_ InfraspEpithet)?)> */
		func() bool {
			position103, tokenIndex103 := position, tokenIndex
			{
				position104 := position
				if !_rules[ruleGenusWord]() {
					goto l103
				}
				if !_rules[rule_]() {
					goto l103
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l103
				}
				if !_rules[rule_]() {
					goto l103
				}
				if !_rules[ruleComparison]() {
					goto l103
				}
				{
					position105, tokenIndex105 := position, tokenIndex
					if !_rules[rule_]() {
						goto l105
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l105
					}
					goto l106
				l105:
					position, tokenIndex = position105, tokenIndex105
				}
			l106:
				add(ruleNameCompIsp, position104)
			}
			return true
		l103:
			position, tokenIndex = position103, tokenIndex103
			return false
		},
		/* 21 NameSpecies <- <(GenusWord (_? (Subgenus / SubgenusOrSuperspecies))? _ SpeciesEpithet (_ InfraspGroup)? (_ CultivarWordGroup)?)> */
		func() bool {
			position107, tokenIndex107 := position, tokenIndex
			{
				position108 := position
				if !_rules[ruleGenusWord]() {
					goto l107
				}
				{
					position109, tokenIndex109 := position, tokenIndex
					{
						position111, tokenIndex111 := position, tokenIndex
						if !_rules[rule_]() {
							goto l111
						}
						goto l112
					l111:
						position, tokenIndex = position111, tokenIndex111
					}
				l112:
					{
						position113, tokenIndex113 := position, tokenIndex
						if !_rules[ruleSubgenus]() {
							goto l114
						}
						goto l113
					l114:
						position, tokenIndex = position113, tokenIndex113
						if !_rules[ruleSubgenusOrSuperspecies]() {
							goto l109
						}
					}
				l113:
					goto l110
				l109:
					position, tokenIndex = position109, tokenIndex109
				}
			l110:
				if !_rules[rule_]() {
					goto l107
				}
				if !_rules[ruleSpeciesEpithet]() {
					goto l107
				}
				{
					position115, tokenIndex115 := position, tokenIndex
					if !_rules[rule_]() {
						goto l115
					}
					if !_rules[ruleInfraspGroup]() {
						goto l115
					}
					goto l116
				l115:
					position, tokenIndex = position115, tokenIndex115
				}
			l116:
				{
					position117, tokenIndex117 := position, tokenIndex
					if !_rules[rule_]() {
						goto l117
					}
					if !_rules[ruleCultivarWordGroup]() {
						goto l117
					}
					goto l118
				l117:
					position, tokenIndex = position117, tokenIndex117
				}
			l118:
				add(ruleNameSpecies, position108)
			}
			return true
		l107:
			position, tokenIndex = position107, tokenIndex107
			return false
		},
		/* 22 GenusWord <- <((AbbrGenus / UninomialWord) !(_ AuthorWord))> */
		func() bool {
			position119, tokenIndex119 := position, tokenIndex
			{
				position120 := position
				{
					position121, tokenIndex121 := position, tokenIndex
					if !_rules[ruleAbbrGenus]() {
						goto l122
					}
					goto l121
				l122:
					position, tokenIndex = position121, tokenIndex121
					if !_rules[ruleUninomialWord]() {
						goto l119
					}
				}
			l121:
				{
					position123, tokenIndex123 := position, tokenIndex
					if !_rules[rule_]() {
						goto l123
					}
					if !_rules[ruleAuthorWord]() {
						goto l123
					}
					goto l119
				l123:
					position, tokenIndex = position123, tokenIndex123
				}
				add(ruleGenusWord, position120)
			}
			return true
		l119:
			position, tokenIndex = position119, tokenIndex119
			return false
		},
		/* 23 InfraspGroup <- <(InfraspEpithet (_ InfraspEpithet)? (_ InfraspEpithet)?)> */
		func() bool {
			position124, tokenIndex124 := position, tokenIndex
			{
				position125 := position
				if !_rules[ruleInfraspEpithet]() {
					goto l124
				}
				{
					position126, tokenIndex126 := position, tokenIndex
					if !_rules[rule_]() {
						goto l126
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l126
					}
					goto l127
				l126:
					position, tokenIndex = position126, tokenIndex126
				}
			l127:
				{
					position128, tokenIndex128 := position, tokenIndex
					if !_rules[rule_]() {
						goto l128
					}
					if !_rules[ruleInfraspEpithet]() {
						goto l128
					}
					goto l129
				l128:
					position, tokenIndex = position128, tokenIndex128
				}
			l129:
				add(ruleInfraspGroup, position125)
			}
			return true
		l124:
			position, tokenIndex = position124, tokenIndex124
			return false
		},
		/* 24 InfraspEpithet <- <((Rank _?)? !(AuthorEx / AuthorIn) Word (_ IgnoredWord)? (_? Authorship)?)> */
		func() bool {
			position130, tokenIndex130 := position, tokenIndex
			{
				position131 := position
				{
					position132, tokenIndex132 := position, tokenIndex
					if !_rules[ruleRank]() {
						goto l132
					}
					{
						position134, tokenIndex134 := position, tokenIndex
						if !_rules[rule_]() {
							goto l134
						}
						goto l135
					l134:
						position, tokenIndex = position134, tokenIndex134
					}
				l135:
					goto l133
				l132:
					position, tokenIndex = position132, tokenIndex132
				}
			l133:
				{
					position136, tokenIndex136 := position, tokenIndex
					{
						position137, tokenIndex137 := position, tokenIndex
						if !_rules[ruleAuthorEx]() {
							goto l138
						}
						goto l137
					l138:
						position, tokenIndex = position137, tokenIndex137
						if !_rules[ruleAuthorIn]() {
							goto l136
						}
					}
				l137:
					goto l130
				l136:
					position, tokenIndex = position136, tokenIndex136
				}
				if !_rules[ruleWord]() {
					goto l130
				}
				{
					position139, tokenIndex139 := position, tokenIndex
					if !_rules[rule_]() {
						goto l139
					}
					if !_rules[ruleIgnoredWord]() {
						goto l139
					}
					goto l140
				l139:
					position, tokenIndex = position139, tokenIndex139
				}
			l140:
				{
					position141, tokenIndex141 := position, tokenIndex
					{
						position143, tokenIndex143 := position, tokenIndex
						if !_rules[rule_]() {
							goto l143
						}
						goto l144
					l143:
						position, tokenIndex = position143, tokenIndex143
					}
				l144:
					if !_rules[ruleAuthorship]() {
						goto l141
					}
					goto l142
				l141:
					position, tokenIndex = position141, tokenIndex141
				}
			l142:
				add(ruleInfraspEpithet, position131)
			}
			return true
		l130:
			position, tokenIndex = position130, tokenIndex130
			return false
		},
		/* 25 CultivarWordGroup <- <(((RankCultivar _)? CultivarApostrophe CultivarRecursive CultivarApostrophe) / (RankCultivar _ Cultivar))> */
		func() bool {
			position145, tokenIndex145 := position, tokenIndex
			{
				position146 := position
				{
					position147, tokenIndex147 := position, tokenIndex
					{
						position149, tokenIndex149 := position, tokenIndex
						if !_rules[ruleRankCultivar]() {
							goto l149
						}
						if !_rules[rule_]() {
							goto l149
						}
						goto l150
					l149:
						position, tokenIndex = position149, tokenIndex149
					}
				l150:
					if !_rules[ruleCultivarApostrophe]() {
						goto l148
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l148
					}
					if !_rules[ruleCultivarApostrophe]() {
						goto l148
					}
					goto l147
				l148:
					position, tokenIndex = position147, tokenIndex147
					if !_rules[ruleRankCultivar]() {
						goto l145
					}
					if !_rules[rule_]() {
						goto l145
					}
					if !_rules[ruleCultivar]() {
						goto l145
					}
				}
			l147:
				add(ruleCultivarWordGroup, position146)
			}
			return true
		l145:
			position, tokenIndex = position145, tokenIndex145
			return false
		},
		/* 26 Cultivar <- <NotHybridChar+> */
		func() bool {
			position151, tokenIndex151 := position, tokenIndex
			{
				position152 := position
				if !_rules[ruleNotHybridChar]() {
					goto l151
				}
			l153:
				{
					position154, tokenIndex154 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l154
					}
					goto l153
				l154:
					position, tokenIndex = position154, tokenIndex154
				}
				add(ruleCultivar, position152)
			}
			return true
		l151:
			position, tokenIndex = position151, tokenIndex151
			return false
		},
		/* 27 RankCultivar <- <('c' 'v' '.'?)> */
		func() bool {
			position155, tokenIndex155 := position, tokenIndex
			{
				position156 := position
				if buffer[position] != rune('c') {
					goto l155
				}
				position++
				if buffer[position] != rune('v') {
					goto l155
				}
				position++
				{
					position157, tokenIndex157 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l157
					}
					position++
					goto l158
				l157:
					position, tokenIndex = position157, tokenIndex157
				}
			l158:
				add(ruleRankCultivar, position156)
			}
			return true
		l155:
			position, tokenIndex = position155, tokenIndex155
			return false
		},
		/* 28 NotHybridChar <- <(!(_ HybridChar) .)> */
		func() bool {
			position159, tokenIndex159 := position, tokenIndex
			{
				position160 := position
				{
					position161, tokenIndex161 := position, tokenIndex
					if !_rules[rule_]() {
						goto l161
					}
					if !_rules[ruleHybridChar]() {
						goto l161
					}
					goto l159
				l161:
					position, tokenIndex = position161, tokenIndex161
				}
				if !matchDot() {
					goto l159
				}
				add(ruleNotHybridChar, position160)
			}
			return true
		l159:
			position, tokenIndex = position159, tokenIndex159
			return false
		},
		/* 29 CultivarRecursive <- <((NotHybridChar CultivarRecursive) / &CultivarApostrophe)> */
		func() bool {
			position162, tokenIndex162 := position, tokenIndex
			{
				position163 := position
				{
					position164, tokenIndex164 := position, tokenIndex
					if !_rules[ruleNotHybridChar]() {
						goto l165
					}
					if !_rules[ruleCultivarRecursive]() {
						goto l165
					}
					goto l164
				l165:
					position, tokenIndex = position164, tokenIndex164
					{
						position166, tokenIndex166 := position, tokenIndex
						if !_rules[ruleCultivarApostrophe]() {
							goto l162
						}
						position, tokenIndex = position166, tokenIndex166
					}
				}
			l164:
				add(ruleCultivarRecursive, position163)
			}
			return true
		l162:
			position, tokenIndex = position162, tokenIndex162
			return false
		},
		/* 30 CultivarApostrophe <- <('\'' / '‘' / '’' / '"' / '“' / '”')> */
		func() bool {
			position167, tokenIndex167 := position, tokenIndex
			{
				position168 := position
				{
					position169, tokenIndex169 := position, tokenIndex
					if buffer[position] != rune('\'') {
						goto l170
					}
					position++
					goto l169
				l170:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('‘') {
						goto l171
					}
					position++
					goto l169
				l171:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('’') {
						goto l172
					}
					position++
					goto l169
				l172:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('"') {
						goto l173
					}
					position++
					goto l169
				l173:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('“') {
						goto l174
					}
					position++
					goto l169
				l174:
					position, tokenIndex = position169, tokenIndex169
					if buffer[position] != rune('”') {
						goto l167
					}
					position++
				}
			l169:
				add(ruleCultivarApostrophe, position168)
			}
			return true
		l167:
			position, tokenIndex = position167, tokenIndex167
			return false
		},
		/* 31 SpeciesEpithet <- <(!(AuthorEx / AuthorIn) Word (_ IgnoredWord)? (_? Authorship)?)> */
		func() bool {
			position175, tokenIndex175 := position, tokenIndex
			{
				position176 := position
				{
					position177, tokenIndex177 := position, tokenIndex
					{
						position178, tokenIndex178 := position, tokenIndex
						if !_rules[ruleAuthorEx]() {
							goto l179
						}
						goto l178
					l179:
						position, tokenIndex = position178, tokenIndex178
						if !_rules[ruleAuthorIn]() {
							goto l177
						}
					}
				l178:
					goto l175
				l177:
					position, tokenIndex = position177, tokenIndex177
				}
				if !_rules[ruleWord]() {
					goto l175
				}
				{
					position180, tokenIndex180 := position, tokenIndex
					if !_rules[rule_]() {
						goto l180
					}
					if !_rules[ruleIgnoredWord]() {
						goto l180
					}
					goto l181
				l180:
					position, tokenIndex = position180, tokenIndex180
				}
			l181:
				{
					position182, tokenIndex182 := position, tokenIndex
					{
						position184, tokenIndex184 := position, tokenIndex
						if !_rules[rule_]() {
							goto l184
						}
						goto l185
					l184:
						position, tokenIndex = position184, tokenIndex184
					}
				l185:
					if !_rules[ruleAuthorship]() {
						goto l182
					}
					goto l183
				l182:
					position, tokenIndex = position182, tokenIndex182
				}
			l183:
				add(ruleSpeciesEpithet, position176)
			}
			return true
		l175:
			position, tokenIndex = position175, tokenIndex175
			return false
		},
		/* 32 IgnoredWord <- <(('m' 'i' 'h' 'i' '.') / ('m' 'i' 'h' 'i'))> */
		func() bool {
			position186, tokenIndex186 := position, tokenIndex
			{
				position187 := position
				{
					position188, tokenIndex188 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l189
					}
					position++
					if buffer[position] != rune('i') {
						goto l189
					}
					position++
					if buffer[position] != rune('h') {
						goto l189
					}
					position++
					if buffer[position] != rune('i') {
						goto l189
					}
					position++
					if buffer[position] != rune('.') {
						goto l189
					}
					position++
					goto l188
				l189:
					position, tokenIndex = position188, tokenIndex188
					if buffer[position] != rune('m') {
						goto l186
					}
					position++
					if buffer[position] != rune('i') {
						goto l186
					}
					position++
					if buffer[position] != rune('h') {
						goto l186
					}
					position++
					if buffer[position] != rune('i') {
						goto l186
					}
					position++
				}
			l188:
				add(ruleIgnoredWord, position187)
			}
			return true
		l186:
			position, tokenIndex = position186, tokenIndex186
			return false
		},
		/* 33 Comparison <- <('c' 'f' '.'? &SpaceCharEOI)> */
		func() bool {
			position190, tokenIndex190 := position, tokenIndex
			{
				position191 := position
				if buffer[position] != rune('c') {
					goto l190
				}
				position++
				if buffer[position] != rune('f') {
					goto l190
				}
				position++
				{
					position192, tokenIndex192 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l192
					}
					position++
					goto l193
				l192:
					position, tokenIndex = position192, tokenIndex192
				}
			l193:
				{
					position194, tokenIndex194 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l190
					}
					position, tokenIndex = position194, tokenIndex194
				}
				add(ruleComparison, position191)
			}
			return true
		l190:
			position, tokenIndex = position190, tokenIndex190
			return false
		},
		/* 34 Rank <- <((RankForma / RankVar / RankSsp / RankOther / RankOtherUncommon / RankAgamo / RankNotho) (_? LowerGreek ('.' / &SpaceCharEOI))?)> */
		func() bool {
			position195, tokenIndex195 := position, tokenIndex
			{
				position196 := position
				{
					position197, tokenIndex197 := position, tokenIndex
					if !_rules[ruleRankForma]() {
						goto l198
					}
					goto l197
				l198:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankVar]() {
						goto l199
					}
					goto l197
				l199:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankSsp]() {
						goto l200
					}
					goto l197
				l200:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankOther]() {
						goto l201
					}
					goto l197
				l201:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankOtherUncommon]() {
						goto l202
					}
					goto l197
				l202:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankAgamo]() {
						goto l203
					}
					goto l197
				l203:
					position, tokenIndex = position197, tokenIndex197
					if !_rules[ruleRankNotho]() {
						goto l195
					}
				}
			l197:
				{
					position204, tokenIndex204 := position, tokenIndex
					{
						position206, tokenIndex206 := position, tokenIndex
						if !_rules[rule_]() {
							goto l206
						}
						goto l207
					l206:
						position, tokenIndex = position206, tokenIndex206
					}
				l207:
					if !_rules[ruleLowerGreek]() {
						goto l204
					}
					{
						position208, tokenIndex208 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l209
						}
						position++
						goto l208
					l209:
						position, tokenIndex = position208, tokenIndex208
						{
							position210, tokenIndex210 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l204
							}
							position, tokenIndex = position210, tokenIndex210
						}
					}
				l208:
					goto l205
				l204:
					position, tokenIndex = position204, tokenIndex204
				}
			l205:
				add(ruleRank, position196)
			}
			return true
		l195:
			position, tokenIndex = position195, tokenIndex195
			return false
		},
		/* 35 RankNotho <- <((('n' 'o' 't' 'h' 'o' (('v' 'a' 'r') / ('f' 'o') / 'f' / ('s' 'u' 'b' 's' 'p') / ('s' 's' 'p') / ('s' 'p') / ('m' 'o' 'r' 't' 'h') / ('s' 'u' 'p' 's' 'p') / ('s' 'u'))) / ('n' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position211, tokenIndex211 := position, tokenIndex
			{
				position212 := position
				{
					position213, tokenIndex213 := position, tokenIndex
					if buffer[position] != rune('n') {
						goto l214
					}
					position++
					if buffer[position] != rune('o') {
						goto l214
					}
					position++
					if buffer[position] != rune('t') {
						goto l214
					}
					position++
					if buffer[position] != rune('h') {
						goto l214
					}
					position++
					if buffer[position] != rune('o') {
						goto l214
					}
					position++
					{
						position215, tokenIndex215 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l216
						}
						position++
						if buffer[position] != rune('a') {
							goto l216
						}
						position++
						if buffer[position] != rune('r') {
							goto l216
						}
						position++
						goto l215
					l216:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('f') {
							goto l217
						}
						position++
						if buffer[position] != rune('o') {
							goto l217
						}
						position++
						goto l215
					l217:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('f') {
							goto l218
						}
						position++
						goto l215
					l218:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l219
						}
						position++
						if buffer[position] != rune('u') {
							goto l219
						}
						position++
						if buffer[position] != rune('b') {
							goto l219
						}
						position++
						if buffer[position] != rune('s') {
							goto l219
						}
						position++
						if buffer[position] != rune('p') {
							goto l219
						}
						position++
						goto l215
					l219:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l220
						}
						position++
						if buffer[position] != rune('s') {
							goto l220
						}
						position++
						if buffer[position] != rune('p') {
							goto l220
						}
						position++
						goto l215
					l220:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l221
						}
						position++
						if buffer[position] != rune('p') {
							goto l221
						}
						position++
						goto l215
					l221:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('m') {
							goto l222
						}
						position++
						if buffer[position] != rune('o') {
							goto l222
						}
						position++
						if buffer[position] != rune('r') {
							goto l222
						}
						position++
						if buffer[position] != rune('t') {
							goto l222
						}
						position++
						if buffer[position] != rune('h') {
							goto l222
						}
						position++
						goto l215
					l222:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l223
						}
						position++
						if buffer[position] != rune('u') {
							goto l223
						}
						position++
						if buffer[position] != rune('p') {
							goto l223
						}
						position++
						if buffer[position] != rune('s') {
							goto l223
						}
						position++
						if buffer[position] != rune('p') {
							goto l223
						}
						position++
						goto l215
					l223:
						position, tokenIndex = position215, tokenIndex215
						if buffer[position] != rune('s') {
							goto l214
						}
						position++
						if buffer[position] != rune('u') {
							goto l214
						}
						position++
					}
				l215:
					goto l213
				l214:
					position, tokenIndex = position213, tokenIndex213
					if buffer[position] != rune('n') {
						goto l211
					}
					position++
					if buffer[position] != rune('v') {
						goto l211
					}
					position++
					if buffer[position] != rune('a') {
						goto l211
					}
					position++
					if buffer[position] != rune('r') {
						goto l211
					}
					position++
				}
			l213:
				{
					position224, tokenIndex224 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l225
					}
					position++
					goto l224
				l225:
					position, tokenIndex = position224, tokenIndex224
					{
						position226, tokenIndex226 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l211
						}
						position, tokenIndex = position226, tokenIndex226
					}
				}
			l224:
				add(ruleRankNotho, position212)
			}
			return true
		l211:
			position, tokenIndex = position211, tokenIndex211
			return false
		},
		/* 36 RankOtherUncommon <- <(('*' / ('n' 'a' 't' 'i' 'o') / ('n' 'a' 't' '.') / ('n' 'a' 't') / ('u' 'n' 'r' '.') / ('f' '.' 's' 'p') / ('p' 'r' 'o' 'l' '.') / 'α' / ('β' 'β') / 'β' / 'γ' / 'δ' / 'ε' / 'φ' / 'θ' / 'μ' / ('a' '.') / ('b' '.') / ('c' '.') / ('d' '.') / ('e' '.') / ('g' '.') / ('k' '.') / ('m' 'u' 't' '.')) &SpaceCharEOI)> */
		func() bool {
			position227, tokenIndex227 := position, tokenIndex
			{
				position228 := position
				{
					position229, tokenIndex229 := position, tokenIndex
					if buffer[position] != rune('*') {
						goto l230
					}
					position++
					goto l229
				l230:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('n') {
						goto l231
					}
					position++
					if buffer[position] != rune('a') {
						goto l231
					}
					position++
					if buffer[position] != rune('t') {
						goto l231
					}
					position++
					if buffer[position] != rune('i') {
						goto l231
					}
					position++
					if buffer[position] != rune('o') {
						goto l231
					}
					position++
					goto l229
				l231:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('n') {
						goto l232
					}
					position++
					if buffer[position] != rune('a') {
						goto l232
					}
					position++
					if buffer[position] != rune('t') {
						goto l232
					}
					position++
					if buffer[position] != rune('.') {
						goto l232
					}
					position++
					goto l229
				l232:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('n') {
						goto l233
					}
					position++
					if buffer[position] != rune('a') {
						goto l233
					}
					position++
					if buffer[position] != rune('t') {
						goto l233
					}
					position++
					goto l229
				l233:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('u') {
						goto l234
					}
					position++
					if buffer[position] != rune('n') {
						goto l234
					}
					position++
					if buffer[position] != rune('r') {
						goto l234
					}
					position++
					if buffer[position] != rune('.') {
						goto l234
					}
					position++
					goto l229
				l234:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('f') {
						goto l235
					}
					position++
					if buffer[position] != rune('.') {
						goto l235
					}
					position++
					if buffer[position] != rune('s') {
						goto l235
					}
					position++
					if buffer[position] != rune('p') {
						goto l235
					}
					position++
					goto l229
				l235:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('p') {
						goto l236
					}
					position++
					if buffer[position] != rune('r') {
						goto l236
					}
					position++
					if buffer[position] != rune('o') {
						goto l236
					}
					position++
					if buffer[position] != rune('l') {
						goto l236
					}
					position++
					if buffer[position] != rune('.') {
						goto l236
					}
					position++
					goto l229
				l236:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('α') {
						goto l237
					}
					position++
					goto l229
				l237:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('β') {
						goto l238
					}
					position++
					if buffer[position] != rune('β') {
						goto l238
					}
					position++
					goto l229
				l238:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('β') {
						goto l239
					}
					position++
					goto l229
				l239:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('γ') {
						goto l240
					}
					position++
					goto l229
				l240:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('δ') {
						goto l241
					}
					position++
					goto l229
				l241:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('ε') {
						goto l242
					}
					position++
					goto l229
				l242:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('φ') {
						goto l243
					}
					position++
					goto l229
				l243:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('θ') {
						goto l244
					}
					position++
					goto l229
				l244:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('μ') {
						goto l245
					}
					position++
					goto l229
				l245:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('a') {
						goto l246
					}
					position++
					if buffer[position] != rune('.') {
						goto l246
					}
					position++
					goto l229
				l246:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('b') {
						goto l247
					}
					position++
					if buffer[position] != rune('.') {
						goto l247
					}
					position++
					goto l229
				l247:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('c') {
						goto l248
					}
					position++
					if buffer[position] != rune('.') {
						goto l248
					}
					position++
					goto l229
				l248:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('d') {
						goto l249
					}
					position++
					if buffer[position] != rune('.') {
						goto l249
					}
					position++
					goto l229
				l249:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('e') {
						goto l250
					}
					position++
					if buffer[position] != rune('.') {
						goto l250
					}
					position++
					goto l229
				l250:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('g') {
						goto l251
					}
					position++
					if buffer[position] != rune('.') {
						goto l251
					}
					position++
					goto l229
				l251:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('k') {
						goto l252
					}
					position++
					if buffer[position] != rune('.') {
						goto l252
					}
					position++
					goto l229
				l252:
					position, tokenIndex = position229, tokenIndex229
					if buffer[position] != rune('m') {
						goto l227
					}
					position++
					if buffer[position] != rune('u') {
						goto l227
					}
					position++
					if buffer[position] != rune('t') {
						goto l227
					}
					position++
					if buffer[position] != rune('.') {
						goto l227
					}
					position++
				}
			l229:
				{
					position253, tokenIndex253 := position, tokenIndex
					if !_rules[ruleSpaceCharEOI]() {
						goto l227
					}
					position, tokenIndex = position253, tokenIndex253
				}
				add(ruleRankOtherUncommon, position228)
			}
			return true
		l227:
			position, tokenIndex = position227, tokenIndex227
			return false
		},
		/* 37 RankOther <- <((('m' 'o' 'r' 'p' 'h') / ('c' 'o' 'n' 'v' 'a' 'r') / ('p' 's' 'e' 'u' 'd' 'o' 'v' 'a' 'r') / ('s' 'e' 'c' 't') / ('s' 'e' 'r') / ('s' 'u' 'b' 'v' 'a' 'r') / ('s' 'u' 'b' 'f') / ('r' 'a' 'c' 'e') / ('p' 'v') / ('p' 'a' 't' 'h' 'o' 'v' 'a' 'r') / ('a' 'b' '.' (_? ('n' '.'))?) / ('s' 't')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position254, tokenIndex254 := position, tokenIndex
			{
				position255 := position
				{
					position256, tokenIndex256 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l257
					}
					position++
					if buffer[position] != rune('o') {
						goto l257
					}
					position++
					if buffer[position] != rune('r') {
						goto l257
					}
					position++
					if buffer[position] != rune('p') {
						goto l257
					}
					position++
					if buffer[position] != rune('h') {
						goto l257
					}
					position++
					goto l256
				l257:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('c') {
						goto l258
					}
					position++
					if buffer[position] != rune('o') {
						goto l258
					}
					position++
					if buffer[position] != rune('n') {
						goto l258
					}
					position++
					if buffer[position] != rune('v') {
						goto l258
					}
					position++
					if buffer[position] != rune('a') {
						goto l258
					}
					position++
					if buffer[position] != rune('r') {
						goto l258
					}
					position++
					goto l256
				l258:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('p') {
						goto l259
					}
					position++
					if buffer[position] != rune('s') {
						goto l259
					}
					position++
					if buffer[position] != rune('e') {
						goto l259
					}
					position++
					if buffer[position] != rune('u') {
						goto l259
					}
					position++
					if buffer[position] != rune('d') {
						goto l259
					}
					position++
					if buffer[position] != rune('o') {
						goto l259
					}
					position++
					if buffer[position] != rune('v') {
						goto l259
					}
					position++
					if buffer[position] != rune('a') {
						goto l259
					}
					position++
					if buffer[position] != rune('r') {
						goto l259
					}
					position++
					goto l256
				l259:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('s') {
						goto l260
					}
					position++
					if buffer[position] != rune('e') {
						goto l260
					}
					position++
					if buffer[position] != rune('c') {
						goto l260
					}
					position++
					if buffer[position] != rune('t') {
						goto l260
					}
					position++
					goto l256
				l260:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('s') {
						goto l261
					}
					position++
					if buffer[position] != rune('e') {
						goto l261
					}
					position++
					if buffer[position] != rune('r') {
						goto l261
					}
					position++
					goto l256
				l261:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('s') {
						goto l262
					}
					position++
					if buffer[position] != rune('u') {
						goto l262
					}
					position++
					if buffer[position] != rune('b') {
						goto l262
					}
					position++
					if buffer[position] != rune('v') {
						goto l262
					}
					position++
					if buffer[position] != rune('a') {
						goto l262
					}
					position++
					if buffer[position] != rune('r') {
						goto l262
					}
					position++
					goto l256
				l262:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('s') {
						goto l263
					}
					position++
					if buffer[position] != rune('u') {
						goto l263
					}
					position++
					if buffer[position] != rune('b') {
						goto l263
					}
					position++
					if buffer[position] != rune('f') {
						goto l263
					}
					position++
					goto l256
				l263:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('r') {
						goto l264
					}
					position++
					if buffer[position] != rune('a') {
						goto l264
					}
					position++
					if buffer[position] != rune('c') {
						goto l264
					}
					position++
					if buffer[position] != rune('e') {
						goto l264
					}
					position++
					goto l256
				l264:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('p') {
						goto l265
					}
					position++
					if buffer[position] != rune('v') {
						goto l265
					}
					position++
					goto l256
				l265:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('p') {
						goto l266
					}
					position++
					if buffer[position] != rune('a') {
						goto l266
					}
					position++
					if buffer[position] != rune('t') {
						goto l266
					}
					position++
					if buffer[position] != rune('h') {
						goto l266
					}
					position++
					if buffer[position] != rune('o') {
						goto l266
					}
					position++
					if buffer[position] != rune('v') {
						goto l266
					}
					position++
					if buffer[position] != rune('a') {
						goto l266
					}
					position++
					if buffer[position] != rune('r') {
						goto l266
					}
					position++
					goto l256
				l266:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('a') {
						goto l267
					}
					position++
					if buffer[position] != rune('b') {
						goto l267
					}
					position++
					if buffer[position] != rune('.') {
						goto l267
					}
					position++
					{
						position268, tokenIndex268 := position, tokenIndex
						{
							position270, tokenIndex270 := position, tokenIndex
							if !_rules[rule_]() {
								goto l270
							}
							goto l271
						l270:
							position, tokenIndex = position270, tokenIndex270
						}
					l271:
						if buffer[position] != rune('n') {
							goto l268
						}
						position++
						if buffer[position] != rune('.') {
							goto l268
						}
						position++
						goto l269
					l268:
						position, tokenIndex = position268, tokenIndex268
					}
				l269:
					goto l256
				l267:
					position, tokenIndex = position256, tokenIndex256
					if buffer[position] != rune('s') {
						goto l254
					}
					position++
					if buffer[position] != rune('t') {
						goto l254
					}
					position++
				}
			l256:
				{
					position272, tokenIndex272 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l273
					}
					position++
					goto l272
				l273:
					position, tokenIndex = position272, tokenIndex272
					{
						position274, tokenIndex274 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l254
						}
						position, tokenIndex = position274, tokenIndex274
					}
				}
			l272:
				add(ruleRankOther, position255)
			}
			return true
		l254:
			position, tokenIndex = position254, tokenIndex254
			return false
		},
		/* 38 RankVar <- <((('v' 'a' 'r' 'i' 'e' 't' 'y') / ('[' 'v' 'a' 'r' '.' ']') / ('v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position275, tokenIndex275 := position, tokenIndex
			{
				position276 := position
				{
					position277, tokenIndex277 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l278
					}
					position++
					if buffer[position] != rune('a') {
						goto l278
					}
					position++
					if buffer[position] != rune('r') {
						goto l278
					}
					position++
					if buffer[position] != rune('i') {
						goto l278
					}
					position++
					if buffer[position] != rune('e') {
						goto l278
					}
					position++
					if buffer[position] != rune('t') {
						goto l278
					}
					position++
					if buffer[position] != rune('y') {
						goto l278
					}
					position++
					goto l277
				l278:
					position, tokenIndex = position277, tokenIndex277
					if buffer[position] != rune('[') {
						goto l279
					}
					position++
					if buffer[position] != rune('v') {
						goto l279
					}
					position++
					if buffer[position] != rune('a') {
						goto l279
					}
					position++
					if buffer[position] != rune('r') {
						goto l279
					}
					position++
					if buffer[position] != rune('.') {
						goto l279
					}
					position++
					if buffer[position] != rune(']') {
						goto l279
					}
					position++
					goto l277
				l279:
					position, tokenIndex = position277, tokenIndex277
					if buffer[position] != rune('v') {
						goto l275
					}
					position++
					if buffer[position] != rune('a') {
						goto l275
					}
					position++
					if buffer[position] != rune('r') {
						goto l275
					}
					position++
				}
			l277:
				{
					position280, tokenIndex280 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l281
					}
					position++
					goto l280
				l281:
					position, tokenIndex = position280, tokenIndex280
					{
						position282, tokenIndex282 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l275
						}
						position, tokenIndex = position282, tokenIndex282
					}
				}
			l280:
				add(ruleRankVar, position276)
			}
			return true
		l275:
			position, tokenIndex = position275, tokenIndex275
			return false
		},
		/* 39 RankForma <- <((('f' 'a') / ('f' 'o' 'r' 'm' 'a') / ('f' 'm' 'a') / ('f' 'm') / ('f' 'o' 'r' 'm') / ('f' 'o') / 'f') ('.' / &SpaceCharEOI))> */
		func() bool {
			position283, tokenIndex283 := position, tokenIndex
			{
				position284 := position
				{
					position285, tokenIndex285 := position, tokenIndex
					if buffer[position] != rune('f') {
						goto l286
					}
					position++
					if buffer[position] != rune('a') {
						goto l286
					}
					position++
					goto l285
				l286:
					position, tokenIndex = position285, tokenIndex285
					if buffer[position] != rune('f') {
						goto l287
					}
					position++
					if buffer[position] != rune('o') {
						goto l287
					}
					position++
					if buffer[position] != rune('r') {
						goto l287
					}
					position++
					if buffer[position] != rune('m') {
						goto l287
					}
					position++
					if buffer[position] != rune('a') {
						goto l287
					}
					position++
					goto l285
				l287:
					position, tokenIndex = position285, tokenIndex285
					if buffer[position] != rune('f') {
						goto l288
					}
					position++
					if buffer[position] != rune('m') {
						goto l288
					}
					position++
					if buffer[position] != rune('a') {
						goto l288
					}
					position++
					goto l285
				l288:
					position, tokenIndex = position285, tokenIndex285
					if buffer[position] != rune('f') {
						goto l289
					}
					position++
					if buffer[position] != rune('m') {
						goto l289
					}
					position++
					goto l285
				l289:
					position, tokenIndex = position285, tokenIndex285
					if buffer[position] != rune('f') {
						goto l290
					}
					position++
					if buffer[position] != rune('o') {
						goto l290
					}
					position++
					if buffer[position] != rune('r') {
						goto l290
					}
					position++
					if buffer[position] != rune('m') {
						goto l290
					}
					position++
					goto l285
				l290:
					position, tokenIndex = position285, tokenIndex285
					if buffer[position] != rune('f') {
						goto l291
					}
					position++
					if buffer[position] != rune('o') {
						goto l291
					}
					position++
					goto l285
				l291:
					position, tokenIndex = position285, tokenIndex285
					if buffer[position] != rune('f') {
						goto l283
					}
					position++
				}
			l285:
				{
					position292, tokenIndex292 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l293
					}
					position++
					goto l292
				l293:
					position, tokenIndex = position292, tokenIndex292
					{
						position294, tokenIndex294 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l283
						}
						position, tokenIndex = position294, tokenIndex294
					}
				}
			l292:
				add(ruleRankForma, position284)
			}
			return true
		l283:
			position, tokenIndex = position283, tokenIndex283
			return false
		},
		/* 40 RankSsp <- <((('s' 's' 'p') / ('s' 'u' 'b' 's' 'p' 'e' 'c') / ('s' 'u' 'b' 's' 'p')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position295, tokenIndex295 := position, tokenIndex
			{
				position296 := position
				{
					position297, tokenIndex297 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l298
					}
					position++
					if buffer[position] != rune('s') {
						goto l298
					}
					position++
					if buffer[position] != rune('p') {
						goto l298
					}
					position++
					goto l297
				l298:
					position, tokenIndex = position297, tokenIndex297
					if buffer[position] != rune('s') {
						goto l299
					}
					position++
					if buffer[position] != rune('u') {
						goto l299
					}
					position++
					if buffer[position] != rune('b') {
						goto l299
					}
					position++
					if buffer[position] != rune('s') {
						goto l299
					}
					position++
					if buffer[position] != rune('p') {
						goto l299
					}
					position++
					if buffer[position] != rune('e') {
						goto l299
					}
					position++
					if buffer[position] != rune('c') {
						goto l299
					}
					position++
					goto l297
				l299:
					position, tokenIndex = position297, tokenIndex297
					if buffer[position] != rune('s') {
						goto l295
					}
					position++
					if buffer[position] != rune('u') {
						goto l295
					}
					position++
					if buffer[position] != rune('b') {
						goto l295
					}
					position++
					if buffer[position] != rune('s') {
						goto l295
					}
					position++
					if buffer[position] != rune('p') {
						goto l295
					}
					position++
				}
			l297:
				{
					position300, tokenIndex300 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l301
					}
					position++
					goto l300
				l301:
					position, tokenIndex = position300, tokenIndex300
					{
						position302, tokenIndex302 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l295
						}
						position, tokenIndex = position302, tokenIndex302
					}
				}
			l300:
				add(ruleRankSsp, position296)
			}
			return true
		l295:
			position, tokenIndex = position295, tokenIndex295
			return false
		},
		/* 41 RankAgamo <- <((('a' 'g' 'a' 'm' 'o' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 's' 's' 'p') / ('a' 'g' 'a' 'm' 'o' 'v' 'a' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position303, tokenIndex303 := position, tokenIndex
			{
				position304 := position
				{
					position305, tokenIndex305 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l306
					}
					position++
					if buffer[position] != rune('g') {
						goto l306
					}
					position++
					if buffer[position] != rune('a') {
						goto l306
					}
					position++
					if buffer[position] != rune('m') {
						goto l306
					}
					position++
					if buffer[position] != rune('o') {
						goto l306
					}
					position++
					if buffer[position] != rune('s') {
						goto l306
					}
					position++
					if buffer[position] != rune('p') {
						goto l306
					}
					position++
					goto l305
				l306:
					position, tokenIndex = position305, tokenIndex305
					if buffer[position] != rune('a') {
						goto l307
					}
					position++
					if buffer[position] != rune('g') {
						goto l307
					}
					position++
					if buffer[position] != rune('a') {
						goto l307
					}
					position++
					if buffer[position] != rune('m') {
						goto l307
					}
					position++
					if buffer[position] != rune('o') {
						goto l307
					}
					position++
					if buffer[position] != rune('s') {
						goto l307
					}
					position++
					if buffer[position] != rune('s') {
						goto l307
					}
					position++
					if buffer[position] != rune('p') {
						goto l307
					}
					position++
					goto l305
				l307:
					position, tokenIndex = position305, tokenIndex305
					if buffer[position] != rune('a') {
						goto l303
					}
					position++
					if buffer[position] != rune('g') {
						goto l303
					}
					position++
					if buffer[position] != rune('a') {
						goto l303
					}
					position++
					if buffer[position] != rune('m') {
						goto l303
					}
					position++
					if buffer[position] != rune('o') {
						goto l303
					}
					position++
					if buffer[position] != rune('v') {
						goto l303
					}
					position++
					if buffer[position] != rune('a') {
						goto l303
					}
					position++
					if buffer[position] != rune('r') {
						goto l303
					}
					position++
				}
			l305:
				{
					position308, tokenIndex308 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l309
					}
					position++
					goto l308
				l309:
					position, tokenIndex = position308, tokenIndex308
					{
						position310, tokenIndex310 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l303
						}
						position, tokenIndex = position310, tokenIndex310
					}
				}
			l308:
				add(ruleRankAgamo, position304)
			}
			return true
		l303:
			position, tokenIndex = position303, tokenIndex303
			return false
		},
		/* 42 SubgenusOrSuperspecies <- <('(' _? NameLowerChar+ _? ')')> */
		func() bool {
			position311, tokenIndex311 := position, tokenIndex
			{
				position312 := position
				if buffer[position] != rune('(') {
					goto l311
				}
				position++
				{
					position313, tokenIndex313 := position, tokenIndex
					if !_rules[rule_]() {
						goto l313
					}
					goto l314
				l313:
					position, tokenIndex = position313, tokenIndex313
				}
			l314:
				if !_rules[ruleNameLowerChar]() {
					goto l311
				}
			l315:
				{
					position316, tokenIndex316 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l316
					}
					goto l315
				l316:
					position, tokenIndex = position316, tokenIndex316
				}
				{
					position317, tokenIndex317 := position, tokenIndex
					if !_rules[rule_]() {
						goto l317
					}
					goto l318
				l317:
					position, tokenIndex = position317, tokenIndex317
				}
			l318:
				if buffer[position] != rune(')') {
					goto l311
				}
				position++
				add(ruleSubgenusOrSuperspecies, position312)
			}
			return true
		l311:
			position, tokenIndex = position311, tokenIndex311
			return false
		},
		/* 43 UninomialCombo <- <(UninomialCombo1 / UninomialCombo2)> */
		func() bool {
			position319, tokenIndex319 := position, tokenIndex
			{
				position320 := position
				{
					position321, tokenIndex321 := position, tokenIndex
					if !_rules[ruleUninomialCombo1]() {
						goto l322
					}
					goto l321
				l322:
					position, tokenIndex = position321, tokenIndex321
					if !_rules[ruleUninomialCombo2]() {
						goto l319
					}
				}
			l321:
				add(ruleUninomialCombo, position320)
			}
			return true
		l319:
			position, tokenIndex = position319, tokenIndex319
			return false
		},
		/* 44 UninomialCombo1 <- <(UninomialWord _? Subgenus (_? Authorship)?)> */
		func() bool {
			position323, tokenIndex323 := position, tokenIndex
			{
				position324 := position
				if !_rules[ruleUninomialWord]() {
					goto l323
				}
				{
					position325, tokenIndex325 := position, tokenIndex
					if !_rules[rule_]() {
						goto l325
					}
					goto l326
				l325:
					position, tokenIndex = position325, tokenIndex325
				}
			l326:
				if !_rules[ruleSubgenus]() {
					goto l323
				}
				{
					position327, tokenIndex327 := position, tokenIndex
					{
						position329, tokenIndex329 := position, tokenIndex
						if !_rules[rule_]() {
							goto l329
						}
						goto l330
					l329:
						position, tokenIndex = position329, tokenIndex329
					}
				l330:
					if !_rules[ruleAuthorship]() {
						goto l327
					}
					goto l328
				l327:
					position, tokenIndex = position327, tokenIndex327
				}
			l328:
				add(ruleUninomialCombo1, position324)
			}
			return true
		l323:
			position, tokenIndex = position323, tokenIndex323
			return false
		},
		/* 45 UninomialCombo2 <- <((Uninomial _)? RankUninomial _ Uninomial)> */
		func() bool {
			position331, tokenIndex331 := position, tokenIndex
			{
				position332 := position
				{
					position333, tokenIndex333 := position, tokenIndex
					if !_rules[ruleUninomial]() {
						goto l333
					}
					if !_rules[rule_]() {
						goto l333
					}
					goto l334
				l333:
					position, tokenIndex = position333, tokenIndex333
				}
			l334:
				if !_rules[ruleRankUninomial]() {
					goto l331
				}
				if !_rules[rule_]() {
					goto l331
				}
				if !_rules[ruleUninomial]() {
					goto l331
				}
				add(ruleUninomialCombo2, position332)
			}
			return true
		l331:
			position, tokenIndex = position331, tokenIndex331
			return false
		},
		/* 46 Subgenus <- <(Subgenus2 / Subgenus1)> */
		func() bool {
			position335, tokenIndex335 := position, tokenIndex
			{
				position336 := position
				{
					position337, tokenIndex337 := position, tokenIndex
					if !_rules[ruleSubgenus2]() {
						goto l338
					}
					goto l337
				l338:
					position, tokenIndex = position337, tokenIndex337
					if !_rules[ruleSubgenus1]() {
						goto l335
					}
				}
			l337:
				add(ruleSubgenus, position336)
			}
			return true
		l335:
			position, tokenIndex = position335, tokenIndex335
			return false
		},
		/* 47 Subgenus2 <- <('(' _? AbbrSubgenus _? ')' !(_? Authorship))> */
		func() bool {
			position339, tokenIndex339 := position, tokenIndex
			{
				position340 := position
				if buffer[position] != rune('(') {
					goto l339
				}
				position++
				{
					position341, tokenIndex341 := position, tokenIndex
					if !_rules[rule_]() {
						goto l341
					}
					goto l342
				l341:
					position, tokenIndex = position341, tokenIndex341
				}
			l342:
				if !_rules[ruleAbbrSubgenus]() {
					goto l339
				}
				{
					position343, tokenIndex343 := position, tokenIndex
					if !_rules[rule_]() {
						goto l343
					}
					goto l344
				l343:
					position, tokenIndex = position343, tokenIndex343
				}
			l344:
				if buffer[position] != rune(')') {
					goto l339
				}
				position++
				{
					position345, tokenIndex345 := position, tokenIndex
					{
						position346, tokenIndex346 := position, tokenIndex
						if !_rules[rule_]() {
							goto l346
						}
						goto l347
					l346:
						position, tokenIndex = position346, tokenIndex346
					}
				l347:
					if !_rules[ruleAuthorship]() {
						goto l345
					}
					goto l339
				l345:
					position, tokenIndex = position345, tokenIndex345
				}
				add(ruleSubgenus2, position340)
			}
			return true
		l339:
			position, tokenIndex = position339, tokenIndex339
			return false
		},
		/* 48 Subgenus1 <- <('(' _? UninomialWord _? ')')> */
		func() bool {
			position348, tokenIndex348 := position, tokenIndex
			{
				position349 := position
				if buffer[position] != rune('(') {
					goto l348
				}
				position++
				{
					position350, tokenIndex350 := position, tokenIndex
					if !_rules[rule_]() {
						goto l350
					}
					goto l351
				l350:
					position, tokenIndex = position350, tokenIndex350
				}
			l351:
				if !_rules[ruleUninomialWord]() {
					goto l348
				}
				{
					position352, tokenIndex352 := position, tokenIndex
					if !_rules[rule_]() {
						goto l352
					}
					goto l353
				l352:
					position, tokenIndex = position352, tokenIndex352
				}
			l353:
				if buffer[position] != rune(')') {
					goto l348
				}
				position++
				add(ruleSubgenus1, position349)
			}
			return true
		l348:
			position, tokenIndex = position348, tokenIndex348
			return false
		},
		/* 49 RankUninomial <- <(RankUninomialPlain / RankUninomialNotho)> */
		func() bool {
			position354, tokenIndex354 := position, tokenIndex
			{
				position355 := position
				{
					position356, tokenIndex356 := position, tokenIndex
					if !_rules[ruleRankUninomialPlain]() {
						goto l357
					}
					goto l356
				l357:
					position, tokenIndex = position356, tokenIndex356
					if !_rules[ruleRankUninomialNotho]() {
						goto l354
					}
				}
			l356:
				add(ruleRankUninomial, position355)
			}
			return true
		l354:
			position, tokenIndex = position354, tokenIndex354
			return false
		},
		/* 50 RankUninomialPlain <- <((('s' 'e' 'c' 't') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('t' 'r' 'i' 'b') / ('t' 'r') / ('s' 'u' 'b' 't' 'r' 'i' 'b') / ('s' 'u' 'b' 't' 'r') / ('s' 'u' 'b' 's' 'e' 'r') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('f' 'a' 'm') / ('s' 'u' 'b' 'f' 'a' 'm') / ('d' 'i' 'v') / ('s' 'u' 'p' 'e' 'r' 't' 'r' 'i' 'b') / ('u' 'n' 'r')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position358, tokenIndex358 := position, tokenIndex
			{
				position359 := position
				{
					position360, tokenIndex360 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l361
					}
					position++
					if buffer[position] != rune('e') {
						goto l361
					}
					position++
					if buffer[position] != rune('c') {
						goto l361
					}
					position++
					if buffer[position] != rune('t') {
						goto l361
					}
					position++
					goto l360
				l361:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l362
					}
					position++
					if buffer[position] != rune('u') {
						goto l362
					}
					position++
					if buffer[position] != rune('b') {
						goto l362
					}
					position++
					if buffer[position] != rune('s') {
						goto l362
					}
					position++
					if buffer[position] != rune('e') {
						goto l362
					}
					position++
					if buffer[position] != rune('c') {
						goto l362
					}
					position++
					if buffer[position] != rune('t') {
						goto l362
					}
					position++
					goto l360
				l362:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('t') {
						goto l363
					}
					position++
					if buffer[position] != rune('r') {
						goto l363
					}
					position++
					if buffer[position] != rune('i') {
						goto l363
					}
					position++
					if buffer[position] != rune('b') {
						goto l363
					}
					position++
					goto l360
				l363:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('t') {
						goto l364
					}
					position++
					if buffer[position] != rune('r') {
						goto l364
					}
					position++
					goto l360
				l364:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l365
					}
					position++
					if buffer[position] != rune('u') {
						goto l365
					}
					position++
					if buffer[position] != rune('b') {
						goto l365
					}
					position++
					if buffer[position] != rune('t') {
						goto l365
					}
					position++
					if buffer[position] != rune('r') {
						goto l365
					}
					position++
					if buffer[position] != rune('i') {
						goto l365
					}
					position++
					if buffer[position] != rune('b') {
						goto l365
					}
					position++
					goto l360
				l365:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l366
					}
					position++
					if buffer[position] != rune('u') {
						goto l366
					}
					position++
					if buffer[position] != rune('b') {
						goto l366
					}
					position++
					if buffer[position] != rune('t') {
						goto l366
					}
					position++
					if buffer[position] != rune('r') {
						goto l366
					}
					position++
					goto l360
				l366:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l367
					}
					position++
					if buffer[position] != rune('u') {
						goto l367
					}
					position++
					if buffer[position] != rune('b') {
						goto l367
					}
					position++
					if buffer[position] != rune('s') {
						goto l367
					}
					position++
					if buffer[position] != rune('e') {
						goto l367
					}
					position++
					if buffer[position] != rune('r') {
						goto l367
					}
					position++
					goto l360
				l367:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l368
					}
					position++
					if buffer[position] != rune('e') {
						goto l368
					}
					position++
					if buffer[position] != rune('r') {
						goto l368
					}
					position++
					goto l360
				l368:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l369
					}
					position++
					if buffer[position] != rune('u') {
						goto l369
					}
					position++
					if buffer[position] != rune('b') {
						goto l369
					}
					position++
					if buffer[position] != rune('g') {
						goto l369
					}
					position++
					if buffer[position] != rune('e') {
						goto l369
					}
					position++
					if buffer[position] != rune('n') {
						goto l369
					}
					position++
					goto l360
				l369:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l370
					}
					position++
					if buffer[position] != rune('u') {
						goto l370
					}
					position++
					if buffer[position] != rune('b') {
						goto l370
					}
					position++
					if buffer[position] != rune('g') {
						goto l370
					}
					position++
					goto l360
				l370:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('f') {
						goto l371
					}
					position++
					if buffer[position] != rune('a') {
						goto l371
					}
					position++
					if buffer[position] != rune('m') {
						goto l371
					}
					position++
					goto l360
				l371:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l372
					}
					position++
					if buffer[position] != rune('u') {
						goto l372
					}
					position++
					if buffer[position] != rune('b') {
						goto l372
					}
					position++
					if buffer[position] != rune('f') {
						goto l372
					}
					position++
					if buffer[position] != rune('a') {
						goto l372
					}
					position++
					if buffer[position] != rune('m') {
						goto l372
					}
					position++
					goto l360
				l372:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('d') {
						goto l373
					}
					position++
					if buffer[position] != rune('i') {
						goto l373
					}
					position++
					if buffer[position] != rune('v') {
						goto l373
					}
					position++
					goto l360
				l373:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('s') {
						goto l374
					}
					position++
					if buffer[position] != rune('u') {
						goto l374
					}
					position++
					if buffer[position] != rune('p') {
						goto l374
					}
					position++
					if buffer[position] != rune('e') {
						goto l374
					}
					position++
					if buffer[position] != rune('r') {
						goto l374
					}
					position++
					if buffer[position] != rune('t') {
						goto l374
					}
					position++
					if buffer[position] != rune('r') {
						goto l374
					}
					position++
					if buffer[position] != rune('i') {
						goto l374
					}
					position++
					if buffer[position] != rune('b') {
						goto l374
					}
					position++
					goto l360
				l374:
					position, tokenIndex = position360, tokenIndex360
					if buffer[position] != rune('u') {
						goto l358
					}
					position++
					if buffer[position] != rune('n') {
						goto l358
					}
					position++
					if buffer[position] != rune('r') {
						goto l358
					}
					position++
				}
			l360:
				{
					position375, tokenIndex375 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l376
					}
					position++
					goto l375
				l376:
					position, tokenIndex = position375, tokenIndex375
					{
						position377, tokenIndex377 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l358
						}
						position, tokenIndex = position377, tokenIndex377
					}
				}
			l375:
				add(ruleRankUninomialPlain, position359)
			}
			return true
		l358:
			position, tokenIndex = position358, tokenIndex358
			return false
		},
		/* 51 RankUninomialNotho <- <('n' 'o' 't' 'h' 'o' _? (('s' 'e' 'c' 't') / ('g' 'e' 'n') / ('s' 'e' 'r') / ('s' 'u' 'b' 'g' 'e' 'e' 'n') / ('s' 'u' 'b' 'g' 'e' 'n') / ('s' 'u' 'b' 'g') / ('s' 'u' 'b' 's' 'e' 'c' 't') / ('s' 'u' 'b' 't' 'r' 'i' 'b')) ('.' / &SpaceCharEOI))> */
		func() bool {
			position378, tokenIndex378 := position, tokenIndex
			{
				position379 := position
				if buffer[position] != rune('n') {
					goto l378
				}
				position++
				if buffer[position] != rune('o') {
					goto l378
				}
				position++
				if buffer[position] != rune('t') {
					goto l378
				}
				position++
				if buffer[position] != rune('h') {
					goto l378
				}
				position++
				if buffer[position] != rune('o') {
					goto l378
				}
				position++
				{
					position380, tokenIndex380 := position, tokenIndex
					if !_rules[rule_]() {
						goto l380
					}
					goto l381
				l380:
					position, tokenIndex = position380, tokenIndex380
				}
			l381:
				{
					position382, tokenIndex382 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l383
					}
					position++
					if buffer[position] != rune('e') {
						goto l383
					}
					position++
					if buffer[position] != rune('c') {
						goto l383
					}
					position++
					if buffer[position] != rune('t') {
						goto l383
					}
					position++
					goto l382
				l383:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('g') {
						goto l384
					}
					position++
					if buffer[position] != rune('e') {
						goto l384
					}
					position++
					if buffer[position] != rune('n') {
						goto l384
					}
					position++
					goto l382
				l384:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('s') {
						goto l385
					}
					position++
					if buffer[position] != rune('e') {
						goto l385
					}
					position++
					if buffer[position] != rune('r') {
						goto l385
					}
					position++
					goto l382
				l385:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('s') {
						goto l386
					}
					position++
					if buffer[position] != rune('u') {
						goto l386
					}
					position++
					if buffer[position] != rune('b') {
						goto l386
					}
					position++
					if buffer[position] != rune('g') {
						goto l386
					}
					position++
					if buffer[position] != rune('e') {
						goto l386
					}
					position++
					if buffer[position] != rune('e') {
						goto l386
					}
					position++
					if buffer[position] != rune('n') {
						goto l386
					}
					position++
					goto l382
				l386:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('s') {
						goto l387
					}
					position++
					if buffer[position] != rune('u') {
						goto l387
					}
					position++
					if buffer[position] != rune('b') {
						goto l387
					}
					position++
					if buffer[position] != rune('g') {
						goto l387
					}
					position++
					if buffer[position] != rune('e') {
						goto l387
					}
					position++
					if buffer[position] != rune('n') {
						goto l387
					}
					position++
					goto l382
				l387:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('s') {
						goto l388
					}
					position++
					if buffer[position] != rune('u') {
						goto l388
					}
					position++
					if buffer[position] != rune('b') {
						goto l388
					}
					position++
					if buffer[position] != rune('g') {
						goto l388
					}
					position++
					goto l382
				l388:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('s') {
						goto l389
					}
					position++
					if buffer[position] != rune('u') {
						goto l389
					}
					position++
					if buffer[position] != rune('b') {
						goto l389
					}
					position++
					if buffer[position] != rune('s') {
						goto l389
					}
					position++
					if buffer[position] != rune('e') {
						goto l389
					}
					position++
					if buffer[position] != rune('c') {
						goto l389
					}
					position++
					if buffer[position] != rune('t') {
						goto l389
					}
					position++
					goto l382
				l389:
					position, tokenIndex = position382, tokenIndex382
					if buffer[position] != rune('s') {
						goto l378
					}
					position++
					if buffer[position] != rune('u') {
						goto l378
					}
					position++
					if buffer[position] != rune('b') {
						goto l378
					}
					position++
					if buffer[position] != rune('t') {
						goto l378
					}
					position++
					if buffer[position] != rune('r') {
						goto l378
					}
					position++
					if buffer[position] != rune('i') {
						goto l378
					}
					position++
					if buffer[position] != rune('b') {
						goto l378
					}
					position++
				}
			l382:
				{
					position390, tokenIndex390 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l391
					}
					position++
					goto l390
				l391:
					position, tokenIndex = position390, tokenIndex390
					{
						position392, tokenIndex392 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l378
						}
						position, tokenIndex = position392, tokenIndex392
					}
				}
			l390:
				add(ruleRankUninomialNotho, position379)
			}
			return true
		l378:
			position, tokenIndex = position378, tokenIndex378
			return false
		},
		/* 52 Uninomial <- <(UninomialWord (_ Authorship !(_ LowerCharExtended LowerCharExtended LowerCharExtended))?)> */
		func() bool {
			position393, tokenIndex393 := position, tokenIndex
			{
				position394 := position
				if !_rules[ruleUninomialWord]() {
					goto l393
				}
				{
					position395, tokenIndex395 := position, tokenIndex
					if !_rules[rule_]() {
						goto l395
					}
					if !_rules[ruleAuthorship]() {
						goto l395
					}
					{
						position397, tokenIndex397 := position, tokenIndex
						if !_rules[rule_]() {
							goto l397
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l397
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l397
						}
						if !_rules[ruleLowerCharExtended]() {
							goto l397
						}
						goto l395
					l397:
						position, tokenIndex = position397, tokenIndex397
					}
					goto l396
				l395:
					position, tokenIndex = position395, tokenIndex395
				}
			l396:
				add(ruleUninomial, position394)
			}
			return true
		l393:
			position, tokenIndex = position393, tokenIndex393
			return false
		},
		/* 53 UninomialWord <- <(CapWord / TwoLetterGenus)> */
		func() bool {
			position398, tokenIndex398 := position, tokenIndex
			{
				position399 := position
				{
					position400, tokenIndex400 := position, tokenIndex
					if !_rules[ruleCapWord]() {
						goto l401
					}
					goto l400
				l401:
					position, tokenIndex = position400, tokenIndex400
					if !_rules[ruleTwoLetterGenus]() {
						goto l398
					}
				}
			l400:
				add(ruleUninomialWord, position399)
			}
			return true
		l398:
			position, tokenIndex = position398, tokenIndex398
			return false
		},
		/* 54 AbbrSubgenus <- <(UpperChar LowerChar* '.')> */
		func() bool {
			position402, tokenIndex402 := position, tokenIndex
			{
				position403 := position
				if !_rules[ruleUpperChar]() {
					goto l402
				}
			l404:
				{
					position405, tokenIndex405 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l405
					}
					goto l404
				l405:
					position, tokenIndex = position405, tokenIndex405
				}
				if buffer[position] != rune('.') {
					goto l402
				}
				position++
				add(ruleAbbrSubgenus, position403)
			}
			return true
		l402:
			position, tokenIndex = position402, tokenIndex402
			return false
		},
		/* 55 AbbrGenus <- <(UpperChar LowerChar? '.')> */
		func() bool {
			position406, tokenIndex406 := position, tokenIndex
			{
				position407 := position
				if !_rules[ruleUpperChar]() {
					goto l406
				}
				{
					position408, tokenIndex408 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l408
					}
					goto l409
				l408:
					position, tokenIndex = position408, tokenIndex408
				}
			l409:
				if buffer[position] != rune('.') {
					goto l406
				}
				position++
				add(ruleAbbrGenus, position407)
			}
			return true
		l406:
			position, tokenIndex = position406, tokenIndex406
			return false
		},
		/* 56 CapWord <- <(CapWordWithDash / CapWord1)> */
		func() bool {
			position410, tokenIndex410 := position, tokenIndex
			{
				position411 := position
				{
					position412, tokenIndex412 := position, tokenIndex
					if !_rules[ruleCapWordWithDash]() {
						goto l413
					}
					goto l412
				l413:
					position, tokenIndex = position412, tokenIndex412
					if !_rules[ruleCapWord1]() {
						goto l410
					}
				}
			l412:
				add(ruleCapWord, position411)
			}
			return true
		l410:
			position, tokenIndex = position410, tokenIndex410
			return false
		},
		/* 57 CapWord1 <- <(NameUpperChar NameLowerChar NameLowerChar+ '?'?)> */
		func() bool {
			position414, tokenIndex414 := position, tokenIndex
			{
				position415 := position
				if !_rules[ruleNameUpperChar]() {
					goto l414
				}
				if !_rules[ruleNameLowerChar]() {
					goto l414
				}
				if !_rules[ruleNameLowerChar]() {
					goto l414
				}
			l416:
				{
					position417, tokenIndex417 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l417
					}
					goto l416
				l417:
					position, tokenIndex = position417, tokenIndex417
				}
				{
					position418, tokenIndex418 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l418
					}
					position++
					goto l419
				l418:
					position, tokenIndex = position418, tokenIndex418
				}
			l419:
				add(ruleCapWord1, position415)
			}
			return true
		l414:
			position, tokenIndex = position414, tokenIndex414
			return false
		},
		/* 58 CapWordWithDash <- <((CapWord1 / TwoLetterGenusDashedSegment) Dash WordAfterDash (Dash WordAfterDash)?)> */
		func() bool {
			position420, tokenIndex420 := position, tokenIndex
			{
				position421 := position
				{
					position422, tokenIndex422 := position, tokenIndex
					if !_rules[ruleCapWord1]() {
						goto l423
					}
					goto l422
				l423:
					position, tokenIndex = position422, tokenIndex422
					if !_rules[ruleTwoLetterGenusDashedSegment]() {
						goto l420
					}
				}
			l422:
				if !_rules[ruleDash]() {
					goto l420
				}
				if !_rules[ruleWordAfterDash]() {
					goto l420
				}
				{
					position424, tokenIndex424 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l424
					}
					if !_rules[ruleWordAfterDash]() {
						goto l424
					}
					goto l425
				l424:
					position, tokenIndex = position424, tokenIndex424
				}
			l425:
				add(ruleCapWordWithDash, position421)
			}
			return true
		l420:
			position, tokenIndex = position420, tokenIndex420
			return false
		},
		/* 59 TwoLetterGenusDashedSegment <- <(('D' 'e') / ('E' 'u') / ('L' 'e') / ('N' 'e'))> */
		func() bool {
			position426, tokenIndex426 := position, tokenIndex
			{
				position427 := position
				{
					position428, tokenIndex428 := position, tokenIndex
					if buffer[position] != rune('D') {
						goto l429
					}
					position++
					if buffer[position] != rune('e') {
						goto l429
					}
					position++
					goto l428
				l429:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('E') {
						goto l430
					}
					position++
					if buffer[position] != rune('u') {
						goto l430
					}
					position++
					goto l428
				l430:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('L') {
						goto l431
					}
					position++
					if buffer[position] != rune('e') {
						goto l431
					}
					position++
					goto l428
				l431:
					position, tokenIndex = position428, tokenIndex428
					if buffer[position] != rune('N') {
						goto l426
					}
					position++
					if buffer[position] != rune('e') {
						goto l426
					}
					position++
				}
			l428:
				add(ruleTwoLetterGenusDashedSegment, position427)
			}
			return true
		l426:
			position, tokenIndex = position426, tokenIndex426
			return false
		},
		/* 60 WordAfterDash <- <(UpperAfterDash / LowerAfterDash)> */
		func() bool {
			position432, tokenIndex432 := position, tokenIndex
			{
				position433 := position
				{
					position434, tokenIndex434 := position, tokenIndex
					if !_rules[ruleUpperAfterDash]() {
						goto l435
					}
					goto l434
				l435:
					position, tokenIndex = position434, tokenIndex434
					if !_rules[ruleLowerAfterDash]() {
						goto l432
					}
				}
			l434:
				add(ruleWordAfterDash, position433)
			}
			return true
		l432:
			position, tokenIndex = position432, tokenIndex432
			return false
		},
		/* 61 UpperAfterDash <- <CapWord1> */
		func() bool {
			position436, tokenIndex436 := position, tokenIndex
			{
				position437 := position
				if !_rules[ruleCapWord1]() {
					goto l436
				}
				add(ruleUpperAfterDash, position437)
			}
			return true
		l436:
			position, tokenIndex = position436, tokenIndex436
			return false
		},
		/* 62 LowerAfterDash <- <Word1> */
		func() bool {
			position438, tokenIndex438 := position, tokenIndex
			{
				position439 := position
				if !_rules[ruleWord1]() {
					goto l438
				}
				add(ruleLowerAfterDash, position439)
			}
			return true
		l438:
			position, tokenIndex = position438, tokenIndex438
			return false
		},
		/* 63 TwoLetterGenus <- <(('C' 'a') / ('D' 'o') / ('E' 'a') / ('G' 'e') / ('I' 'a') / ('I' 'o') / ('I' 'x') / ('L' 'o') / ('O' 'a') / ('O' 'o') / ('N' 'u') / ('R' 'a') / ('T' 'y') / ('U' 'a') / ('A' 'a') / ('J' 'a') / ('Z' 'u') / ('L' 'a') / ('Q' 'u') / ('A' 's') / ('B' 'a'))> */
		func() bool {
			position440, tokenIndex440 := position, tokenIndex
			{
				position441 := position
				{
					position442, tokenIndex442 := position, tokenIndex
					if buffer[position] != rune('C') {
						goto l443
					}
					position++
					if buffer[position] != rune('a') {
						goto l443
					}
					position++
					goto l442
				l443:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('D') {
						goto l444
					}
					position++
					if buffer[position] != rune('o') {
						goto l444
					}
					position++
					goto l442
				l444:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('E') {
						goto l445
					}
					position++
					if buffer[position] != rune('a') {
						goto l445
					}
					position++
					goto l442
				l445:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('G') {
						goto l446
					}
					position++
					if buffer[position] != rune('e') {
						goto l446
					}
					position++
					goto l442
				l446:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('I') {
						goto l447
					}
					position++
					if buffer[position] != rune('a') {
						goto l447
					}
					position++
					goto l442
				l447:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('I') {
						goto l448
					}
					position++
					if buffer[position] != rune('o') {
						goto l448
					}
					position++
					goto l442
				l448:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('I') {
						goto l449
					}
					position++
					if buffer[position] != rune('x') {
						goto l449
					}
					position++
					goto l442
				l449:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('L') {
						goto l450
					}
					position++
					if buffer[position] != rune('o') {
						goto l450
					}
					position++
					goto l442
				l450:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('O') {
						goto l451
					}
					position++
					if buffer[position] != rune('a') {
						goto l451
					}
					position++
					goto l442
				l451:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('O') {
						goto l452
					}
					position++
					if buffer[position] != rune('o') {
						goto l452
					}
					position++
					goto l442
				l452:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('N') {
						goto l453
					}
					position++
					if buffer[position] != rune('u') {
						goto l453
					}
					position++
					goto l442
				l453:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('R') {
						goto l454
					}
					position++
					if buffer[position] != rune('a') {
						goto l454
					}
					position++
					goto l442
				l454:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('T') {
						goto l455
					}
					position++
					if buffer[position] != rune('y') {
						goto l455
					}
					position++
					goto l442
				l455:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('U') {
						goto l456
					}
					position++
					if buffer[position] != rune('a') {
						goto l456
					}
					position++
					goto l442
				l456:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('A') {
						goto l457
					}
					position++
					if buffer[position] != rune('a') {
						goto l457
					}
					position++
					goto l442
				l457:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('J') {
						goto l458
					}
					position++
					if buffer[position] != rune('a') {
						goto l458
					}
					position++
					goto l442
				l458:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('Z') {
						goto l459
					}
					position++
					if buffer[position] != rune('u') {
						goto l459
					}
					position++
					goto l442
				l459:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('L') {
						goto l460
					}
					position++
					if buffer[position] != rune('a') {
						goto l460
					}
					position++
					goto l442
				l460:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('Q') {
						goto l461
					}
					position++
					if buffer[position] != rune('u') {
						goto l461
					}
					position++
					goto l442
				l461:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('A') {
						goto l462
					}
					position++
					if buffer[position] != rune('s') {
						goto l462
					}
					position++
					goto l442
				l462:
					position, tokenIndex = position442, tokenIndex442
					if buffer[position] != rune('B') {
						goto l440
					}
					position++
					if buffer[position] != rune('a') {
						goto l440
					}
					position++
				}
			l442:
				add(ruleTwoLetterGenus, position441)
			}
			return true
		l440:
			position, tokenIndex = position440, tokenIndex440
			return false
		},
		/* 64 Word <- <(!((('e' 'x') / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd') / ('p' 'r' 'o') / ('c' 'v') / ('c' 'u' 'l' 't' 'i' 'v' 'a' 'r') / AuthorPrefix / RankUninomial / Approximation / Word4) SpaceCharEOI) (WordApostr / WordStartsWithDigit / MultiDashedWord / Word2 / Word1) &(SpaceCharEOI / '('))> */
		func() bool {
			position463, tokenIndex463 := position, tokenIndex
			{
				position464 := position
				{
					position465, tokenIndex465 := position, tokenIndex
					{
						position466, tokenIndex466 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l467
						}
						position++
						if buffer[position] != rune('x') {
							goto l467
						}
						position++
						goto l466
					l467:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('e') {
							goto l468
						}
						position++
						if buffer[position] != rune('t') {
							goto l468
						}
						position++
						goto l466
					l468:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('a') {
							goto l469
						}
						position++
						if buffer[position] != rune('n') {
							goto l469
						}
						position++
						if buffer[position] != rune('d') {
							goto l469
						}
						position++
						goto l466
					l469:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('a') {
							goto l470
						}
						position++
						if buffer[position] != rune('p') {
							goto l470
						}
						position++
						if buffer[position] != rune('u') {
							goto l470
						}
						position++
						if buffer[position] != rune('d') {
							goto l470
						}
						position++
						goto l466
					l470:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('p') {
							goto l471
						}
						position++
						if buffer[position] != rune('r') {
							goto l471
						}
						position++
						if buffer[position] != rune('o') {
							goto l471
						}
						position++
						goto l466
					l471:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('c') {
							goto l472
						}
						position++
						if buffer[position] != rune('v') {
							goto l472
						}
						position++
						goto l466
					l472:
						position, tokenIndex = position466, tokenIndex466
						if buffer[position] != rune('c') {
							goto l473
						}
						position++
						if buffer[position] != rune('u') {
							goto l473
						}
						position++
						if buffer[position] != rune('l') {
							goto l473
						}
						position++
						if buffer[position] != rune('t') {
							goto l473
						}
						position++
						if buffer[position] != rune('i') {
							goto l473
						}
						position++
						if buffer[position] != rune('v') {
							goto l473
						}
						position++
						if buffer[position] != rune('a') {
							goto l473
						}
						position++
						if buffer[position] != rune('r') {
							goto l473
						}
						position++
						goto l466
					l473:
						position, tokenIndex = position466, tokenIndex466
						if !_rules[ruleAuthorPrefix]() {
							goto l474
						}
						goto l466
					l474:
						position, tokenIndex = position466, tokenIndex466
						if !_rules[ruleRankUninomial]() {
							goto l475
						}
						goto l466
					l475:
						position, tokenIndex = position466, tokenIndex466
						if !_rules[ruleApproximation]() {
							goto l476
						}
						goto l466
					l476:
						position, tokenIndex = position466, tokenIndex466
						if !_rules[ruleWord4]() {
							goto l465
						}
					}
				l466:
					if !_rules[ruleSpaceCharEOI]() {
						goto l465
					}
					goto l463
				l465:
					position, tokenIndex = position465, tokenIndex465
				}
				{
					position477, tokenIndex477 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l478
					}
					goto l477
				l478:
					position, tokenIndex = position477, tokenIndex477
					if !_rules[ruleWordStartsWithDigit]() {
						goto l479
					}
					goto l477
				l479:
					position, tokenIndex = position477, tokenIndex477
					if !_rules[ruleMultiDashedWord]() {
						goto l480
					}
					goto l477
				l480:
					position, tokenIndex = position477, tokenIndex477
					if !_rules[ruleWord2]() {
						goto l481
					}
					goto l477
				l481:
					position, tokenIndex = position477, tokenIndex477
					if !_rules[ruleWord1]() {
						goto l463
					}
				}
			l477:
				{
					position482, tokenIndex482 := position, tokenIndex
					{
						position483, tokenIndex483 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l484
						}
						goto l483
					l484:
						position, tokenIndex = position483, tokenIndex483
						if buffer[position] != rune('(') {
							goto l463
						}
						position++
					}
				l483:
					position, tokenIndex = position482, tokenIndex482
				}
				add(ruleWord, position464)
			}
			return true
		l463:
			position, tokenIndex = position463, tokenIndex463
			return false
		},
		/* 65 Word1 <- <(((DotPrefix / LowerASCII) Dash)? NameLowerChar NameLowerChar+)> */
		func() bool {
			position485, tokenIndex485 := position, tokenIndex
			{
				position486 := position
				{
					position487, tokenIndex487 := position, tokenIndex
					{
						position489, tokenIndex489 := position, tokenIndex
						if !_rules[ruleDotPrefix]() {
							goto l490
						}
						goto l489
					l490:
						position, tokenIndex = position489, tokenIndex489
						if !_rules[ruleLowerASCII]() {
							goto l487
						}
					}
				l489:
					if !_rules[ruleDash]() {
						goto l487
					}
					goto l488
				l487:
					position, tokenIndex = position487, tokenIndex487
				}
			l488:
				if !_rules[ruleNameLowerChar]() {
					goto l485
				}
				if !_rules[ruleNameLowerChar]() {
					goto l485
				}
			l491:
				{
					position492, tokenIndex492 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l492
					}
					goto l491
				l492:
					position, tokenIndex = position492, tokenIndex492
				}
				add(ruleWord1, position486)
			}
			return true
		l485:
			position, tokenIndex = position485, tokenIndex485
			return false
		},
		/* 66 WordStartsWithDigit <- <(('1' / '2' / '3' / '4' / '5' / '6' / '7' / '8' / '9') Nums? ('.' / Dash)? NameLowerChar NameLowerChar NameLowerChar NameLowerChar+)> */
		func() bool {
			position493, tokenIndex493 := position, tokenIndex
			{
				position494 := position
				{
					position495, tokenIndex495 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l496
					}
					position++
					goto l495
				l496:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('2') {
						goto l497
					}
					position++
					goto l495
				l497:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('3') {
						goto l498
					}
					position++
					goto l495
				l498:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('4') {
						goto l499
					}
					position++
					goto l495
				l499:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('5') {
						goto l500
					}
					position++
					goto l495
				l500:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('6') {
						goto l501
					}
					position++
					goto l495
				l501:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('7') {
						goto l502
					}
					position++
					goto l495
				l502:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('8') {
						goto l503
					}
					position++
					goto l495
				l503:
					position, tokenIndex = position495, tokenIndex495
					if buffer[position] != rune('9') {
						goto l493
					}
					position++
				}
			l495:
				{
					position504, tokenIndex504 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l504
					}
					goto l505
				l504:
					position, tokenIndex = position504, tokenIndex504
				}
			l505:
				{
					position506, tokenIndex506 := position, tokenIndex
					{
						position508, tokenIndex508 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l509
						}
						position++
						goto l508
					l509:
						position, tokenIndex = position508, tokenIndex508
						if !_rules[ruleDash]() {
							goto l506
						}
					}
				l508:
					goto l507
				l506:
					position, tokenIndex = position506, tokenIndex506
				}
			l507:
				if !_rules[ruleNameLowerChar]() {
					goto l493
				}
				if !_rules[ruleNameLowerChar]() {
					goto l493
				}
				if !_rules[ruleNameLowerChar]() {
					goto l493
				}
				if !_rules[ruleNameLowerChar]() {
					goto l493
				}
			l510:
				{
					position511, tokenIndex511 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l511
					}
					goto l510
				l511:
					position, tokenIndex = position511, tokenIndex511
				}
				add(ruleWordStartsWithDigit, position494)
			}
			return true
		l493:
			position, tokenIndex = position493, tokenIndex493
			return false
		},
		/* 67 Word2 <- <(NameLowerChar+ Dash? (WordApostr / NameLowerChar+))> */
		func() bool {
			position512, tokenIndex512 := position, tokenIndex
			{
				position513 := position
				if !_rules[ruleNameLowerChar]() {
					goto l512
				}
			l514:
				{
					position515, tokenIndex515 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l515
					}
					goto l514
				l515:
					position, tokenIndex = position515, tokenIndex515
				}
				{
					position516, tokenIndex516 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l516
					}
					goto l517
				l516:
					position, tokenIndex = position516, tokenIndex516
				}
			l517:
				{
					position518, tokenIndex518 := position, tokenIndex
					if !_rules[ruleWordApostr]() {
						goto l519
					}
					goto l518
				l519:
					position, tokenIndex = position518, tokenIndex518
					if !_rules[ruleNameLowerChar]() {
						goto l512
					}
				l520:
					{
						position521, tokenIndex521 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l521
						}
						goto l520
					l521:
						position, tokenIndex = position521, tokenIndex521
					}
				}
			l518:
				add(ruleWord2, position513)
			}
			return true
		l512:
			position, tokenIndex = position512, tokenIndex512
			return false
		},
		/* 68 WordApostr <- <(NameLowerChar NameLowerChar* Apostrophe Word1)> */
		func() bool {
			position522, tokenIndex522 := position, tokenIndex
			{
				position523 := position
				if !_rules[ruleNameLowerChar]() {
					goto l522
				}
			l524:
				{
					position525, tokenIndex525 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l525
					}
					goto l524
				l525:
					position, tokenIndex = position525, tokenIndex525
				}
				if !_rules[ruleApostrophe]() {
					goto l522
				}
				if !_rules[ruleWord1]() {
					goto l522
				}
				add(ruleWordApostr, position523)
			}
			return true
		l522:
			position, tokenIndex = position522, tokenIndex522
			return false
		},
		/* 69 Word4 <- <(NameLowerChar+ '.' NameLowerChar)> */
		func() bool {
			position526, tokenIndex526 := position, tokenIndex
			{
				position527 := position
				if !_rules[ruleNameLowerChar]() {
					goto l526
				}
			l528:
				{
					position529, tokenIndex529 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l529
					}
					goto l528
				l529:
					position, tokenIndex = position529, tokenIndex529
				}
				if buffer[position] != rune('.') {
					goto l526
				}
				position++
				if !_rules[ruleNameLowerChar]() {
					goto l526
				}
				add(ruleWord4, position527)
			}
			return true
		l526:
			position, tokenIndex = position526, tokenIndex526
			return false
		},
		/* 70 DotPrefix <- <('s' 't' '.')> */
		func() bool {
			position530, tokenIndex530 := position, tokenIndex
			{
				position531 := position
				if buffer[position] != rune('s') {
					goto l530
				}
				position++
				if buffer[position] != rune('t') {
					goto l530
				}
				position++
				if buffer[position] != rune('.') {
					goto l530
				}
				position++
				add(ruleDotPrefix, position531)
			}
			return true
		l530:
			position, tokenIndex = position530, tokenIndex530
			return false
		},
		/* 71 MultiDashedWord <- <(NameLowerChar+ Dash NameLowerChar+ Dash NameLowerChar+ (Dash NameLowerChar+)?)> */
		func() bool {
			position532, tokenIndex532 := position, tokenIndex
			{
				position533 := position
				if !_rules[ruleNameLowerChar]() {
					goto l532
				}
			l534:
				{
					position535, tokenIndex535 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l535
					}
					goto l534
				l535:
					position, tokenIndex = position535, tokenIndex535
				}
				if !_rules[ruleDash]() {
					goto l532
				}
				if !_rules[ruleNameLowerChar]() {
					goto l532
				}
			l536:
				{
					position537, tokenIndex537 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l537
					}
					goto l536
				l537:
					position, tokenIndex = position537, tokenIndex537
				}
				if !_rules[ruleDash]() {
					goto l532
				}
				if !_rules[ruleNameLowerChar]() {
					goto l532
				}
			l538:
				{
					position539, tokenIndex539 := position, tokenIndex
					if !_rules[ruleNameLowerChar]() {
						goto l539
					}
					goto l538
				l539:
					position, tokenIndex = position539, tokenIndex539
				}
				{
					position540, tokenIndex540 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l540
					}
					if !_rules[ruleNameLowerChar]() {
						goto l540
					}
				l542:
					{
						position543, tokenIndex543 := position, tokenIndex
						if !_rules[ruleNameLowerChar]() {
							goto l543
						}
						goto l542
					l543:
						position, tokenIndex = position543, tokenIndex543
					}
					goto l541
				l540:
					position, tokenIndex = position540, tokenIndex540
				}
			l541:
				add(ruleMultiDashedWord, position533)
			}
			return true
		l532:
			position, tokenIndex = position532, tokenIndex532
			return false
		},
		/* 72 HybridChar <- <('×' / (('x' / 'X') &_) / (('x' / 'X') &UninomialWord) / (('x' / 'X') &END))> */
		func() bool {
			position544, tokenIndex544 := position, tokenIndex
			{
				position545 := position
				{
					position546, tokenIndex546 := position, tokenIndex
					if buffer[position] != rune('×') {
						goto l547
					}
					position++
					goto l546
				l547:
					position, tokenIndex = position546, tokenIndex546
					{
						position549, tokenIndex549 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l550
						}
						position++
						goto l549
					l550:
						position, tokenIndex = position549, tokenIndex549
						if buffer[position] != rune('X') {
							goto l548
						}
						position++
					}
				l549:
					{
						position551, tokenIndex551 := position, tokenIndex
						if !_rules[rule_]() {
							goto l548
						}
						position, tokenIndex = position551, tokenIndex551
					}
					goto l546
				l548:
					position, tokenIndex = position546, tokenIndex546
					{
						position553, tokenIndex553 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l554
						}
						position++
						goto l553
					l554:
						position, tokenIndex = position553, tokenIndex553
						if buffer[position] != rune('X') {
							goto l552
						}
						position++
					}
				l553:
					{
						position555, tokenIndex555 := position, tokenIndex
						if !_rules[ruleUninomialWord]() {
							goto l552
						}
						position, tokenIndex = position555, tokenIndex555
					}
					goto l546
				l552:
					position, tokenIndex = position546, tokenIndex546
					{
						position556, tokenIndex556 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l557
						}
						position++
						goto l556
					l557:
						position, tokenIndex = position556, tokenIndex556
						if buffer[position] != rune('X') {
							goto l544
						}
						position++
					}
				l556:
					{
						position558, tokenIndex558 := position, tokenIndex
						if !_rules[ruleEND]() {
							goto l544
						}
						position, tokenIndex = position558, tokenIndex558
					}
				}
			l546:
				add(ruleHybridChar, position545)
			}
			return true
		l544:
			position, tokenIndex = position544, tokenIndex544
			return false
		},
		/* 73 GraftChimeraChar <- <'+'> */
		func() bool {
			position559, tokenIndex559 := position, tokenIndex
			{
				position560 := position
				if buffer[position] != rune('+') {
					goto l559
				}
				position++
				add(ruleGraftChimeraChar, position560)
			}
			return true
		l559:
			position, tokenIndex = position559, tokenIndex559
			return false
		},
		/* 74 ApproxNameIgnored <- <.*> */
		func() bool {
			{
				position562 := position
			l563:
				{
					position564, tokenIndex564 := position, tokenIndex
					if !matchDot() {
						goto l564
					}
					goto l563
				l564:
					position, tokenIndex = position564, tokenIndex564
				}
				add(ruleApproxNameIgnored, position562)
			}
			return true
		},
		/* 75 Approximation <- <(('s' 'p' '.' _? ('n' 'r' '.')) / ('s' 'p' '.' _? ('a' 'f' 'f' '.')) / ('m' 'o' 'n' 's' 't' '.') / '?' / ((('s' 'p' 'p') / ('n' 'r') / ('s' 'p') / ('a' 'f' 'f') / ('s' 'p' 'e' 'c' 'i' 'e' 's')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position565, tokenIndex565 := position, tokenIndex
			{
				position566 := position
				{
					position567, tokenIndex567 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l568
					}
					position++
					if buffer[position] != rune('p') {
						goto l568
					}
					position++
					if buffer[position] != rune('.') {
						goto l568
					}
					position++
					{
						position569, tokenIndex569 := position, tokenIndex
						if !_rules[rule_]() {
							goto l569
						}
						goto l570
					l569:
						position, tokenIndex = position569, tokenIndex569
					}
				l570:
					if buffer[position] != rune('n') {
						goto l568
					}
					position++
					if buffer[position] != rune('r') {
						goto l568
					}
					position++
					if buffer[position] != rune('.') {
						goto l568
					}
					position++
					goto l567
				l568:
					position, tokenIndex = position567, tokenIndex567
					if buffer[position] != rune('s') {
						goto l571
					}
					position++
					if buffer[position] != rune('p') {
						goto l571
					}
					position++
					if buffer[position] != rune('.') {
						goto l571
					}
					position++
					{
						position572, tokenIndex572 := position, tokenIndex
						if !_rules[rule_]() {
							goto l572
						}
						goto l573
					l572:
						position, tokenIndex = position572, tokenIndex572
					}
				l573:
					if buffer[position] != rune('a') {
						goto l571
					}
					position++
					if buffer[position] != rune('f') {
						goto l571
					}
					position++
					if buffer[position] != rune('f') {
						goto l571
					}
					position++
					if buffer[position] != rune('.') {
						goto l571
					}
					position++
					goto l567
				l571:
					position, tokenIndex = position567, tokenIndex567
					if buffer[position] != rune('m') {
						goto l574
					}
					position++
					if buffer[position] != rune('o') {
						goto l574
					}
					position++
					if buffer[position] != rune('n') {
						goto l574
					}
					position++
					if buffer[position] != rune('s') {
						goto l574
					}
					position++
					if buffer[position] != rune('t') {
						goto l574
					}
					position++
					if buffer[position] != rune('.') {
						goto l574
					}
					position++
					goto l567
				l574:
					position, tokenIndex = position567, tokenIndex567
					if buffer[position] != rune('?') {
						goto l575
					}
					position++
					goto l567
				l575:
					position, tokenIndex = position567, tokenIndex567
					{
						position576, tokenIndex576 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l577
						}
						position++
						if buffer[position] != rune('p') {
							goto l577
						}
						position++
						if buffer[position] != rune('p') {
							goto l577
						}
						position++
						goto l576
					l577:
						position, tokenIndex = position576, tokenIndex576
						if buffer[position] != rune('n') {
							goto l578
						}
						position++
						if buffer[position] != rune('r') {
							goto l578
						}
						position++
						goto l576
					l578:
						position, tokenIndex = position576, tokenIndex576
						if buffer[position] != rune('s') {
							goto l579
						}
						position++
						if buffer[position] != rune('p') {
							goto l579
						}
						position++
						goto l576
					l579:
						position, tokenIndex = position576, tokenIndex576
						if buffer[position] != rune('a') {
							goto l580
						}
						position++
						if buffer[position] != rune('f') {
							goto l580
						}
						position++
						if buffer[position] != rune('f') {
							goto l580
						}
						position++
						goto l576
					l580:
						position, tokenIndex = position576, tokenIndex576
						if buffer[position] != rune('s') {
							goto l565
						}
						position++
						if buffer[position] != rune('p') {
							goto l565
						}
						position++
						if buffer[position] != rune('e') {
							goto l565
						}
						position++
						if buffer[position] != rune('c') {
							goto l565
						}
						position++
						if buffer[position] != rune('i') {
							goto l565
						}
						position++
						if buffer[position] != rune('e') {
							goto l565
						}
						position++
						if buffer[position] != rune('s') {
							goto l565
						}
						position++
					}
				l576:
					{
						position581, tokenIndex581 := position, tokenIndex
						{
							position583, tokenIndex583 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l582
							}
							position, tokenIndex = position583, tokenIndex583
						}
						goto l581
					l582:
						position, tokenIndex = position581, tokenIndex581
						if buffer[position] != rune('.') {
							goto l565
						}
						position++
					}
				l581:
				}
			l567:
				add(ruleApproximation, position566)
			}
			return true
		l565:
			position, tokenIndex = position565, tokenIndex565
			return false
		},
		/* 76 Authorship <- <((AuthorshipCombo / OriginalAuthorship) &(SpaceCharEOI / ';' / ','))> */
		func() bool {
			position584, tokenIndex584 := position, tokenIndex
			{
				position585 := position
				{
					position586, tokenIndex586 := position, tokenIndex
					if !_rules[ruleAuthorshipCombo]() {
						goto l587
					}
					goto l586
				l587:
					position, tokenIndex = position586, tokenIndex586
					if !_rules[ruleOriginalAuthorship]() {
						goto l584
					}
				}
			l586:
				{
					position588, tokenIndex588 := position, tokenIndex
					{
						position589, tokenIndex589 := position, tokenIndex
						if !_rules[ruleSpaceCharEOI]() {
							goto l590
						}
						goto l589
					l590:
						position, tokenIndex = position589, tokenIndex589
						if buffer[position] != rune(';') {
							goto l591
						}
						position++
						goto l589
					l591:
						position, tokenIndex = position589, tokenIndex589
						if buffer[position] != rune(',') {
							goto l584
						}
						position++
					}
				l589:
					position, tokenIndex = position588, tokenIndex588
				}
				add(ruleAuthorship, position585)
			}
			return true
		l584:
			position, tokenIndex = position584, tokenIndex584
			return false
		},
		/* 77 AuthorshipCombo <- <(OriginalAuthorshipComb (_? CombinationAuthorship)?)> */
		func() bool {
			position592, tokenIndex592 := position, tokenIndex
			{
				position593 := position
				if !_rules[ruleOriginalAuthorshipComb]() {
					goto l592
				}
				{
					position594, tokenIndex594 := position, tokenIndex
					{
						position596, tokenIndex596 := position, tokenIndex
						if !_rules[rule_]() {
							goto l596
						}
						goto l597
					l596:
						position, tokenIndex = position596, tokenIndex596
					}
				l597:
					if !_rules[ruleCombinationAuthorship]() {
						goto l594
					}
					goto l595
				l594:
					position, tokenIndex = position594, tokenIndex594
				}
			l595:
				add(ruleAuthorshipCombo, position593)
			}
			return true
		l592:
			position, tokenIndex = position592, tokenIndex592
			return false
		},
		/* 78 OriginalAuthorship <- <AuthorsGroup> */
		func() bool {
			position598, tokenIndex598 := position, tokenIndex
			{
				position599 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l598
				}
				add(ruleOriginalAuthorship, position599)
			}
			return true
		l598:
			position, tokenIndex = position598, tokenIndex598
			return false
		},
		/* 79 OriginalAuthorshipComb <- <(BasionymAuthorshipYearMisformed / BasionymAuthorship / BasionymAuthorshipMissingParens)> */
		func() bool {
			position600, tokenIndex600 := position, tokenIndex
			{
				position601 := position
				{
					position602, tokenIndex602 := position, tokenIndex
					if !_rules[ruleBasionymAuthorshipYearMisformed]() {
						goto l603
					}
					goto l602
				l603:
					position, tokenIndex = position602, tokenIndex602
					if !_rules[ruleBasionymAuthorship]() {
						goto l604
					}
					goto l602
				l604:
					position, tokenIndex = position602, tokenIndex602
					if !_rules[ruleBasionymAuthorshipMissingParens]() {
						goto l600
					}
				}
			l602:
				add(ruleOriginalAuthorshipComb, position601)
			}
			return true
		l600:
			position, tokenIndex = position600, tokenIndex600
			return false
		},
		/* 80 CombinationAuthorship <- <AuthorsGroup> */
		func() bool {
			position605, tokenIndex605 := position, tokenIndex
			{
				position606 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l605
				}
				add(ruleCombinationAuthorship, position606)
			}
			return true
		l605:
			position, tokenIndex = position605, tokenIndex605
			return false
		},
		/* 81 BasionymAuthorshipMissingParens <- <(MissingParensStart / MissingParensEnd)> */
		func() bool {
			position607, tokenIndex607 := position, tokenIndex
			{
				position608 := position
				{
					position609, tokenIndex609 := position, tokenIndex
					if !_rules[ruleMissingParensStart]() {
						goto l610
					}
					goto l609
				l610:
					position, tokenIndex = position609, tokenIndex609
					if !_rules[ruleMissingParensEnd]() {
						goto l607
					}
				}
			l609:
				add(ruleBasionymAuthorshipMissingParens, position608)
			}
			return true
		l607:
			position, tokenIndex = position607, tokenIndex607
			return false
		},
		/* 82 MissingParensStart <- <('(' _? AuthorsGroup)> */
		func() bool {
			position611, tokenIndex611 := position, tokenIndex
			{
				position612 := position
				if buffer[position] != rune('(') {
					goto l611
				}
				position++
				{
					position613, tokenIndex613 := position, tokenIndex
					if !_rules[rule_]() {
						goto l613
					}
					goto l614
				l613:
					position, tokenIndex = position613, tokenIndex613
				}
			l614:
				if !_rules[ruleAuthorsGroup]() {
					goto l611
				}
				add(ruleMissingParensStart, position612)
			}
			return true
		l611:
			position, tokenIndex = position611, tokenIndex611
			return false
		},
		/* 83 MissingParensEnd <- <(AuthorsGroup _? ')')> */
		func() bool {
			position615, tokenIndex615 := position, tokenIndex
			{
				position616 := position
				if !_rules[ruleAuthorsGroup]() {
					goto l615
				}
				{
					position617, tokenIndex617 := position, tokenIndex
					if !_rules[rule_]() {
						goto l617
					}
					goto l618
				l617:
					position, tokenIndex = position617, tokenIndex617
				}
			l618:
				if buffer[position] != rune(')') {
					goto l615
				}
				position++
				add(ruleMissingParensEnd, position616)
			}
			return true
		l615:
			position, tokenIndex = position615, tokenIndex615
			return false
		},
		/* 84 BasionymAuthorshipYearMisformed <- <('(' _? AuthorsGroup _? ')' (_? ',')? _? Year)> */
		func() bool {
			position619, tokenIndex619 := position, tokenIndex
			{
				position620 := position
				if buffer[position] != rune('(') {
					goto l619
				}
				position++
				{
					position621, tokenIndex621 := position, tokenIndex
					if !_rules[rule_]() {
						goto l621
					}
					goto l622
				l621:
					position, tokenIndex = position621, tokenIndex621
				}
			l622:
				if !_rules[ruleAuthorsGroup]() {
					goto l619
				}
				{
					position623, tokenIndex623 := position, tokenIndex
					if !_rules[rule_]() {
						goto l623
					}
					goto l624
				l623:
					position, tokenIndex = position623, tokenIndex623
				}
			l624:
				if buffer[position] != rune(')') {
					goto l619
				}
				position++
				{
					position625, tokenIndex625 := position, tokenIndex
					{
						position627, tokenIndex627 := position, tokenIndex
						if !_rules[rule_]() {
							goto l627
						}
						goto l628
					l627:
						position, tokenIndex = position627, tokenIndex627
					}
				l628:
					if buffer[position] != rune(',') {
						goto l625
					}
					position++
					goto l626
				l625:
					position, tokenIndex = position625, tokenIndex625
				}
			l626:
				{
					position629, tokenIndex629 := position, tokenIndex
					if !_rules[rule_]() {
						goto l629
					}
					goto l630
				l629:
					position, tokenIndex = position629, tokenIndex629
				}
			l630:
				if !_rules[ruleYear]() {
					goto l619
				}
				add(ruleBasionymAuthorshipYearMisformed, position620)
			}
			return true
		l619:
			position, tokenIndex = position619, tokenIndex619
			return false
		},
		/* 85 BasionymAuthorship <- <(BasionymAuthorship1 / BasionymAuthorship2Parens)> */
		func() bool {
			position631, tokenIndex631 := position, tokenIndex
			{
				position632 := position
				{
					position633, tokenIndex633 := position, tokenIndex
					if !_rules[ruleBasionymAuthorship1]() {
						goto l634
					}
					goto l633
				l634:
					position, tokenIndex = position633, tokenIndex633
					if !_rules[ruleBasionymAuthorship2Parens]() {
						goto l631
					}
				}
			l633:
				add(ruleBasionymAuthorship, position632)
			}
			return true
		l631:
			position, tokenIndex = position631, tokenIndex631
			return false
		},
		/* 86 BasionymAuthorship1 <- <('(' _? AuthorsGroup _? ')')> */
		func() bool {
			position635, tokenIndex635 := position, tokenIndex
			{
				position636 := position
				if buffer[position] != rune('(') {
					goto l635
				}
				position++
				{
					position637, tokenIndex637 := position, tokenIndex
					if !_rules[rule_]() {
						goto l637
					}
					goto l638
				l637:
					position, tokenIndex = position637, tokenIndex637
				}
			l638:
				if !_rules[ruleAuthorsGroup]() {
					goto l635
				}
				{
					position639, tokenIndex639 := position, tokenIndex
					if !_rules[rule_]() {
						goto l639
					}
					goto l640
				l639:
					position, tokenIndex = position639, tokenIndex639
				}
			l640:
				if buffer[position] != rune(')') {
					goto l635
				}
				position++
				add(ruleBasionymAuthorship1, position636)
			}
			return true
		l635:
			position, tokenIndex = position635, tokenIndex635
			return false
		},
		/* 87 BasionymAuthorship2Parens <- <('(' _? '(' _? AuthorsGroup _? ')' _? ')')> */
		func() bool {
			position641, tokenIndex641 := position, tokenIndex
			{
				position642 := position
				if buffer[position] != rune('(') {
					goto l641
				}
				position++
				{
					position643, tokenIndex643 := position, tokenIndex
					if !_rules[rule_]() {
						goto l643
					}
					goto l644
				l643:
					position, tokenIndex = position643, tokenIndex643
				}
			l644:
				if buffer[position] != rune('(') {
					goto l641
				}
				position++
				{
					position645, tokenIndex645 := position, tokenIndex
					if !_rules[rule_]() {
						goto l645
					}
					goto l646
				l645:
					position, tokenIndex = position645, tokenIndex645
				}
			l646:
				if !_rules[ruleAuthorsGroup]() {
					goto l641
				}
				{
					position647, tokenIndex647 := position, tokenIndex
					if !_rules[rule_]() {
						goto l647
					}
					goto l648
				l647:
					position, tokenIndex = position647, tokenIndex647
				}
			l648:
				if buffer[position] != rune(')') {
					goto l641
				}
				position++
				{
					position649, tokenIndex649 := position, tokenIndex
					if !_rules[rule_]() {
						goto l649
					}
					goto l650
				l649:
					position, tokenIndex = position649, tokenIndex649
				}
			l650:
				if buffer[position] != rune(')') {
					goto l641
				}
				position++
				add(ruleBasionymAuthorship2Parens, position642)
			}
			return true
		l641:
			position, tokenIndex = position641, tokenIndex641
			return false
		},
		/* 88 AuthorsGroup <- <(AuthorsTeam (','? _ (AuthorEmend / AuthorEx / AuthorIn) AuthorsTeam)?)> */
		func() bool {
			position651, tokenIndex651 := position, tokenIndex
			{
				position652 := position
				if !_rules[ruleAuthorsTeam]() {
					goto l651
				}
				{
					position653, tokenIndex653 := position, tokenIndex
					{
						position655, tokenIndex655 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l655
						}
						position++
						goto l656
					l655:
						position, tokenIndex = position655, tokenIndex655
					}
				l656:
					if !_rules[rule_]() {
						goto l653
					}
					{
						position657, tokenIndex657 := position, tokenIndex
						if !_rules[ruleAuthorEmend]() {
							goto l658
						}
						goto l657
					l658:
						position, tokenIndex = position657, tokenIndex657
						if !_rules[ruleAuthorEx]() {
							goto l659
						}
						goto l657
					l659:
						position, tokenIndex = position657, tokenIndex657
						if !_rules[ruleAuthorIn]() {
							goto l653
						}
					}
				l657:
					if !_rules[ruleAuthorsTeam]() {
						goto l653
					}
					goto l654
				l653:
					position, tokenIndex = position653, tokenIndex653
				}
			l654:
				add(ruleAuthorsGroup, position652)
			}
			return true
		l651:
			position, tokenIndex = position651, tokenIndex651
			return false
		},
		/* 89 AuthorsTeam <- <(Author (AuthorSep Author)* (_? ','? _? Year)?)> */
		func() bool {
			position660, tokenIndex660 := position, tokenIndex
			{
				position661 := position
				if !_rules[ruleAuthor]() {
					goto l660
				}
			l662:
				{
					position663, tokenIndex663 := position, tokenIndex
					if !_rules[ruleAuthorSep]() {
						goto l663
					}
					if !_rules[ruleAuthor]() {
						goto l663
					}
					goto l662
				l663:
					position, tokenIndex = position663, tokenIndex663
				}
				{
					position664, tokenIndex664 := position, tokenIndex
					{
						position666, tokenIndex666 := position, tokenIndex
						if !_rules[rule_]() {
							goto l666
						}
						goto l667
					l666:
						position, tokenIndex = position666, tokenIndex666
					}
				l667:
					{
						position668, tokenIndex668 := position, tokenIndex
						if buffer[position] != rune(',') {
							goto l668
						}
						position++
						goto l669
					l668:
						position, tokenIndex = position668, tokenIndex668
					}
				l669:
					{
						position670, tokenIndex670 := position, tokenIndex
						if !_rules[rule_]() {
							goto l670
						}
						goto l671
					l670:
						position, tokenIndex = position670, tokenIndex670
					}
				l671:
					if !_rules[ruleYear]() {
						goto l664
					}
					goto l665
				l664:
					position, tokenIndex = position664, tokenIndex664
				}
			l665:
				add(ruleAuthorsTeam, position661)
			}
			return true
		l660:
			position, tokenIndex = position660, tokenIndex660
			return false
		},
		/* 90 AuthorSep <- <(AuthorSep1 / AuthorSep2)> */
		func() bool {
			position672, tokenIndex672 := position, tokenIndex
			{
				position673 := position
				{
					position674, tokenIndex674 := position, tokenIndex
					if !_rules[ruleAuthorSep1]() {
						goto l675
					}
					goto l674
				l675:
					position, tokenIndex = position674, tokenIndex674
					if !_rules[ruleAuthorSep2]() {
						goto l672
					}
				}
			l674:
				add(ruleAuthorSep, position673)
			}
			return true
		l672:
			position, tokenIndex = position672, tokenIndex672
			return false
		},
		/* 91 AuthorSep1 <- <(_? (',' _)? ('&' / AuthorSepSpanish / ('e' 't') / ('a' 'n' 'd') / ('a' 'p' 'u' 'd')) _?)> */
		func() bool {
			position676, tokenIndex676 := position, tokenIndex
			{
				position677 := position
				{
					position678, tokenIndex678 := position, tokenIndex
					if !_rules[rule_]() {
						goto l678
					}
					goto l679
				l678:
					position, tokenIndex = position678, tokenIndex678
				}
			l679:
				{
					position680, tokenIndex680 := position, tokenIndex
					if buffer[position] != rune(',') {
						goto l680
					}
					position++
					if !_rules[rule_]() {
						goto l680
					}
					goto l681
				l680:
					position, tokenIndex = position680, tokenIndex680
				}
			l681:
				{
					position682, tokenIndex682 := position, tokenIndex
					if buffer[position] != rune('&') {
						goto l683
					}
					position++
					goto l682
				l683:
					position, tokenIndex = position682, tokenIndex682
					if !_rules[ruleAuthorSepSpanish]() {
						goto l684
					}
					goto l682
				l684:
					position, tokenIndex = position682, tokenIndex682
					if buffer[position] != rune('e') {
						goto l685
					}
					position++
					if buffer[position] != rune('t') {
						goto l685
					}
					position++
					goto l682
				l685:
					position, tokenIndex = position682, tokenIndex682
					if buffer[position] != rune('a') {
						goto l686
					}
					position++
					if buffer[position] != rune('n') {
						goto l686
					}
					position++
					if buffer[position] != rune('d') {
						goto l686
					}
					position++
					goto l682
				l686:
					position, tokenIndex = position682, tokenIndex682
					if buffer[position] != rune('a') {
						goto l676
					}
					position++
					if buffer[position] != rune('p') {
						goto l676
					}
					position++
					if buffer[position] != rune('u') {
						goto l676
					}
					position++
					if buffer[position] != rune('d') {
						goto l676
					}
					position++
				}
			l682:
				{
					position687, tokenIndex687 := position, tokenIndex
					if !_rules[rule_]() {
						goto l687
					}
					goto l688
				l687:
					position, tokenIndex = position687, tokenIndex687
				}
			l688:
				add(ruleAuthorSep1, position677)
			}
			return true
		l676:
			position, tokenIndex = position676, tokenIndex676
			return false
		},
		/* 92 AuthorSep2 <- <(_? ',' _?)> */
		func() bool {
			position689, tokenIndex689 := position, tokenIndex
			{
				position690 := position
				{
					position691, tokenIndex691 := position, tokenIndex
					if !_rules[rule_]() {
						goto l691
					}
					goto l692
				l691:
					position, tokenIndex = position691, tokenIndex691
				}
			l692:
				if buffer[position] != rune(',') {
					goto l689
				}
				position++
				{
					position693, tokenIndex693 := position, tokenIndex
					if !_rules[rule_]() {
						goto l693
					}
					goto l694
				l693:
					position, tokenIndex = position693, tokenIndex693
				}
			l694:
				add(ruleAuthorSep2, position690)
			}
			return true
		l689:
			position, tokenIndex = position689, tokenIndex689
			return false
		},
		/* 93 AuthorSepSpanish <- <(_? 'y' _?)> */
		func() bool {
			position695, tokenIndex695 := position, tokenIndex
			{
				position696 := position
				{
					position697, tokenIndex697 := position, tokenIndex
					if !_rules[rule_]() {
						goto l697
					}
					goto l698
				l697:
					position, tokenIndex = position697, tokenIndex697
				}
			l698:
				if buffer[position] != rune('y') {
					goto l695
				}
				position++
				{
					position699, tokenIndex699 := position, tokenIndex
					if !_rules[rule_]() {
						goto l699
					}
					goto l700
				l699:
					position, tokenIndex = position699, tokenIndex699
				}
			l700:
				add(ruleAuthorSepSpanish, position696)
			}
			return true
		l695:
			position, tokenIndex = position695, tokenIndex695
			return false
		},
		/* 94 AuthorEx <- <('e' 'x' '.'? _)> */
		func() bool {
			position701, tokenIndex701 := position, tokenIndex
			{
				position702 := position
				if buffer[position] != rune('e') {
					goto l701
				}
				position++
				if buffer[position] != rune('x') {
					goto l701
				}
				position++
				{
					position703, tokenIndex703 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l703
					}
					position++
					goto l704
				l703:
					position, tokenIndex = position703, tokenIndex703
				}
			l704:
				if !_rules[rule_]() {
					goto l701
				}
				add(ruleAuthorEx, position702)
			}
			return true
		l701:
			position, tokenIndex = position701, tokenIndex701
			return false
		},
		/* 95 AuthorIn <- <((('m' 's' _ ('i' 'n')) / ('i' 'n')) _)> */
		func() bool {
			position705, tokenIndex705 := position, tokenIndex
			{
				position706 := position
				{
					position707, tokenIndex707 := position, tokenIndex
					if buffer[position] != rune('m') {
						goto l708
					}
					position++
					if buffer[position] != rune('s') {
						goto l708
					}
					position++
					if !_rules[rule_]() {
						goto l708
					}
					if buffer[position] != rune('i') {
						goto l708
					}
					position++
					if buffer[position] != rune('n') {
						goto l708
					}
					position++
					goto l707
				l708:
					position, tokenIndex = position707, tokenIndex707
					if buffer[position] != rune('i') {
						goto l705
					}
					position++
					if buffer[position] != rune('n') {
						goto l705
					}
					position++
				}
			l707:
				if !_rules[rule_]() {
					goto l705
				}
				add(ruleAuthorIn, position706)
			}
			return true
		l705:
			position, tokenIndex = position705, tokenIndex705
			return false
		},
		/* 96 AuthorEmend <- <('e' 'm' 'e' 'n' 'd' '.'? _)> */
		func() bool {
			position709, tokenIndex709 := position, tokenIndex
			{
				position710 := position
				if buffer[position] != rune('e') {
					goto l709
				}
				position++
				if buffer[position] != rune('m') {
					goto l709
				}
				position++
				if buffer[position] != rune('e') {
					goto l709
				}
				position++
				if buffer[position] != rune('n') {
					goto l709
				}
				position++
				if buffer[position] != rune('d') {
					goto l709
				}
				position++
				{
					position711, tokenIndex711 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l711
					}
					position++
					goto l712
				l711:
					position, tokenIndex = position711, tokenIndex711
				}
			l712:
				if !_rules[rule_]() {
					goto l709
				}
				add(ruleAuthorEmend, position710)
			}
			return true
		l709:
			position, tokenIndex = position709, tokenIndex709
			return false
		},
		/* 97 Author <- <((Author0 / Author1 / Author2 / UnknownAuthor) (_ AuthorEtAl)?)> */
		func() bool {
			position713, tokenIndex713 := position, tokenIndex
			{
				position714 := position
				{
					position715, tokenIndex715 := position, tokenIndex
					if !_rules[ruleAuthor0]() {
						goto l716
					}
					goto l715
				l716:
					position, tokenIndex = position715, tokenIndex715
					if !_rules[ruleAuthor1]() {
						goto l717
					}
					goto l715
				l717:
					position, tokenIndex = position715, tokenIndex715
					if !_rules[ruleAuthor2]() {
						goto l718
					}
					goto l715
				l718:
					position, tokenIndex = position715, tokenIndex715
					if !_rules[ruleUnknownAuthor]() {
						goto l713
					}
				}
			l715:
				{
					position719, tokenIndex719 := position, tokenIndex
					if !_rules[rule_]() {
						goto l719
					}
					if !_rules[ruleAuthorEtAl]() {
						goto l719
					}
					goto l720
				l719:
					position, tokenIndex = position719, tokenIndex719
				}
			l720:
				add(ruleAuthor, position714)
			}
			return true
		l713:
			position, tokenIndex = position713, tokenIndex713
			return false
		},
		/* 98 Author0 <- <(Author2 FiliusFNoSpace)> */
		func() bool {
			position721, tokenIndex721 := position, tokenIndex
			{
				position722 := position
				if !_rules[ruleAuthor2]() {
					goto l721
				}
				if !_rules[ruleFiliusFNoSpace]() {
					goto l721
				}
				add(ruleAuthor0, position722)
			}
			return true
		l721:
			position, tokenIndex = position721, tokenIndex721
			return false
		},
		/* 99 Author1 <- <(Author2 _? (Filius / AuthorSuffix))> */
		func() bool {
			position723, tokenIndex723 := position, tokenIndex
			{
				position724 := position
				if !_rules[ruleAuthor2]() {
					goto l723
				}
				{
					position725, tokenIndex725 := position, tokenIndex
					if !_rules[rule_]() {
						goto l725
					}
					goto l726
				l725:
					position, tokenIndex = position725, tokenIndex725
				}
			l726:
				{
					position727, tokenIndex727 := position, tokenIndex
					if !_rules[ruleFilius]() {
						goto l728
					}
					goto l727
				l728:
					position, tokenIndex = position727, tokenIndex727
					if !_rules[ruleAuthorSuffix]() {
						goto l723
					}
				}
			l727:
				add(ruleAuthor1, position724)
			}
			return true
		l723:
			position, tokenIndex = position723, tokenIndex723
			return false
		},
		/* 100 Author2 <- <(AuthorWord (_? AuthorWord)*)> */
		func() bool {
			position729, tokenIndex729 := position, tokenIndex
			{
				position730 := position
				if !_rules[ruleAuthorWord]() {
					goto l729
				}
			l731:
				{
					position732, tokenIndex732 := position, tokenIndex
					{
						position733, tokenIndex733 := position, tokenIndex
						if !_rules[rule_]() {
							goto l733
						}
						goto l734
					l733:
						position, tokenIndex = position733, tokenIndex733
					}
				l734:
					if !_rules[ruleAuthorWord]() {
						goto l732
					}
					goto l731
				l732:
					position, tokenIndex = position732, tokenIndex732
				}
				add(ruleAuthor2, position730)
			}
			return true
		l729:
			position, tokenIndex = position729, tokenIndex729
			return false
		},
		/* 101 UnknownAuthor <- <('?' / ((('a' 'u' 'c' 't') / ('a' 'n' 'o' 'n')) (&SpaceCharEOI / '.')))> */
		func() bool {
			position735, tokenIndex735 := position, tokenIndex
			{
				position736 := position
				{
					position737, tokenIndex737 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l738
					}
					position++
					goto l737
				l738:
					position, tokenIndex = position737, tokenIndex737
					{
						position739, tokenIndex739 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l740
						}
						position++
						if buffer[position] != rune('u') {
							goto l740
						}
						position++
						if buffer[position] != rune('c') {
							goto l740
						}
						position++
						if buffer[position] != rune('t') {
							goto l740
						}
						position++
						goto l739
					l740:
						position, tokenIndex = position739, tokenIndex739
						if buffer[position] != rune('a') {
							goto l735
						}
						position++
						if buffer[position] != rune('n') {
							goto l735
						}
						position++
						if buffer[position] != rune('o') {
							goto l735
						}
						position++
						if buffer[position] != rune('n') {
							goto l735
						}
						position++
					}
				l739:
					{
						position741, tokenIndex741 := position, tokenIndex
						{
							position743, tokenIndex743 := position, tokenIndex
							if !_rules[ruleSpaceCharEOI]() {
								goto l742
							}
							position, tokenIndex = position743, tokenIndex743
						}
						goto l741
					l742:
						position, tokenIndex = position741, tokenIndex741
						if buffer[position] != rune('.') {
							goto l735
						}
						position++
					}
				l741:
				}
			l737:
				add(ruleUnknownAuthor, position736)
			}
			return true
		l735:
			position, tokenIndex = position735, tokenIndex735
			return false
		},
		/* 102 AuthorWord <- <(!(HybridChar / (('b' / 'B') ('o' / 'O') ('l' / 'L') ('d' / 'D') ':')) (AuthorDashInitials / AuthorWord1 / AuthorWord2 / AuthorWord3 / AuthorWord4 / AuthorPrefix))> */
		func() bool {
			position744, tokenIndex744 := position, tokenIndex
			{
				position745 := position
				{
					position746, tokenIndex746 := position, tokenIndex
					{
						position747, tokenIndex747 := position, tokenIndex
						if !_rules[ruleHybridChar]() {
							goto l748
						}
						goto l747
					l748:
						position, tokenIndex = position747, tokenIndex747
						{
							position749, tokenIndex749 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l750
							}
							position++
							goto l749
						l750:
							position, tokenIndex = position749, tokenIndex749
							if buffer[position] != rune('B') {
								goto l746
							}
							position++
						}
					l749:
						{
							position751, tokenIndex751 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l752
							}
							position++
							goto l751
						l752:
							position, tokenIndex = position751, tokenIndex751
							if buffer[position] != rune('O') {
								goto l746
							}
							position++
						}
					l751:
						{
							position753, tokenIndex753 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l754
							}
							position++
							goto l753
						l754:
							position, tokenIndex = position753, tokenIndex753
							if buffer[position] != rune('L') {
								goto l746
							}
							position++
						}
					l753:
						{
							position755, tokenIndex755 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l756
							}
							position++
							goto l755
						l756:
							position, tokenIndex = position755, tokenIndex755
							if buffer[position] != rune('D') {
								goto l746
							}
							position++
						}
					l755:
						if buffer[position] != rune(':') {
							goto l746
						}
						position++
					}
				l747:
					goto l744
				l746:
					position, tokenIndex = position746, tokenIndex746
				}
				{
					position757, tokenIndex757 := position, tokenIndex
					if !_rules[ruleAuthorDashInitials]() {
						goto l758
					}
					goto l757
				l758:
					position, tokenIndex = position757, tokenIndex757
					if !_rules[ruleAuthorWord1]() {
						goto l759
					}
					goto l757
				l759:
					position, tokenIndex = position757, tokenIndex757
					if !_rules[ruleAuthorWord2]() {
						goto l760
					}
					goto l757
				l760:
					position, tokenIndex = position757, tokenIndex757
					if !_rules[ruleAuthorWord3]() {
						goto l761
					}
					goto l757
				l761:
					position, tokenIndex = position757, tokenIndex757
					if !_rules[ruleAuthorWord4]() {
						goto l762
					}
					goto l757
				l762:
					position, tokenIndex = position757, tokenIndex757
					if !_rules[ruleAuthorPrefix]() {
						goto l744
					}
				}
			l757:
				add(ruleAuthorWord, position745)
			}
			return true
		l744:
			position, tokenIndex = position744, tokenIndex744
			return false
		},
		/* 103 AuthorEtAl <- <(('a' 'r' 'g' '.') / ('e' 't' ' ' 'a' 'l' '.' '{' '?' '}') / ((('e' 't') / '&') (' ' 'a' 'l') '.'?))> */
		func() bool {
			position763, tokenIndex763 := position, tokenIndex
			{
				position764 := position
				{
					position765, tokenIndex765 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l766
					}
					position++
					if buffer[position] != rune('r') {
						goto l766
					}
					position++
					if buffer[position] != rune('g') {
						goto l766
					}
					position++
					if buffer[position] != rune('.') {
						goto l766
					}
					position++
					goto l765
				l766:
					position, tokenIndex = position765, tokenIndex765
					if buffer[position] != rune('e') {
						goto l767
					}
					position++
					if buffer[position] != rune('t') {
						goto l767
					}
					position++
					if buffer[position] != rune(' ') {
						goto l767
					}
					position++
					if buffer[position] != rune('a') {
						goto l767
					}
					position++
					if buffer[position] != rune('l') {
						goto l767
					}
					position++
					if buffer[position] != rune('.') {
						goto l767
					}
					position++
					if buffer[position] != rune('{') {
						goto l767
					}
					position++
					if buffer[position] != rune('?') {
						goto l767
					}
					position++
					if buffer[position] != rune('}') {
						goto l767
					}
					position++
					goto l765
				l767:
					position, tokenIndex = position765, tokenIndex765
					{
						position768, tokenIndex768 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l769
						}
						position++
						if buffer[position] != rune('t') {
							goto l769
						}
						position++
						goto l768
					l769:
						position, tokenIndex = position768, tokenIndex768
						if buffer[position] != rune('&') {
							goto l763
						}
						position++
					}
				l768:
					if buffer[position] != rune(' ') {
						goto l763
					}
					position++
					if buffer[position] != rune('a') {
						goto l763
					}
					position++
					if buffer[position] != rune('l') {
						goto l763
					}
					position++
					{
						position770, tokenIndex770 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l770
						}
						position++
						goto l771
					l770:
						position, tokenIndex = position770, tokenIndex770
					}
				l771:
				}
			l765:
				add(ruleAuthorEtAl, position764)
			}
			return true
		l763:
			position, tokenIndex = position763, tokenIndex763
			return false
		},
		/* 104 AuthorWord1 <- <(('d' 'u' 'P' 'o' 'n' 't') / ('d' 'e' 'g' 'l' 'i') / ('A' 'r' 'a' 'n' 'g' 'o' ' ' 'y' ' ' 'M' 'o' 'l' 'i' 'n' 'a'))> */
		func() bool {
			position772, tokenIndex772 := position, tokenIndex
			{
				position773 := position
				{
					position774, tokenIndex774 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l775
					}
					position++
					if buffer[position] != rune('u') {
						goto l775
					}
					position++
					if buffer[position] != rune('P') {
						goto l775
					}
					position++
					if buffer[position] != rune('o') {
						goto l775
					}
					position++
					if buffer[position] != rune('n') {
						goto l775
					}
					position++
					if buffer[position] != rune('t') {
						goto l775
					}
					position++
					goto l774
				l775:
					position, tokenIndex = position774, tokenIndex774
					if buffer[position] != rune('d') {
						goto l776
					}
					position++
					if buffer[position] != rune('e') {
						goto l776
					}
					position++
					if buffer[position] != rune('g') {
						goto l776
					}
					position++
					if buffer[position] != rune('l') {
						goto l776
					}
					position++
					if buffer[position] != rune('i') {
						goto l776
					}
					position++
					goto l774
				l776:
					position, tokenIndex = position774, tokenIndex774
					if buffer[position] != rune('A') {
						goto l772
					}
					position++
					if buffer[position] != rune('r') {
						goto l772
					}
					position++
					if buffer[position] != rune('a') {
						goto l772
					}
					position++
					if buffer[position] != rune('n') {
						goto l772
					}
					position++
					if buffer[position] != rune('g') {
						goto l772
					}
					position++
					if buffer[position] != rune('o') {
						goto l772
					}
					position++
					if buffer[position] != rune(' ') {
						goto l772
					}
					position++
					if buffer[position] != rune('y') {
						goto l772
					}
					position++
					if buffer[position] != rune(' ') {
						goto l772
					}
					position++
					if buffer[position] != rune('M') {
						goto l772
					}
					position++
					if buffer[position] != rune('o') {
						goto l772
					}
					position++
					if buffer[position] != rune('l') {
						goto l772
					}
					position++
					if buffer[position] != rune('i') {
						goto l772
					}
					position++
					if buffer[position] != rune('n') {
						goto l772
					}
					position++
					if buffer[position] != rune('a') {
						goto l772
					}
					position++
				}
			l774:
				add(ruleAuthorWord1, position773)
			}
			return true
		l772:
			position, tokenIndex = position772, tokenIndex772
			return false
		},
		/* 105 AuthorWord2 <- <((AuthorWord3 / AuthorWord4) Dash (AuthorWordSoft / AuthorInitial) (Dash (AuthorWordSoft / AuthorInitial))?)> */
		func() bool {
			position777, tokenIndex777 := position, tokenIndex
			{
				position778 := position
				{
					position779, tokenIndex779 := position, tokenIndex
					if !_rules[ruleAuthorWord3]() {
						goto l780
					}
					goto l779
				l780:
					position, tokenIndex = position779, tokenIndex779
					if !_rules[ruleAuthorWord4]() {
						goto l777
					}
				}
			l779:
				if !_rules[ruleDash]() {
					goto l777
				}
				{
					position781, tokenIndex781 := position, tokenIndex
					if !_rules[ruleAuthorWordSoft]() {
						goto l782
					}
					goto l781
				l782:
					position, tokenIndex = position781, tokenIndex781
					if !_rules[ruleAuthorInitial]() {
						goto l777
					}
				}
			l781:
				{
					position783, tokenIndex783 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l783
					}
					{
						position785, tokenIndex785 := position, tokenIndex
						if !_rules[ruleAuthorWordSoft]() {
							goto l786
						}
						goto l785
					l786:
						position, tokenIndex = position785, tokenIndex785
						if !_rules[ruleAuthorInitial]() {
							goto l783
						}
					}
				l785:
					goto l784
				l783:
					position, tokenIndex = position783, tokenIndex783
				}
			l784:
				add(ruleAuthorWord2, position778)
			}
			return true
		l777:
			position, tokenIndex = position777, tokenIndex777
			return false
		},
		/* 106 AuthorWord3 <- <(AuthorPrefixGlued2 (CapAuthorWord / AuthorLowerChar+) '.'?)> */
		func() bool {
			position787, tokenIndex787 := position, tokenIndex
			{
				position788 := position
				if !_rules[ruleAuthorPrefixGlued2]() {
					goto l787
				}
				{
					position789, tokenIndex789 := position, tokenIndex
					if !_rules[ruleCapAuthorWord]() {
						goto l790
					}
					goto l789
				l790:
					position, tokenIndex = position789, tokenIndex789
					if !_rules[ruleAuthorLowerChar]() {
						goto l787
					}
				l791:
					{
						position792, tokenIndex792 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l792
						}
						goto l791
					l792:
						position, tokenIndex = position792, tokenIndex792
					}
				}
			l789:
				{
					position793, tokenIndex793 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l793
					}
					position++
					goto l794
				l793:
					position, tokenIndex = position793, tokenIndex793
				}
			l794:
				add(ruleAuthorWord3, position788)
			}
			return true
		l787:
			position, tokenIndex = position787, tokenIndex787
			return false
		},
		/* 107 AuthorWord4 <- <(AuthorPrefixGlued1? (AllCapsAuthorWord / CapAuthorWord) '.'?)> */
		func() bool {
			position795, tokenIndex795 := position, tokenIndex
			{
				position796 := position
				{
					position797, tokenIndex797 := position, tokenIndex
					if !_rules[ruleAuthorPrefixGlued1]() {
						goto l797
					}
					goto l798
				l797:
					position, tokenIndex = position797, tokenIndex797
				}
			l798:
				{
					position799, tokenIndex799 := position, tokenIndex
					if !_rules[ruleAllCapsAuthorWord]() {
						goto l800
					}
					goto l799
				l800:
					position, tokenIndex = position799, tokenIndex799
					if !_rules[ruleCapAuthorWord]() {
						goto l795
					}
				}
			l799:
				{
					position801, tokenIndex801 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l801
					}
					position++
					goto l802
				l801:
					position, tokenIndex = position801, tokenIndex801
				}
			l802:
				add(ruleAuthorWord4, position796)
			}
			return true
		l795:
			position, tokenIndex = position795, tokenIndex795
			return false
		},
		/* 108 AuthorDashInitials <- <(AuthorUpperChar '.'? Dash AuthorUpperChar '.'?)> */
		func() bool {
			position803, tokenIndex803 := position, tokenIndex
			{
				position804 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l803
				}
				{
					position805, tokenIndex805 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l805
					}
					position++
					goto l806
				l805:
					position, tokenIndex = position805, tokenIndex805
				}
			l806:
				if !_rules[ruleDash]() {
					goto l803
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l803
				}
				{
					position807, tokenIndex807 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l807
					}
					position++
					goto l808
				l807:
					position, tokenIndex = position807, tokenIndex807
				}
			l808:
				add(ruleAuthorDashInitials, position804)
			}
			return true
		l803:
			position, tokenIndex = position803, tokenIndex803
			return false
		},
		/* 109 AuthorInitial <- <(AuthorUpperChar '.'?)> */
		func() bool {
			position809, tokenIndex809 := position, tokenIndex
			{
				position810 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l809
				}
				{
					position811, tokenIndex811 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l811
					}
					position++
					goto l812
				l811:
					position, tokenIndex = position811, tokenIndex811
				}
			l812:
				add(ruleAuthorInitial, position810)
			}
			return true
		l809:
			position, tokenIndex = position809, tokenIndex809
			return false
		},
		/* 110 AuthorWordSoft <- <(((AuthorUpperChar (AuthorUpperChar+ / AuthorLowerChar+)) / AuthorLowerChar+) '.'?)> */
		func() bool {
			position813, tokenIndex813 := position, tokenIndex
			{
				position814 := position
				{
					position815, tokenIndex815 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l816
					}
					{
						position817, tokenIndex817 := position, tokenIndex
						if !_rules[ruleAuthorUpperChar]() {
							goto l818
						}
					l819:
						{
							position820, tokenIndex820 := position, tokenIndex
							if !_rules[ruleAuthorUpperChar]() {
								goto l820
							}
							goto l819
						l820:
							position, tokenIndex = position820, tokenIndex820
						}
						goto l817
					l818:
						position, tokenIndex = position817, tokenIndex817
						if !_rules[ruleAuthorLowerChar]() {
							goto l816
						}
					l821:
						{
							position822, tokenIndex822 := position, tokenIndex
							if !_rules[ruleAuthorLowerChar]() {
								goto l822
							}
							goto l821
						l822:
							position, tokenIndex = position822, tokenIndex822
						}
					}
				l817:
					goto l815
				l816:
					position, tokenIndex = position815, tokenIndex815
					if !_rules[ruleAuthorLowerChar]() {
						goto l813
					}
				l823:
					{
						position824, tokenIndex824 := position, tokenIndex
						if !_rules[ruleAuthorLowerChar]() {
							goto l824
						}
						goto l823
					l824:
						position, tokenIndex = position824, tokenIndex824
					}
				}
			l815:
				{
					position825, tokenIndex825 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l825
					}
					position++
					goto l826
				l825:
					position, tokenIndex = position825, tokenIndex825
				}
			l826:
				add(ruleAuthorWordSoft, position814)
			}
			return true
		l813:
			position, tokenIndex = position813, tokenIndex813
			return false
		},
		/* 111 CapAuthorWord <- <(AuthorUpperChar AuthorLowerChar*)> */
		func() bool {
			position827, tokenIndex827 := position, tokenIndex
			{
				position828 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l827
				}
			l829:
				{
					position830, tokenIndex830 := position, tokenIndex
					if !_rules[ruleAuthorLowerChar]() {
						goto l830
					}
					goto l829
				l830:
					position, tokenIndex = position830, tokenIndex830
				}
				add(ruleCapAuthorWord, position828)
			}
			return true
		l827:
			position, tokenIndex = position827, tokenIndex827
			return false
		},
		/* 112 AllCapsAuthorWord <- <(AuthorUpperChar AuthorUpperChar+)> */
		func() bool {
			position831, tokenIndex831 := position, tokenIndex
			{
				position832 := position
				if !_rules[ruleAuthorUpperChar]() {
					goto l831
				}
				if !_rules[ruleAuthorUpperChar]() {
					goto l831
				}
			l833:
				{
					position834, tokenIndex834 := position, tokenIndex
					if !_rules[ruleAuthorUpperChar]() {
						goto l834
					}
					goto l833
				l834:
					position, tokenIndex = position834, tokenIndex834
				}
				add(ruleAllCapsAuthorWord, position832)
			}
			return true
		l831:
			position, tokenIndex = position831, tokenIndex831
			return false
		},
		/* 113 Filius <- <(FiliusF / ('f' 'i' 'l' '.') / ('f' 'i' 'l' 'i' 'u' 's'))> */
		func() bool {
			position835, tokenIndex835 := position, tokenIndex
			{
				position836 := position
				{
					position837, tokenIndex837 := position, tokenIndex
					if !_rules[ruleFiliusF]() {
						goto l838
					}
					goto l837
				l838:
					position, tokenIndex = position837, tokenIndex837
					if buffer[position] != rune('f') {
						goto l839
					}
					position++
					if buffer[position] != rune('i') {
						goto l839
					}
					position++
					if buffer[position] != rune('l') {
						goto l839
					}
					position++
					if buffer[position] != rune('.') {
						goto l839
					}
					position++
					goto l837
				l839:
					position, tokenIndex = position837, tokenIndex837
					if buffer[position] != rune('f') {
						goto l835
					}
					position++
					if buffer[position] != rune('i') {
						goto l835
					}
					position++
					if buffer[position] != rune('l') {
						goto l835
					}
					position++
					if buffer[position] != rune('i') {
						goto l835
					}
					position++
					if buffer[position] != rune('u') {
						goto l835
					}
					position++
					if buffer[position] != rune('s') {
						goto l835
					}
					position++
				}
			l837:
				add(ruleFilius, position836)
			}
			return true
		l835:
			position, tokenIndex = position835, tokenIndex835
			return false
		},
		/* 114 FiliusF <- <('f' '.' !(_ Word))> */
		func() bool {
			position840, tokenIndex840 := position, tokenIndex
			{
				position841 := position
				if buffer[position] != rune('f') {
					goto l840
				}
				position++
				if buffer[position] != rune('.') {
					goto l840
				}
				position++
				{
					position842, tokenIndex842 := position, tokenIndex
					if !_rules[rule_]() {
						goto l842
					}
					if !_rules[ruleWord]() {
						goto l842
					}
					goto l840
				l842:
					position, tokenIndex = position842, tokenIndex842
				}
				add(ruleFiliusF, position841)
			}
			return true
		l840:
			position, tokenIndex = position840, tokenIndex840
			return false
		},
		/* 115 FiliusFNoSpace <- <('f' '.')> */
		func() bool {
			position843, tokenIndex843 := position, tokenIndex
			{
				position844 := position
				if buffer[position] != rune('f') {
					goto l843
				}
				position++
				if buffer[position] != rune('.') {
					goto l843
				}
				position++
				add(ruleFiliusFNoSpace, position844)
			}
			return true
		l843:
			position, tokenIndex = position843, tokenIndex843
			return false
		},
		/* 116 AuthorSuffix <- <(('b' 'i' 's') / ('t' 'e' 'r'))> */
		func() bool {
			position845, tokenIndex845 := position, tokenIndex
			{
				position846 := position
				{
					position847, tokenIndex847 := position, tokenIndex
					if buffer[position] != rune('b') {
						goto l848
					}
					position++
					if buffer[position] != rune('i') {
						goto l848
					}
					position++
					if buffer[position] != rune('s') {
						goto l848
					}
					position++
					goto l847
				l848:
					position, tokenIndex = position847, tokenIndex847
					if buffer[position] != rune('t') {
						goto l845
					}
					position++
					if buffer[position] != rune('e') {
						goto l845
					}
					position++
					if buffer[position] != rune('r') {
						goto l845
					}
					position++
				}
			l847:
				add(ruleAuthorSuffix, position846)
			}
			return true
		l845:
			position, tokenIndex = position845, tokenIndex845
			return false
		},
		/* 117 AuthorPrefixGlued1 <- <(('d' / 'D' / 'O' / 'L' / 'M') Apostrophe)> */
		func() bool {
			position849, tokenIndex849 := position, tokenIndex
			{
				position850 := position
				{
					position851, tokenIndex851 := position, tokenIndex
					if buffer[position] != rune('d') {
						goto l852
					}
					position++
					goto l851
				l852:
					position, tokenIndex = position851, tokenIndex851
					if buffer[position] != rune('D') {
						goto l853
					}
					position++
					goto l851
				l853:
					position, tokenIndex = position851, tokenIndex851
					if buffer[position] != rune('O') {
						goto l854
					}
					position++
					goto l851
				l854:
					position, tokenIndex = position851, tokenIndex851
					if buffer[position] != rune('L') {
						goto l855
					}
					position++
					goto l851
				l855:
					position, tokenIndex = position851, tokenIndex851
					if buffer[position] != rune('M') {
						goto l849
					}
					position++
				}
			l851:
				if !_rules[ruleApostrophe]() {
					goto l849
				}
				add(ruleAuthorPrefixGlued1, position850)
			}
			return true
		l849:
			position, tokenIndex = position849, tokenIndex849
			return false
		},
		/* 118 AuthorPrefixGlued2 <- <((('M' 'c') / ('M' 'a' 'c')) Apostrophe?)> */
		func() bool {
			position856, tokenIndex856 := position, tokenIndex
			{
				position857 := position
				{
					position858, tokenIndex858 := position, tokenIndex
					if buffer[position] != rune('M') {
						goto l859
					}
					position++
					if buffer[position] != rune('c') {
						goto l859
					}
					position++
					goto l858
				l859:
					position, tokenIndex = position858, tokenIndex858
					if buffer[position] != rune('M') {
						goto l856
					}
					position++
					if buffer[position] != rune('a') {
						goto l856
					}
					position++
					if buffer[position] != rune('c') {
						goto l856
					}
					position++
				}
			l858:
				{
					position860, tokenIndex860 := position, tokenIndex
					if !_rules[ruleApostrophe]() {
						goto l860
					}
					goto l861
				l860:
					position, tokenIndex = position860, tokenIndex860
				}
			l861:
				add(ruleAuthorPrefixGlued2, position857)
			}
			return true
		l856:
			position, tokenIndex = position856, tokenIndex856
			return false
		},
		/* 119 AuthorPrefix <- <(AuthorPrefix1 / AuthorPrefix2)> */
		func() bool {
			position862, tokenIndex862 := position, tokenIndex
			{
				position863 := position
				{
					position864, tokenIndex864 := position, tokenIndex
					if !_rules[ruleAuthorPrefix1]() {
						goto l865
					}
					goto l864
				l865:
					position, tokenIndex = position864, tokenIndex864
					if !_rules[ruleAuthorPrefix2]() {
						goto l862
					}
				}
			l864:
				add(ruleAuthorPrefix, position863)
			}
			return true
		l862:
			position, tokenIndex = position862, tokenIndex862
			return false
		},
		/* 120 AuthorPrefix2 <- <(('v' '.' (_? ('d' '.'))?) / (Apostrophe 't'))> */
		func() bool {
			position866, tokenIndex866 := position, tokenIndex
			{
				position867 := position
				{
					position868, tokenIndex868 := position, tokenIndex
					if buffer[position] != rune('v') {
						goto l869
					}
					position++
					if buffer[position] != rune('.') {
						goto l869
					}
					position++
					{
						position870, tokenIndex870 := position, tokenIndex
						{
							position872, tokenIndex872 := position, tokenIndex
							if !_rules[rule_]() {
								goto l872
							}
							goto l873
						l872:
							position, tokenIndex = position872, tokenIndex872
						}
					l873:
						if buffer[position] != rune('d') {
							goto l870
						}
						position++
						if buffer[position] != rune('.') {
							goto l870
						}
						position++
						goto l871
					l870:
						position, tokenIndex = position870, tokenIndex870
					}
				l871:
					goto l868
				l869:
					position, tokenIndex = position868, tokenIndex868
					if !_rules[ruleApostrophe]() {
						goto l866
					}
					if buffer[position] != rune('t') {
						goto l866
					}
					position++
				}
			l868:
				add(ruleAuthorPrefix2, position867)
			}
			return true
		l866:
			position, tokenIndex = position866, tokenIndex866
			return false
		},
		/* 121 AuthorPrefix1 <- <((('a' 'b') / ('a' 'f') / ('b' 'i' 's') / ('d' 'a') / ('d' 'e' 'r') / ('d' 'e' 's') / ('d' 'e' 'n') / ('d' 'e' 'm') / ('d' 'e' 'l' 'l' 'a') / ('d' 'e' 'l' 'a') / ('d' 'e' 'l' 'l' 'e') / ('d' 'e' 'l') / ('d' 'e' ' ' 'l' 'o' 's') / ('d' 'e') / ('d' 'i') / ('d' 'o' 's') / ('d' 'u') / ('d' 'o') / ('e' 'l') / ('l' 'a') / ('l' 'e') / ('t' 'e' 'n') / ('t' 'e' 'r') / ('v' 'a' 'n') / ('v' 'e' 'r') / ('d' Apostrophe) / ('i' 'n' Apostrophe 't') / ('z' 'u' 'r') / ('z' 'u') / ('v' 'o' 'n' (_ (('d' '.') / ('d' 'e' 'm')))?) / ('v' (_ 'd')?)) &_)> */
		func() bool {
			position874, tokenIndex874 := position, tokenIndex
			{
				position875 := position
				{
					position876, tokenIndex876 := position, tokenIndex
					if buffer[position] != rune('a') {
						goto l877
					}
					position++
					if buffer[position] != rune('b') {
						goto l877
					}
					position++
					goto l876
				l877:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('a') {
						goto l878
					}
					position++
					if buffer[position] != rune('f') {
						goto l878
					}
					position++
					goto l876
				l878:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('b') {
						goto l879
					}
					position++
					if buffer[position] != rune('i') {
						goto l879
					}
					position++
					if buffer[position] != rune('s') {
						goto l879
					}
					position++
					goto l876
				l879:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l880
					}
					position++
					if buffer[position] != rune('a') {
						goto l880
					}
					position++
					goto l876
				l880:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l881
					}
					position++
					if buffer[position] != rune('e') {
						goto l881
					}
					position++
					if buffer[position] != rune('r') {
						goto l881
					}
					position++
					goto l876
				l881:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l882
					}
					position++
					if buffer[position] != rune('e') {
						goto l882
					}
					position++
					if buffer[position] != rune('s') {
						goto l882
					}
					position++
					goto l876
				l882:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l883
					}
					position++
					if buffer[position] != rune('e') {
						goto l883
					}
					position++
					if buffer[position] != rune('n') {
						goto l883
					}
					position++
					goto l876
				l883:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l884
					}
					position++
					if buffer[position] != rune('e') {
						goto l884
					}
					position++
					if buffer[position] != rune('m') {
						goto l884
					}
					position++
					goto l876
				l884:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l885
					}
					position++
					if buffer[position] != rune('e') {
						goto l885
					}
					position++
					if buffer[position] != rune('l') {
						goto l885
					}
					position++
					if buffer[position] != rune('l') {
						goto l885
					}
					position++
					if buffer[position] != rune('a') {
						goto l885
					}
					position++
					goto l876
				l885:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l886
					}
					position++
					if buffer[position] != rune('e') {
						goto l886
					}
					position++
					if buffer[position] != rune('l') {
						goto l886
					}
					position++
					if buffer[position] != rune('a') {
						goto l886
					}
					position++
					goto l876
				l886:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l887
					}
					position++
					if buffer[position] != rune('e') {
						goto l887
					}
					position++
					if buffer[position] != rune('l') {
						goto l887
					}
					position++
					if buffer[position] != rune('l') {
						goto l887
					}
					position++
					if buffer[position] != rune('e') {
						goto l887
					}
					position++
					goto l876
				l887:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l888
					}
					position++
					if buffer[position] != rune('e') {
						goto l888
					}
					position++
					if buffer[position] != rune('l') {
						goto l888
					}
					position++
					goto l876
				l888:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l889
					}
					position++
					if buffer[position] != rune('e') {
						goto l889
					}
					position++
					if buffer[position] != rune(' ') {
						goto l889
					}
					position++
					if buffer[position] != rune('l') {
						goto l889
					}
					position++
					if buffer[position] != rune('o') {
						goto l889
					}
					position++
					if buffer[position] != rune('s') {
						goto l889
					}
					position++
					goto l876
				l889:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l890
					}
					position++
					if buffer[position] != rune('e') {
						goto l890
					}
					position++
					goto l876
				l890:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l891
					}
					position++
					if buffer[position] != rune('i') {
						goto l891
					}
					position++
					goto l876
				l891:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l892
					}
					position++
					if buffer[position] != rune('o') {
						goto l892
					}
					position++
					if buffer[position] != rune('s') {
						goto l892
					}
					position++
					goto l876
				l892:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l893
					}
					position++
					if buffer[position] != rune('u') {
						goto l893
					}
					position++
					goto l876
				l893:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l894
					}
					position++
					if buffer[position] != rune('o') {
						goto l894
					}
					position++
					goto l876
				l894:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('e') {
						goto l895
					}
					position++
					if buffer[position] != rune('l') {
						goto l895
					}
					position++
					goto l876
				l895:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('l') {
						goto l896
					}
					position++
					if buffer[position] != rune('a') {
						goto l896
					}
					position++
					goto l876
				l896:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('l') {
						goto l897
					}
					position++
					if buffer[position] != rune('e') {
						goto l897
					}
					position++
					goto l876
				l897:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('t') {
						goto l898
					}
					position++
					if buffer[position] != rune('e') {
						goto l898
					}
					position++
					if buffer[position] != rune('n') {
						goto l898
					}
					position++
					goto l876
				l898:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('t') {
						goto l899
					}
					position++
					if buffer[position] != rune('e') {
						goto l899
					}
					position++
					if buffer[position] != rune('r') {
						goto l899
					}
					position++
					goto l876
				l899:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('v') {
						goto l900
					}
					position++
					if buffer[position] != rune('a') {
						goto l900
					}
					position++
					if buffer[position] != rune('n') {
						goto l900
					}
					position++
					goto l876
				l900:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('v') {
						goto l901
					}
					position++
					if buffer[position] != rune('e') {
						goto l901
					}
					position++
					if buffer[position] != rune('r') {
						goto l901
					}
					position++
					goto l876
				l901:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('d') {
						goto l902
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l902
					}
					goto l876
				l902:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('i') {
						goto l903
					}
					position++
					if buffer[position] != rune('n') {
						goto l903
					}
					position++
					if !_rules[ruleApostrophe]() {
						goto l903
					}
					if buffer[position] != rune('t') {
						goto l903
					}
					position++
					goto l876
				l903:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('z') {
						goto l904
					}
					position++
					if buffer[position] != rune('u') {
						goto l904
					}
					position++
					if buffer[position] != rune('r') {
						goto l904
					}
					position++
					goto l876
				l904:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('z') {
						goto l905
					}
					position++
					if buffer[position] != rune('u') {
						goto l905
					}
					position++
					goto l876
				l905:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('v') {
						goto l906
					}
					position++
					if buffer[position] != rune('o') {
						goto l906
					}
					position++
					if buffer[position] != rune('n') {
						goto l906
					}
					position++
					{
						position907, tokenIndex907 := position, tokenIndex
						if !_rules[rule_]() {
							goto l907
						}
						{
							position909, tokenIndex909 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l910
							}
							position++
							if buffer[position] != rune('.') {
								goto l910
							}
							position++
							goto l909
						l910:
							position, tokenIndex = position909, tokenIndex909
							if buffer[position] != rune('d') {
								goto l907
							}
							position++
							if buffer[position] != rune('e') {
								goto l907
							}
							position++
							if buffer[position] != rune('m') {
								goto l907
							}
							position++
						}
					l909:
						goto l908
					l907:
						position, tokenIndex = position907, tokenIndex907
					}
				l908:
					goto l876
				l906:
					position, tokenIndex = position876, tokenIndex876
					if buffer[position] != rune('v') {
						goto l874
					}
					position++
					{
						position911, tokenIndex911 := position, tokenIndex
						if !_rules[rule_]() {
							goto l911
						}
						if buffer[position] != rune('d') {
							goto l911
						}
						position++
						goto l912
					l911:
						position, tokenIndex = position911, tokenIndex911
					}
				l912:
				}
			l876:
				{
					position913, tokenIndex913 := position, tokenIndex
					if !_rules[rule_]() {
						goto l874
					}
					position, tokenIndex = position913, tokenIndex913
				}
				add(ruleAuthorPrefix1, position875)
			}
			return true
		l874:
			position, tokenIndex = position874, tokenIndex874
			return false
		},
		/* 122 AuthorUpperChar <- <(UpperASCII / MiscodedChar / ('À' / 'Á' / 'Â' / 'Ã' / 'Ä' / 'Å' / 'Æ' / 'Ç' / 'È' / 'É' / 'Ê' / 'Ë' / 'Ì' / 'Í' / 'Î' / 'Ï' / 'Ð' / 'Ñ' / 'Ò' / 'Ó' / 'Ô' / 'Õ' / 'Ö' / 'Ø' / 'Ù' / 'Ú' / 'Û' / 'Ü' / 'Ý' / 'Ć' / 'Č' / 'Ď' / 'İ' / 'Ķ' / 'Ĺ' / 'ĺ' / 'Ľ' / 'ľ' / 'Ł' / 'ł' / 'Ņ' / 'Ō' / 'Ő' / 'Œ' / 'Ř' / 'Ś' / 'Ŝ' / 'Ş' / 'Š' / 'Ÿ' / 'Ź' / 'Ż' / 'Ž' / 'ƒ' / 'Ǿ' / 'Ș' / 'Ț'))> */
		func() bool {
			position914, tokenIndex914 := position, tokenIndex
			{
				position915 := position
				{
					position916, tokenIndex916 := position, tokenIndex
					if !_rules[ruleUpperASCII]() {
						goto l917
					}
					goto l916
				l917:
					position, tokenIndex = position916, tokenIndex916
					if !_rules[ruleMiscodedChar]() {
						goto l918
					}
					goto l916
				l918:
					position, tokenIndex = position916, tokenIndex916
					{
						position919, tokenIndex919 := position, tokenIndex
						if buffer[position] != rune('À') {
							goto l920
						}
						position++
						goto l919
					l920:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Á') {
							goto l921
						}
						position++
						goto l919
					l921:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Â') {
							goto l922
						}
						position++
						goto l919
					l922:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ã') {
							goto l923
						}
						position++
						goto l919
					l923:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ä') {
							goto l924
						}
						position++
						goto l919
					l924:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Å') {
							goto l925
						}
						position++
						goto l919
					l925:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Æ') {
							goto l926
						}
						position++
						goto l919
					l926:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ç') {
							goto l927
						}
						position++
						goto l919
					l927:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('È') {
							goto l928
						}
						position++
						goto l919
					l928:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('É') {
							goto l929
						}
						position++
						goto l919
					l929:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ê') {
							goto l930
						}
						position++
						goto l919
					l930:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ë') {
							goto l931
						}
						position++
						goto l919
					l931:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ì') {
							goto l932
						}
						position++
						goto l919
					l932:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Í') {
							goto l933
						}
						position++
						goto l919
					l933:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Î') {
							goto l934
						}
						position++
						goto l919
					l934:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ï') {
							goto l935
						}
						position++
						goto l919
					l935:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ð') {
							goto l936
						}
						position++
						goto l919
					l936:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ñ') {
							goto l937
						}
						position++
						goto l919
					l937:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ò') {
							goto l938
						}
						position++
						goto l919
					l938:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ó') {
							goto l939
						}
						position++
						goto l919
					l939:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ô') {
							goto l940
						}
						position++
						goto l919
					l940:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Õ') {
							goto l941
						}
						position++
						goto l919
					l941:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ö') {
							goto l942
						}
						position++
						goto l919
					l942:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ø') {
							goto l943
						}
						position++
						goto l919
					l943:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ù') {
							goto l944
						}
						position++
						goto l919
					l944:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ú') {
							goto l945
						}
						position++
						goto l919
					l945:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Û') {
							goto l946
						}
						position++
						goto l919
					l946:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ü') {
							goto l947
						}
						position++
						goto l919
					l947:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ý') {
							goto l948
						}
						position++
						goto l919
					l948:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ć') {
							goto l949
						}
						position++
						goto l919
					l949:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Č') {
							goto l950
						}
						position++
						goto l919
					l950:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ď') {
							goto l951
						}
						position++
						goto l919
					l951:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('İ') {
							goto l952
						}
						position++
						goto l919
					l952:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ķ') {
							goto l953
						}
						position++
						goto l919
					l953:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ĺ') {
							goto l954
						}
						position++
						goto l919
					l954:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('ĺ') {
							goto l955
						}
						position++
						goto l919
					l955:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ľ') {
							goto l956
						}
						position++
						goto l919
					l956:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('ľ') {
							goto l957
						}
						position++
						goto l919
					l957:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ł') {
							goto l958
						}
						position++
						goto l919
					l958:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('ł') {
							goto l959
						}
						position++
						goto l919
					l959:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ņ') {
							goto l960
						}
						position++
						goto l919
					l960:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ō') {
							goto l961
						}
						position++
						goto l919
					l961:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ő') {
							goto l962
						}
						position++
						goto l919
					l962:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Œ') {
							goto l963
						}
						position++
						goto l919
					l963:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ř') {
							goto l964
						}
						position++
						goto l919
					l964:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ś') {
							goto l965
						}
						position++
						goto l919
					l965:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ŝ') {
							goto l966
						}
						position++
						goto l919
					l966:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ş') {
							goto l967
						}
						position++
						goto l919
					l967:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Š') {
							goto l968
						}
						position++
						goto l919
					l968:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ÿ') {
							goto l969
						}
						position++
						goto l919
					l969:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ź') {
							goto l970
						}
						position++
						goto l919
					l970:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ż') {
							goto l971
						}
						position++
						goto l919
					l971:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ž') {
							goto l972
						}
						position++
						goto l919
					l972:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('ƒ') {
							goto l973
						}
						position++
						goto l919
					l973:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ǿ') {
							goto l974
						}
						position++
						goto l919
					l974:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ș') {
							goto l975
						}
						position++
						goto l919
					l975:
						position, tokenIndex = position919, tokenIndex919
						if buffer[position] != rune('Ț') {
							goto l914
						}
						position++
					}
				l919:
				}
			l916:
				add(ruleAuthorUpperChar, position915)
			}
			return true
		l914:
			position, tokenIndex = position914, tokenIndex914
			return false
		},
		/* 123 AuthorLowerChar <- <(LowerASCII / MiscodedChar / Apostrophe / ('à' / 'á' / 'â' / 'ã' / 'ä' / 'å' / 'æ' / 'ç' / 'è' / 'é' / 'ê' / 'ë' / 'ì' / 'í' / 'î' / 'ï' / 'ð' / 'ñ' / 'ò' / 'ó' / 'ó' / 'ô' / 'õ' / 'ö' / 'ø' / 'ù' / 'ú' / 'û' / 'ü' / 'ý' / 'ÿ' / 'ā' / 'ă' / 'ą' / 'ć' / 'ĉ' / 'č' / 'ď' / 'đ' / 'ē' / 'ĕ' / 'ė' / 'ę' / 'ě' / 'ğ' / 'ī' / 'ĭ' / 'İ' / 'ı' / 'ĺ' / 'ľ' / 'ł' / 'ń' / 'ņ' / 'ň' / 'ŏ' / 'ő' / 'œ' / 'ŕ' / 'ř' / 'ś' / 'ş' / 'š' / 'ţ' / 'ť' / 'ũ' / 'ū' / 'ŭ' / 'ů' / 'ű' / 'ź' / 'ż' / 'ž' / 'ſ' / 'ǎ' / 'ǔ' / 'ǧ' / 'ș' / 'ț' / 'ȳ' / 'ß'))> */
		func() bool {
			position976, tokenIndex976 := position, tokenIndex
			{
				position977 := position
				{
					position978, tokenIndex978 := position, tokenIndex
					if !_rules[ruleLowerASCII]() {
						goto l979
					}
					goto l978
				l979:
					position, tokenIndex = position978, tokenIndex978
					if !_rules[ruleMiscodedChar]() {
						goto l980
					}
					goto l978
				l980:
					position, tokenIndex = position978, tokenIndex978
					if !_rules[ruleApostrophe]() {
						goto l981
					}
					goto l978
				l981:
					position, tokenIndex = position978, tokenIndex978
					{
						position982, tokenIndex982 := position, tokenIndex
						if buffer[position] != rune('à') {
							goto l983
						}
						position++
						goto l982
					l983:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('á') {
							goto l984
						}
						position++
						goto l982
					l984:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('â') {
							goto l985
						}
						position++
						goto l982
					l985:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ã') {
							goto l986
						}
						position++
						goto l982
					l986:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ä') {
							goto l987
						}
						position++
						goto l982
					l987:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('å') {
							goto l988
						}
						position++
						goto l982
					l988:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('æ') {
							goto l989
						}
						position++
						goto l982
					l989:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ç') {
							goto l990
						}
						position++
						goto l982
					l990:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('è') {
							goto l991
						}
						position++
						goto l982
					l991:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('é') {
							goto l992
						}
						position++
						goto l982
					l992:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ê') {
							goto l993
						}
						position++
						goto l982
					l993:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ë') {
							goto l994
						}
						position++
						goto l982
					l994:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ì') {
							goto l995
						}
						position++
						goto l982
					l995:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('í') {
							goto l996
						}
						position++
						goto l982
					l996:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('î') {
							goto l997
						}
						position++
						goto l982
					l997:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ï') {
							goto l998
						}
						position++
						goto l982
					l998:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ð') {
							goto l999
						}
						position++
						goto l982
					l999:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ñ') {
							goto l1000
						}
						position++
						goto l982
					l1000:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ò') {
							goto l1001
						}
						position++
						goto l982
					l1001:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ó') {
							goto l1002
						}
						position++
						goto l982
					l1002:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ó') {
							goto l1003
						}
						position++
						goto l982
					l1003:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ô') {
							goto l1004
						}
						position++
						goto l982
					l1004:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('õ') {
							goto l1005
						}
						position++
						goto l982
					l1005:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ö') {
							goto l1006
						}
						position++
						goto l982
					l1006:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ø') {
							goto l1007
						}
						position++
						goto l982
					l1007:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ù') {
							goto l1008
						}
						position++
						goto l982
					l1008:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ú') {
							goto l1009
						}
						position++
						goto l982
					l1009:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('û') {
							goto l1010
						}
						position++
						goto l982
					l1010:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ü') {
							goto l1011
						}
						position++
						goto l982
					l1011:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ý') {
							goto l1012
						}
						position++
						goto l982
					l1012:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ÿ') {
							goto l1013
						}
						position++
						goto l982
					l1013:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ā') {
							goto l1014
						}
						position++
						goto l982
					l1014:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ă') {
							goto l1015
						}
						position++
						goto l982
					l1015:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ą') {
							goto l1016
						}
						position++
						goto l982
					l1016:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ć') {
							goto l1017
						}
						position++
						goto l982
					l1017:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ĉ') {
							goto l1018
						}
						position++
						goto l982
					l1018:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('č') {
							goto l1019
						}
						position++
						goto l982
					l1019:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ď') {
							goto l1020
						}
						position++
						goto l982
					l1020:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('đ') {
							goto l1021
						}
						position++
						goto l982
					l1021:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ē') {
							goto l1022
						}
						position++
						goto l982
					l1022:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ĕ') {
							goto l1023
						}
						position++
						goto l982
					l1023:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ė') {
							goto l1024
						}
						position++
						goto l982
					l1024:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ę') {
							goto l1025
						}
						position++
						goto l982
					l1025:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ě') {
							goto l1026
						}
						position++
						goto l982
					l1026:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ğ') {
							goto l1027
						}
						position++
						goto l982
					l1027:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ī') {
							goto l1028
						}
						position++
						goto l982
					l1028:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ĭ') {
							goto l1029
						}
						position++
						goto l982
					l1029:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('İ') {
							goto l1030
						}
						position++
						goto l982
					l1030:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ı') {
							goto l1031
						}
						position++
						goto l982
					l1031:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ĺ') {
							goto l1032
						}
						position++
						goto l982
					l1032:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ľ') {
							goto l1033
						}
						position++
						goto l982
					l1033:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ł') {
							goto l1034
						}
						position++
						goto l982
					l1034:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ń') {
							goto l1035
						}
						position++
						goto l982
					l1035:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ņ') {
							goto l1036
						}
						position++
						goto l982
					l1036:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ň') {
							goto l1037
						}
						position++
						goto l982
					l1037:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ŏ') {
							goto l1038
						}
						position++
						goto l982
					l1038:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ő') {
							goto l1039
						}
						position++
						goto l982
					l1039:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('œ') {
							goto l1040
						}
						position++
						goto l982
					l1040:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ŕ') {
							goto l1041
						}
						position++
						goto l982
					l1041:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ř') {
							goto l1042
						}
						position++
						goto l982
					l1042:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ś') {
							goto l1043
						}
						position++
						goto l982
					l1043:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ş') {
							goto l1044
						}
						position++
						goto l982
					l1044:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('š') {
							goto l1045
						}
						position++
						goto l982
					l1045:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ţ') {
							goto l1046
						}
						position++
						goto l982
					l1046:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ť') {
							goto l1047
						}
						position++
						goto l982
					l1047:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ũ') {
							goto l1048
						}
						position++
						goto l982
					l1048:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ū') {
							goto l1049
						}
						position++
						goto l982
					l1049:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ŭ') {
							goto l1050
						}
						position++
						goto l982
					l1050:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ů') {
							goto l1051
						}
						position++
						goto l982
					l1051:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ű') {
							goto l1052
						}
						position++
						goto l982
					l1052:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ź') {
							goto l1053
						}
						position++
						goto l982
					l1053:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ż') {
							goto l1054
						}
						position++
						goto l982
					l1054:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ž') {
							goto l1055
						}
						position++
						goto l982
					l1055:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ſ') {
							goto l1056
						}
						position++
						goto l982
					l1056:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ǎ') {
							goto l1057
						}
						position++
						goto l982
					l1057:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ǔ') {
							goto l1058
						}
						position++
						goto l982
					l1058:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ǧ') {
							goto l1059
						}
						position++
						goto l982
					l1059:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ș') {
							goto l1060
						}
						position++
						goto l982
					l1060:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ț') {
							goto l1061
						}
						position++
						goto l982
					l1061:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ȳ') {
							goto l1062
						}
						position++
						goto l982
					l1062:
						position, tokenIndex = position982, tokenIndex982
						if buffer[position] != rune('ß') {
							goto l976
						}
						position++
					}
				l982:
				}
			l978:
				add(ruleAuthorLowerChar, position977)
			}
			return true
		l976:
			position, tokenIndex = position976, tokenIndex976
			return false
		},
		/* 124 Year <- <(YearRange / YearApprox / YearWithParens / YearWithPage / YearWithDot / YearWithChar / YearNum)> */
		func() bool {
			position1063, tokenIndex1063 := position, tokenIndex
			{
				position1064 := position
				{
					position1065, tokenIndex1065 := position, tokenIndex
					if !_rules[ruleYearRange]() {
						goto l1066
					}
					goto l1065
				l1066:
					position, tokenIndex = position1065, tokenIndex1065
					if !_rules[ruleYearApprox]() {
						goto l1067
					}
					goto l1065
				l1067:
					position, tokenIndex = position1065, tokenIndex1065
					if !_rules[ruleYearWithParens]() {
						goto l1068
					}
					goto l1065
				l1068:
					position, tokenIndex = position1065, tokenIndex1065
					if !_rules[ruleYearWithPage]() {
						goto l1069
					}
					goto l1065
				l1069:
					position, tokenIndex = position1065, tokenIndex1065
					if !_rules[ruleYearWithDot]() {
						goto l1070
					}
					goto l1065
				l1070:
					position, tokenIndex = position1065, tokenIndex1065
					if !_rules[ruleYearWithChar]() {
						goto l1071
					}
					goto l1065
				l1071:
					position, tokenIndex = position1065, tokenIndex1065
					if !_rules[ruleYearNum]() {
						goto l1063
					}
				}
			l1065:
				add(ruleYear, position1064)
			}
			return true
		l1063:
			position, tokenIndex = position1063, tokenIndex1063
			return false
		},
		/* 125 YearRange <- <(YearNum (Dash / Slash) (Nums+ ('a' / 'b' / 'c' / 'd' / 'e' / 'f' / 'g' / 'h' / 'i' / 'j' / 'k' / 'l' / 'm' / 'n' / 'o' / 'p' / 'q' / 'r' / 's' / 't' / 'u' / 'v' / 'w' / 'x' / 'y' / 'z' / '?')*))> */
		func() bool {
			position1072, tokenIndex1072 := position, tokenIndex
			{
				position1073 := position
				if !_rules[ruleYearNum]() {
					goto l1072
				}
				{
					position1074, tokenIndex1074 := position, tokenIndex
					if !_rules[ruleDash]() {
						goto l1075
					}
					goto l1074
				l1075:
					position, tokenIndex = position1074, tokenIndex1074
					if !_rules[ruleSlash]() {
						goto l1072
					}
				}
			l1074:
				if !_rules[ruleNums]() {
					goto l1072
				}
			l1076:
				{
					position1077, tokenIndex1077 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1077
					}
					goto l1076
				l1077:
					position, tokenIndex = position1077, tokenIndex1077
				}
			l1078:
				{
					position1079, tokenIndex1079 := position, tokenIndex
					{
						position1080, tokenIndex1080 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l1081
						}
						position++
						goto l1080
					l1081:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('b') {
							goto l1082
						}
						position++
						goto l1080
					l1082:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('c') {
							goto l1083
						}
						position++
						goto l1080
					l1083:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('d') {
							goto l1084
						}
						position++
						goto l1080
					l1084:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('e') {
							goto l1085
						}
						position++
						goto l1080
					l1085:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('f') {
							goto l1086
						}
						position++
						goto l1080
					l1086:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('g') {
							goto l1087
						}
						position++
						goto l1080
					l1087:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('h') {
							goto l1088
						}
						position++
						goto l1080
					l1088:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('i') {
							goto l1089
						}
						position++
						goto l1080
					l1089:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('j') {
							goto l1090
						}
						position++
						goto l1080
					l1090:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('k') {
							goto l1091
						}
						position++
						goto l1080
					l1091:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('l') {
							goto l1092
						}
						position++
						goto l1080
					l1092:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('m') {
							goto l1093
						}
						position++
						goto l1080
					l1093:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('n') {
							goto l1094
						}
						position++
						goto l1080
					l1094:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('o') {
							goto l1095
						}
						position++
						goto l1080
					l1095:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('p') {
							goto l1096
						}
						position++
						goto l1080
					l1096:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('q') {
							goto l1097
						}
						position++
						goto l1080
					l1097:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('r') {
							goto l1098
						}
						position++
						goto l1080
					l1098:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('s') {
							goto l1099
						}
						position++
						goto l1080
					l1099:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('t') {
							goto l1100
						}
						position++
						goto l1080
					l1100:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('u') {
							goto l1101
						}
						position++
						goto l1080
					l1101:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('v') {
							goto l1102
						}
						position++
						goto l1080
					l1102:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('w') {
							goto l1103
						}
						position++
						goto l1080
					l1103:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('x') {
							goto l1104
						}
						position++
						goto l1080
					l1104:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('y') {
							goto l1105
						}
						position++
						goto l1080
					l1105:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('z') {
							goto l1106
						}
						position++
						goto l1080
					l1106:
						position, tokenIndex = position1080, tokenIndex1080
						if buffer[position] != rune('?') {
							goto l1079
						}
						position++
					}
				l1080:
					goto l1078
				l1079:
					position, tokenIndex = position1079, tokenIndex1079
				}
				add(ruleYearRange, position1073)
			}
			return true
		l1072:
			position, tokenIndex = position1072, tokenIndex1072
			return false
		},
		/* 126 YearWithDot <- <(YearNum '.')> */
		func() bool {
			position1107, tokenIndex1107 := position, tokenIndex
			{
				position1108 := position
				if !_rules[ruleYearNum]() {
					goto l1107
				}
				if buffer[position] != rune('.') {
					goto l1107
				}
				position++
				add(ruleYearWithDot, position1108)
			}
			return true
		l1107:
			position, tokenIndex = position1107, tokenIndex1107
			return false
		},
		/* 127 YearApprox <- <('[' _? YearNum _? ']')> */
		func() bool {
			position1109, tokenIndex1109 := position, tokenIndex
			{
				position1110 := position
				if buffer[position] != rune('[') {
					goto l1109
				}
				position++
				{
					position1111, tokenIndex1111 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1111
					}
					goto l1112
				l1111:
					position, tokenIndex = position1111, tokenIndex1111
				}
			l1112:
				if !_rules[ruleYearNum]() {
					goto l1109
				}
				{
					position1113, tokenIndex1113 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1113
					}
					goto l1114
				l1113:
					position, tokenIndex = position1113, tokenIndex1113
				}
			l1114:
				if buffer[position] != rune(']') {
					goto l1109
				}
				position++
				add(ruleYearApprox, position1110)
			}
			return true
		l1109:
			position, tokenIndex = position1109, tokenIndex1109
			return false
		},
		/* 128 YearWithPage <- <((YearWithChar / YearNum) _? ':' _? Nums+)> */
		func() bool {
			position1115, tokenIndex1115 := position, tokenIndex
			{
				position1116 := position
				{
					position1117, tokenIndex1117 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1118
					}
					goto l1117
				l1118:
					position, tokenIndex = position1117, tokenIndex1117
					if !_rules[ruleYearNum]() {
						goto l1115
					}
				}
			l1117:
				{
					position1119, tokenIndex1119 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1119
					}
					goto l1120
				l1119:
					position, tokenIndex = position1119, tokenIndex1119
				}
			l1120:
				if buffer[position] != rune(':') {
					goto l1115
				}
				position++
				{
					position1121, tokenIndex1121 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1121
					}
					goto l1122
				l1121:
					position, tokenIndex = position1121, tokenIndex1121
				}
			l1122:
				if !_rules[ruleNums]() {
					goto l1115
				}
			l1123:
				{
					position1124, tokenIndex1124 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1124
					}
					goto l1123
				l1124:
					position, tokenIndex = position1124, tokenIndex1124
				}
				add(ruleYearWithPage, position1116)
			}
			return true
		l1115:
			position, tokenIndex = position1115, tokenIndex1115
			return false
		},
		/* 129 YearWithParens <- <('(' (YearWithChar / YearNum) ')')> */
		func() bool {
			position1125, tokenIndex1125 := position, tokenIndex
			{
				position1126 := position
				if buffer[position] != rune('(') {
					goto l1125
				}
				position++
				{
					position1127, tokenIndex1127 := position, tokenIndex
					if !_rules[ruleYearWithChar]() {
						goto l1128
					}
					goto l1127
				l1128:
					position, tokenIndex = position1127, tokenIndex1127
					if !_rules[ruleYearNum]() {
						goto l1125
					}
				}
			l1127:
				if buffer[position] != rune(')') {
					goto l1125
				}
				position++
				add(ruleYearWithParens, position1126)
			}
			return true
		l1125:
			position, tokenIndex = position1125, tokenIndex1125
			return false
		},
		/* 130 YearWithChar <- <(YearNum LowerASCII)> */
		func() bool {
			position1129, tokenIndex1129 := position, tokenIndex
			{
				position1130 := position
				if !_rules[ruleYearNum]() {
					goto l1129
				}
				if !_rules[ruleLowerASCII]() {
					goto l1129
				}
				add(ruleYearWithChar, position1130)
			}
			return true
		l1129:
			position, tokenIndex = position1129, tokenIndex1129
			return false
		},
		/* 131 YearNum <- <(('1' / '2') ('0' / '7' / '8' / '9') Nums (Nums / '?') '?'*)> */
		func() bool {
			position1131, tokenIndex1131 := position, tokenIndex
			{
				position1132 := position
				{
					position1133, tokenIndex1133 := position, tokenIndex
					if buffer[position] != rune('1') {
						goto l1134
					}
					position++
					goto l1133
				l1134:
					position, tokenIndex = position1133, tokenIndex1133
					if buffer[position] != rune('2') {
						goto l1131
					}
					position++
				}
			l1133:
				{
					position1135, tokenIndex1135 := position, tokenIndex
					if buffer[position] != rune('0') {
						goto l1136
					}
					position++
					goto l1135
				l1136:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('7') {
						goto l1137
					}
					position++
					goto l1135
				l1137:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('8') {
						goto l1138
					}
					position++
					goto l1135
				l1138:
					position, tokenIndex = position1135, tokenIndex1135
					if buffer[position] != rune('9') {
						goto l1131
					}
					position++
				}
			l1135:
				if !_rules[ruleNums]() {
					goto l1131
				}
				{
					position1139, tokenIndex1139 := position, tokenIndex
					if !_rules[ruleNums]() {
						goto l1140
					}
					goto l1139
				l1140:
					position, tokenIndex = position1139, tokenIndex1139
					if buffer[position] != rune('?') {
						goto l1131
					}
					position++
				}
			l1139:
			l1141:
				{
					position1142, tokenIndex1142 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l1142
					}
					position++
					goto l1141
				l1142:
					position, tokenIndex = position1142, tokenIndex1142
				}
				add(ruleYearNum, position1132)
			}
			return true
		l1131:
			position, tokenIndex = position1131, tokenIndex1131
			return false
		},
		/* 132 NameUpperChar <- <(UpperChar / UpperCharExtended)> */
		func() bool {
			position1143, tokenIndex1143 := position, tokenIndex
			{
				position1144 := position
				{
					position1145, tokenIndex1145 := position, tokenIndex
					if !_rules[ruleUpperChar]() {
						goto l1146
					}
					goto l1145
				l1146:
					position, tokenIndex = position1145, tokenIndex1145
					if !_rules[ruleUpperCharExtended]() {
						goto l1143
					}
				}
			l1145:
				add(ruleNameUpperChar, position1144)
			}
			return true
		l1143:
			position, tokenIndex = position1143, tokenIndex1143
			return false
		},
		/* 133 UpperCharExtended <- <('Æ' / 'Œ' / 'Ö')> */
		func() bool {
			position1147, tokenIndex1147 := position, tokenIndex
			{
				position1148 := position
				{
					position1149, tokenIndex1149 := position, tokenIndex
					if buffer[position] != rune('Æ') {
						goto l1150
					}
					position++
					goto l1149
				l1150:
					position, tokenIndex = position1149, tokenIndex1149
					if buffer[position] != rune('Œ') {
						goto l1151
					}
					position++
					goto l1149
				l1151:
					position, tokenIndex = position1149, tokenIndex1149
					if buffer[position] != rune('Ö') {
						goto l1147
					}
					position++
				}
			l1149:
				add(ruleUpperCharExtended, position1148)
			}
			return true
		l1147:
			position, tokenIndex = position1147, tokenIndex1147
			return false
		},
		/* 134 UpperChar <- <UpperASCII> */
		func() bool {
			position1152, tokenIndex1152 := position, tokenIndex
			{
				position1153 := position
				if !_rules[ruleUpperASCII]() {
					goto l1152
				}
				add(ruleUpperChar, position1153)
			}
			return true
		l1152:
			position, tokenIndex = position1152, tokenIndex1152
			return false
		},
		/* 135 NameLowerChar <- <(LowerChar / LowerCharExtended / MiscodedChar)> */
		func() bool {
			position1154, tokenIndex1154 := position, tokenIndex
			{
				position1155 := position
				{
					position1156, tokenIndex1156 := position, tokenIndex
					if !_rules[ruleLowerChar]() {
						goto l1157
					}
					goto l1156
				l1157:
					position, tokenIndex = position1156, tokenIndex1156
					if !_rules[ruleLowerCharExtended]() {
						goto l1158
					}
					goto l1156
				l1158:
					position, tokenIndex = position1156, tokenIndex1156
					if !_rules[ruleMiscodedChar]() {
						goto l1154
					}
				}
			l1156:
				add(ruleNameLowerChar, position1155)
			}
			return true
		l1154:
			position, tokenIndex = position1154, tokenIndex1154
			return false
		},
		/* 136 MiscodedChar <- <'�'> */
		func() bool {
			position1159, tokenIndex1159 := position, tokenIndex
			{
				position1160 := position
				if buffer[position] != rune('�') {
					goto l1159
				}
				position++
				add(ruleMiscodedChar, position1160)
			}
			return true
		l1159:
			position, tokenIndex = position1159, tokenIndex1159
			return false
		},
		/* 137 LowerCharExtended <- <('æ' / 'œ' / 'à' / 'â' / 'å' / 'ã' / 'ä' / 'á' / 'ç' / 'č' / 'é' / 'è' / 'ë' / 'í' / 'ì' / 'ï' / 'ň' / 'ñ' / 'ñ' / 'ó' / 'ò' / 'ô' / 'ø' / 'õ' / 'ö' / 'ú' / 'û' / 'ù' / 'ü' / 'ŕ' / 'ř' / 'ŗ' / 'ſ' / 'š' / 'š' / 'ş' / 'ß' / 'ž')> */
		func() bool {
			position1161, tokenIndex1161 := position, tokenIndex
			{
				position1162 := position
				{
					position1163, tokenIndex1163 := position, tokenIndex
					if buffer[position] != rune('æ') {
						goto l1164
					}
					position++
					goto l1163
				l1164:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('œ') {
						goto l1165
					}
					position++
					goto l1163
				l1165:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('à') {
						goto l1166
					}
					position++
					goto l1163
				l1166:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('â') {
						goto l1167
					}
					position++
					goto l1163
				l1167:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('å') {
						goto l1168
					}
					position++
					goto l1163
				l1168:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ã') {
						goto l1169
					}
					position++
					goto l1163
				l1169:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ä') {
						goto l1170
					}
					position++
					goto l1163
				l1170:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('á') {
						goto l1171
					}
					position++
					goto l1163
				l1171:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ç') {
						goto l1172
					}
					position++
					goto l1163
				l1172:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('č') {
						goto l1173
					}
					position++
					goto l1163
				l1173:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('é') {
						goto l1174
					}
					position++
					goto l1163
				l1174:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('è') {
						goto l1175
					}
					position++
					goto l1163
				l1175:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ë') {
						goto l1176
					}
					position++
					goto l1163
				l1176:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('í') {
						goto l1177
					}
					position++
					goto l1163
				l1177:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ì') {
						goto l1178
					}
					position++
					goto l1163
				l1178:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ï') {
						goto l1179
					}
					position++
					goto l1163
				l1179:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ň') {
						goto l1180
					}
					position++
					goto l1163
				l1180:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ñ') {
						goto l1181
					}
					position++
					goto l1163
				l1181:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ñ') {
						goto l1182
					}
					position++
					goto l1163
				l1182:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ó') {
						goto l1183
					}
					position++
					goto l1163
				l1183:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ò') {
						goto l1184
					}
					position++
					goto l1163
				l1184:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ô') {
						goto l1185
					}
					position++
					goto l1163
				l1185:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ø') {
						goto l1186
					}
					position++
					goto l1163
				l1186:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('õ') {
						goto l1187
					}
					position++
					goto l1163
				l1187:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ö') {
						goto l1188
					}
					position++
					goto l1163
				l1188:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ú') {
						goto l1189
					}
					position++
					goto l1163
				l1189:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('û') {
						goto l1190
					}
					position++
					goto l1163
				l1190:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ù') {
						goto l1191
					}
					position++
					goto l1163
				l1191:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ü') {
						goto l1192
					}
					position++
					goto l1163
				l1192:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ŕ') {
						goto l1193
					}
					position++
					goto l1163
				l1193:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ř') {
						goto l1194
					}
					position++
					goto l1163
				l1194:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ŗ') {
						goto l1195
					}
					position++
					goto l1163
				l1195:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ſ') {
						goto l1196
					}
					position++
					goto l1163
				l1196:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('š') {
						goto l1197
					}
					position++
					goto l1163
				l1197:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('š') {
						goto l1198
					}
					position++
					goto l1163
				l1198:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ş') {
						goto l1199
					}
					position++
					goto l1163
				l1199:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ß') {
						goto l1200
					}
					position++
					goto l1163
				l1200:
					position, tokenIndex = position1163, tokenIndex1163
					if buffer[position] != rune('ž') {
						goto l1161
					}
					position++
				}
			l1163:
				add(ruleLowerCharExtended, position1162)
			}
			return true
		l1161:
			position, tokenIndex = position1161, tokenIndex1161
			return false
		},
		/* 138 LowerChar <- <LowerASCII> */
		func() bool {
			position1201, tokenIndex1201 := position, tokenIndex
			{
				position1202 := position
				if !_rules[ruleLowerASCII]() {
					goto l1201
				}
				add(ruleLowerChar, position1202)
			}
			return true
		l1201:
			position, tokenIndex = position1201, tokenIndex1201
			return false
		},
		/* 139 SpaceCharEOI <- <(_ / !.)> */
		func() bool {
			position1203, tokenIndex1203 := position, tokenIndex
			{
				position1204 := position
				{
					position1205, tokenIndex1205 := position, tokenIndex
					if !_rules[rule_]() {
						goto l1206
					}
					goto l1205
				l1206:
					position, tokenIndex = position1205, tokenIndex1205
					{
						position1207, tokenIndex1207 := position, tokenIndex
						if !matchDot() {
							goto l1207
						}
						goto l1203
					l1207:
						position, tokenIndex = position1207, tokenIndex1207
					}
				}
			l1205:
				add(ruleSpaceCharEOI, position1204)
			}
			return true
		l1203:
			position, tokenIndex = position1203, tokenIndex1203
			return false
		},
		/* 140 Nums <- <[0-9]> */
		func() bool {
			position1208, tokenIndex1208 := position, tokenIndex
			{
				position1209 := position
				if c := buffer[position]; c < rune('0') || c > rune('9') {
					goto l1208
				}
				position++
				add(ruleNums, position1209)
			}
			return true
		l1208:
			position, tokenIndex = position1208, tokenIndex1208
			return false
		},
		/* 141 LowerGreek <- <[α-ω]> */
		func() bool {
			position1210, tokenIndex1210 := position, tokenIndex
			{
				position1211 := position
				if c := buffer[position]; c < rune('α') || c > rune('ω') {
					goto l1210
				}
				position++
				add(ruleLowerGreek, position1211)
			}
			return true
		l1210:
			position, tokenIndex = position1210, tokenIndex1210
			return false
		},
		/* 142 LowerASCII <- <[a-z]> */
		func() bool {
			position1212, tokenIndex1212 := position, tokenIndex
			{
				position1213 := position
				if c := buffer[position]; c < rune('a') || c > rune('z') {
					goto l1212
				}
				position++
				add(ruleLowerASCII, position1213)
			}
			return true
		l1212:
			position, tokenIndex = position1212, tokenIndex1212
			return false
		},
		/* 143 UpperASCII <- <[A-Z]> */
		func() bool {
			position1214, tokenIndex1214 := position, tokenIndex
			{
				position1215 := position
				if c := buffer[position]; c < rune('A') || c > rune('Z') {
					goto l1214
				}
				position++
				add(ruleUpperASCII, position1215)
			}
			return true
		l1214:
			position, tokenIndex = position1214, tokenIndex1214
			return false
		},
		/* 144 Apostrophe <- <(ApostrOther / ApostrASCII)> */
		func() bool {
			position1216, tokenIndex1216 := position, tokenIndex
			{
				position1217 := position
				{
					position1218, tokenIndex1218 := position, tokenIndex
					if !_rules[ruleApostrOther]() {
						goto l1219
					}
					goto l1218
				l1219:
					position, tokenIndex = position1218, tokenIndex1218
					if !_rules[ruleApostrASCII]() {
						goto l1216
					}
				}
			l1218:
				add(ruleApostrophe, position1217)
			}
			return true
		l1216:
			position, tokenIndex = position1216, tokenIndex1216
			return false
		},
		/* 145 ApostrASCII <- <'\''> */
		func() bool {
			position1220, tokenIndex1220 := position, tokenIndex
			{
				position1221 := position
				if buffer[position] != rune('\'') {
					goto l1220
				}
				position++
				add(ruleApostrASCII, position1221)
			}
			return true
		l1220:
			position, tokenIndex = position1220, tokenIndex1220
			return false
		},
		/* 146 ApostrOther <- <('‘' / '’' / '`' / '´')> */
		func() bool {
			position1222, tokenIndex1222 := position, tokenIndex
			{
				position1223 := position
				{
					position1224, tokenIndex1224 := position, tokenIndex
					if buffer[position] != rune('‘') {
						goto l1225
					}
					position++
					goto l1224
				l1225:
					position, tokenIndex = position1224, tokenIndex1224
					if buffer[position] != rune('’') {
						goto l1226
					}
					position++
					goto l1224
				l1226:
					position, tokenIndex = position1224, tokenIndex1224
					if buffer[position] != rune('`') {
						goto l1227
					}
					position++
					goto l1224
				l1227:
					position, tokenIndex = position1224, tokenIndex1224
					if buffer[position] != rune('´') {
						goto l1222
					}
					position++
				}
			l1224:
				add(ruleApostrOther, position1223)
			}
			return true
		l1222:
			position, tokenIndex = position1222, tokenIndex1222
			return false
		},
		/* 147 Dash <- <('-' / DashOther)> */
		func() bool {
			position1228, tokenIndex1228 := position, tokenIndex
			{
				position1229 := position
				{
					position1230, tokenIndex1230 := position, tokenIndex
					if buffer[position] != rune('-') {
						goto l1231
					}
					position++
					goto l1230
				l1231:
					position, tokenIndex = position1230, tokenIndex1230
					if !_rules[ruleDashOther]() {
						goto l1228
					}
				}
			l1230:
				add(ruleDash, position1229)
			}
			return true
		l1228:
			position, tokenIndex = position1228, tokenIndex1228
			return false
		},
		/* 148 DashOther <- <'‑'> */
		func() bool {
			position1232, tokenIndex1232 := position, tokenIndex
			{
				position1233 := position
				if buffer[position] != rune('‑') {
					goto l1232
				}
				position++
				add(ruleDashOther, position1233)
			}
			return true
		l1232:
			position, tokenIndex = position1232, tokenIndex1232
			return false
		},
		/* 149 Slash <- <'/'> */
		func() bool {
			position1234, tokenIndex1234 := position, tokenIndex
			{
				position1235 := position
				if buffer[position] != rune('/') {
					goto l1234
				}
				position++
				add(ruleSlash, position1235)
			}
			return true
		l1234:
			position, tokenIndex = position1234, tokenIndex1234
			return false
		},
		/* 150 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position1236, tokenIndex1236 := position, tokenIndex
			{
				position1237 := position
				{
					position1238, tokenIndex1238 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l1239
					}
					goto l1238
				l1239:
					position, tokenIndex = position1238, tokenIndex1238
					if !_rules[ruleSingleSpace]() {
						goto l1236
					}
				}
			l1238:
				add(rule_, position1237)
			}
			return true
		l1236:
			position, tokenIndex = position1236, tokenIndex1236
			return false
		},
		/* 151 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position1240, tokenIndex1240 := position, tokenIndex
			{
				position1241 := position
				if !_rules[ruleSingleSpace]() {
					goto l1240
				}
				if !_rules[ruleSingleSpace]() {
					goto l1240
				}
			l1242:
				{
					position1243, tokenIndex1243 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l1243
					}
					goto l1242
				l1243:
					position, tokenIndex = position1243, tokenIndex1243
				}
				add(ruleMultipleSpace, position1241)
			}
			return true
		l1240:
			position, tokenIndex = position1240, tokenIndex1240
			return false
		},
		/* 152 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position1244, tokenIndex1244 := position, tokenIndex
			{
				position1245 := position
				{
					position1246, tokenIndex1246 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l1247
					}
					position++
					goto l1246
				l1247:
					position, tokenIndex = position1246, tokenIndex1246
					if !_rules[ruleOtherSpace]() {
						goto l1244
					}
				}
			l1246:
				add(ruleSingleSpace, position1245)
			}
			return true
		l1244:
			position, tokenIndex = position1244, tokenIndex1244
			return false
		},
		/* 153 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position1248, tokenIndex1248 := position, tokenIndex
			{
				position1249 := position
				{
					position1250, tokenIndex1250 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l1251
					}
					position++
					goto l1250
				l1251:
					position, tokenIndex = position1250, tokenIndex1250
					if buffer[position] != rune('\u00a0') {
						goto l1252
					}
					position++
					goto l1250
				l1252:
					position, tokenIndex = position1250, tokenIndex1250
					if buffer[position] != rune('\t') {
						goto l1253
					}
					position++
					goto l1250
				l1253:
					position, tokenIndex = position1250, tokenIndex1250
					if buffer[position] != rune('\r') {
						goto l1254
					}
					position++
					goto l1250
				l1254:
					position, tokenIndex = position1250, tokenIndex1250
					if buffer[position] != rune('\n') {
						goto l1255
					}
					position++
					goto l1250
				l1255:
					position, tokenIndex = position1250, tokenIndex1250
					if buffer[position] != rune('\f') {
						goto l1256
					}
					position++
					goto l1250
				l1256:
					position, tokenIndex = position1250, tokenIndex1250
					if buffer[position] != rune('\v') {
						goto l1248
					}
					position++
				}
			l1250:
				add(ruleOtherSpace, position1249)
			}
			return true
		l1248:
			position, tokenIndex = position1248, tokenIndex1248
			return false
		},
		/* 154 END <- <!.> */
		func() bool {
			position1257, tokenIndex1257 := position, tokenIndex
			{
				position1258 := position
				{
					position1259, tokenIndex1259 := position, tokenIndex
					if !matchDot() {
						goto l1259
					}
					goto l1257
				l1259:
					position, tokenIndex = position1259, tokenIndex1259
				}
				add(ruleEND, position1258)
			}
			return true
		l1257:
			position, tokenIndex = position1257, tokenIndex1257
			return false
		},
	}
	p.rules = _rules
	return nil
}
