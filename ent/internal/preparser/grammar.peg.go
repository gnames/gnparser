package preparser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleString
	ruleHead
	ruleTail
	ruleWord
	ruleTailPhrase
	ruleTailLastWordJunk
	ruleTailPhrase4
	ruleTailPhrase3
	ruleTailStopWords
	ruleTailPhrase2
	ruleTailPhrase1
	ruleSpaceOrEnd
	ruleCommaSpace
	rule_
	ruleNotLetterOrEnd
	ruleNotLetter
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
	ruleAction0
)

var rul3s = [...]string{
	"Unknown",
	"String",
	"Head",
	"Tail",
	"Word",
	"TailPhrase",
	"TailLastWordJunk",
	"TailPhrase4",
	"TailPhrase3",
	"TailStopWords",
	"TailPhrase2",
	"TailPhrase1",
	"SpaceOrEnd",
	"CommaSpace",
	"_",
	"NotLetterOrEnd",
	"NotLetter",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
	"Action0",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type PreParser struct {
	PreString
	Buffer string
	buffer []rune
	rules  [22]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *PreParser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *PreParser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *PreParser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *PreParser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *PreParser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *PreParser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *PreParser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case ruleAction0:
			p.tailIndex = int(token.begin)

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*PreParser) error {
	return func(p *PreParser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*PreParser) error {
	return func(p *PreParser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *PreParser) Init(options ...func(*PreParser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 String <- <(_? ((Head Tail?) / (TailPhrase .*)) SpaceOrEnd)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				{
					position4, tokenIndex4 := position, tokenIndex
					if !_rules[ruleHead]() {
						goto l5
					}
					{
						position6, tokenIndex6 := position, tokenIndex
						if !_rules[ruleTail]() {
							goto l6
						}
						goto l7
					l6:
						position, tokenIndex = position6, tokenIndex6
					}
				l7:
					goto l4
				l5:
					position, tokenIndex = position4, tokenIndex4
					if !_rules[ruleTailPhrase]() {
						goto l0
					}
				l8:
					{
						position9, tokenIndex9 := position, tokenIndex
						if !matchDot() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position9, tokenIndex9
					}
				}
			l4:
				if !_rules[ruleSpaceOrEnd]() {
					goto l0
				}
				add(ruleString, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Head <- <(Word (CommaSpace Word)* &(Tail / SpaceOrEnd))> */
		func() bool {
			position10, tokenIndex10 := position, tokenIndex
			{
				position11 := position
				if !_rules[ruleWord]() {
					goto l10
				}
			l12:
				{
					position13, tokenIndex13 := position, tokenIndex
					if !_rules[ruleCommaSpace]() {
						goto l13
					}
					if !_rules[ruleWord]() {
						goto l13
					}
					goto l12
				l13:
					position, tokenIndex = position13, tokenIndex13
				}
				{
					position14, tokenIndex14 := position, tokenIndex
					{
						position15, tokenIndex15 := position, tokenIndex
						if !_rules[ruleTail]() {
							goto l16
						}
						goto l15
					l16:
						position, tokenIndex = position15, tokenIndex15
						if !_rules[ruleSpaceOrEnd]() {
							goto l10
						}
					}
				l15:
					position, tokenIndex = position14, tokenIndex14
				}
				add(ruleHead, position11)
			}
			return true
		l10:
			position, tokenIndex = position10, tokenIndex10
			return false
		},
		/* 2 Tail <- <(Action0 CommaSpace TailPhrase .*)> */
		func() bool {
			position17, tokenIndex17 := position, tokenIndex
			{
				position18 := position
				if !_rules[ruleAction0]() {
					goto l17
				}
				if !_rules[ruleCommaSpace]() {
					goto l17
				}
				if !_rules[ruleTailPhrase]() {
					goto l17
				}
			l19:
				{
					position20, tokenIndex20 := position, tokenIndex
					if !matchDot() {
						goto l20
					}
					goto l19
				l20:
					position, tokenIndex = position20, tokenIndex20
				}
				add(ruleTail, position18)
			}
			return true
		l17:
			position, tokenIndex = position17, tokenIndex17
			return false
		},
		/* 3 Word <- <((!TailPhrase (!(',' / ' ') .)+) / ',')> */
		func() bool {
			position21, tokenIndex21 := position, tokenIndex
			{
				position22 := position
				{
					position23, tokenIndex23 := position, tokenIndex
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleTailPhrase]() {
							goto l25
						}
						goto l24
					l25:
						position, tokenIndex = position25, tokenIndex25
					}
					{
						position28, tokenIndex28 := position, tokenIndex
						{
							position29, tokenIndex29 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l30
							}
							position++
							goto l29
						l30:
							position, tokenIndex = position29, tokenIndex29
							if buffer[position] != rune(' ') {
								goto l28
							}
							position++
						}
					l29:
						goto l24
					l28:
						position, tokenIndex = position28, tokenIndex28
					}
					if !matchDot() {
						goto l24
					}
				l26:
					{
						position27, tokenIndex27 := position, tokenIndex
						{
							position31, tokenIndex31 := position, tokenIndex
							{
								position32, tokenIndex32 := position, tokenIndex
								if buffer[position] != rune(',') {
									goto l33
								}
								position++
								goto l32
							l33:
								position, tokenIndex = position32, tokenIndex32
								if buffer[position] != rune(' ') {
									goto l31
								}
								position++
							}
						l32:
							goto l27
						l31:
							position, tokenIndex = position31, tokenIndex31
						}
						if !matchDot() {
							goto l27
						}
						goto l26
					l27:
						position, tokenIndex = position27, tokenIndex27
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if buffer[position] != rune(',') {
						goto l21
					}
					position++
				}
			l23:
				add(ruleWord, position22)
			}
			return true
		l21:
			position, tokenIndex = position21, tokenIndex21
			return false
		},
		/* 4 TailPhrase <- <(TailLastWordJunk / TailPhrase4 / TailPhrase3 / TailStopWords / TailPhrase2 / TailPhrase1)> */
		func() bool {
			position34, tokenIndex34 := position, tokenIndex
			{
				position35 := position
				{
					position36, tokenIndex36 := position, tokenIndex
					if !_rules[ruleTailLastWordJunk]() {
						goto l37
					}
					goto l36
				l37:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase4]() {
						goto l38
					}
					goto l36
				l38:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase3]() {
						goto l39
					}
					goto l36
				l39:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailStopWords]() {
						goto l40
					}
					goto l36
				l40:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase2]() {
						goto l41
					}
					goto l36
				l41:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase1]() {
						goto l34
					}
				}
			l36:
				add(ruleTailPhrase, position35)
			}
			return true
		l34:
			position, tokenIndex = position34, tokenIndex34
			return false
		},
		/* 5 TailLastWordJunk <- <(((((('v' / 'V') ('a' / 'A') ('r' / 'R')) / (('i' / 'I') ('n' / 'N') ('e' / 'E') ('d' / 'D')) / (('s' / 'S') ('s' / 'S') ('p' / 'P')) / (('s' / 'S') ('u' / 'U') ('b' / 'B') ('s' / 'S') ('p' / 'P')) / (('s' / 'S') ('u' / 'U') ('b' / 'B') ('g' / 'G') ('e' / 'E') ('n' / 'N'))) '.'?) / (('s' / 'S') ('e' / 'E') ('n' / 'N') ('s' / 'S') ('u' / 'U')) / (('n' / 'N') ('e' / 'E') ('w' / 'W')) / (('n' / 'N') ('o' / 'O') ('n' / 'N')) / (('n' / 'N') ('e' / 'E') ('c' / 'C')) / (('h' / 'H') ('y' / 'Y') ('b' / 'B') ('r' / 'R') ('i' / 'I') ('d' / 'D')) / (('v' / 'V') ('o' / 'O') ('n' / 'N')) / ('P' '.' _? ('P' '.')) / (('m' / 'M') ('s' / 'S')) / ('C' 'F')) '?'? &SpaceOrEnd)> */
		func() bool {
			position42, tokenIndex42 := position, tokenIndex
			{
				position43 := position
				{
					position44, tokenIndex44 := position, tokenIndex
					{
						position46, tokenIndex46 := position, tokenIndex
						{
							position48, tokenIndex48 := position, tokenIndex
							if buffer[position] != rune('v') {
								goto l49
							}
							position++
							goto l48
						l49:
							position, tokenIndex = position48, tokenIndex48
							if buffer[position] != rune('V') {
								goto l47
							}
							position++
						}
					l48:
						{
							position50, tokenIndex50 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l51
							}
							position++
							goto l50
						l51:
							position, tokenIndex = position50, tokenIndex50
							if buffer[position] != rune('A') {
								goto l47
							}
							position++
						}
					l50:
						{
							position52, tokenIndex52 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l53
							}
							position++
							goto l52
						l53:
							position, tokenIndex = position52, tokenIndex52
							if buffer[position] != rune('R') {
								goto l47
							}
							position++
						}
					l52:
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						{
							position55, tokenIndex55 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l56
							}
							position++
							goto l55
						l56:
							position, tokenIndex = position55, tokenIndex55
							if buffer[position] != rune('I') {
								goto l54
							}
							position++
						}
					l55:
						{
							position57, tokenIndex57 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l58
							}
							position++
							goto l57
						l58:
							position, tokenIndex = position57, tokenIndex57
							if buffer[position] != rune('N') {
								goto l54
							}
							position++
						}
					l57:
						{
							position59, tokenIndex59 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l60
							}
							position++
							goto l59
						l60:
							position, tokenIndex = position59, tokenIndex59
							if buffer[position] != rune('E') {
								goto l54
							}
							position++
						}
					l59:
						{
							position61, tokenIndex61 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l62
							}
							position++
							goto l61
						l62:
							position, tokenIndex = position61, tokenIndex61
							if buffer[position] != rune('D') {
								goto l54
							}
							position++
						}
					l61:
						goto l46
					l54:
						position, tokenIndex = position46, tokenIndex46
						{
							position64, tokenIndex64 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l65
							}
							position++
							goto l64
						l65:
							position, tokenIndex = position64, tokenIndex64
							if buffer[position] != rune('S') {
								goto l63
							}
							position++
						}
					l64:
						{
							position66, tokenIndex66 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l67
							}
							position++
							goto l66
						l67:
							position, tokenIndex = position66, tokenIndex66
							if buffer[position] != rune('S') {
								goto l63
							}
							position++
						}
					l66:
						{
							position68, tokenIndex68 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l69
							}
							position++
							goto l68
						l69:
							position, tokenIndex = position68, tokenIndex68
							if buffer[position] != rune('P') {
								goto l63
							}
							position++
						}
					l68:
						goto l46
					l63:
						position, tokenIndex = position46, tokenIndex46
						{
							position71, tokenIndex71 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l72
							}
							position++
							goto l71
						l72:
							position, tokenIndex = position71, tokenIndex71
							if buffer[position] != rune('S') {
								goto l70
							}
							position++
						}
					l71:
						{
							position73, tokenIndex73 := position, tokenIndex
							if buffer[position] != rune('u') {
								goto l74
							}
							position++
							goto l73
						l74:
							position, tokenIndex = position73, tokenIndex73
							if buffer[position] != rune('U') {
								goto l70
							}
							position++
						}
					l73:
						{
							position75, tokenIndex75 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l76
							}
							position++
							goto l75
						l76:
							position, tokenIndex = position75, tokenIndex75
							if buffer[position] != rune('B') {
								goto l70
							}
							position++
						}
					l75:
						{
							position77, tokenIndex77 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l78
							}
							position++
							goto l77
						l78:
							position, tokenIndex = position77, tokenIndex77
							if buffer[position] != rune('S') {
								goto l70
							}
							position++
						}
					l77:
						{
							position79, tokenIndex79 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l80
							}
							position++
							goto l79
						l80:
							position, tokenIndex = position79, tokenIndex79
							if buffer[position] != rune('P') {
								goto l70
							}
							position++
						}
					l79:
						goto l46
					l70:
						position, tokenIndex = position46, tokenIndex46
						{
							position81, tokenIndex81 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l82
							}
							position++
							goto l81
						l82:
							position, tokenIndex = position81, tokenIndex81
							if buffer[position] != rune('S') {
								goto l45
							}
							position++
						}
					l81:
						{
							position83, tokenIndex83 := position, tokenIndex
							if buffer[position] != rune('u') {
								goto l84
							}
							position++
							goto l83
						l84:
							position, tokenIndex = position83, tokenIndex83
							if buffer[position] != rune('U') {
								goto l45
							}
							position++
						}
					l83:
						{
							position85, tokenIndex85 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l86
							}
							position++
							goto l85
						l86:
							position, tokenIndex = position85, tokenIndex85
							if buffer[position] != rune('B') {
								goto l45
							}
							position++
						}
					l85:
						{
							position87, tokenIndex87 := position, tokenIndex
							if buffer[position] != rune('g') {
								goto l88
							}
							position++
							goto l87
						l88:
							position, tokenIndex = position87, tokenIndex87
							if buffer[position] != rune('G') {
								goto l45
							}
							position++
						}
					l87:
						{
							position89, tokenIndex89 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l90
							}
							position++
							goto l89
						l90:
							position, tokenIndex = position89, tokenIndex89
							if buffer[position] != rune('E') {
								goto l45
							}
							position++
						}
					l89:
						{
							position91, tokenIndex91 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l92
							}
							position++
							goto l91
						l92:
							position, tokenIndex = position91, tokenIndex91
							if buffer[position] != rune('N') {
								goto l45
							}
							position++
						}
					l91:
					}
				l46:
					{
						position93, tokenIndex93 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l93
						}
						position++
						goto l94
					l93:
						position, tokenIndex = position93, tokenIndex93
					}
				l94:
					goto l44
				l45:
					position, tokenIndex = position44, tokenIndex44
					{
						position96, tokenIndex96 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l97
						}
						position++
						goto l96
					l97:
						position, tokenIndex = position96, tokenIndex96
						if buffer[position] != rune('S') {
							goto l95
						}
						position++
					}
				l96:
					{
						position98, tokenIndex98 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l99
						}
						position++
						goto l98
					l99:
						position, tokenIndex = position98, tokenIndex98
						if buffer[position] != rune('E') {
							goto l95
						}
						position++
					}
				l98:
					{
						position100, tokenIndex100 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l101
						}
						position++
						goto l100
					l101:
						position, tokenIndex = position100, tokenIndex100
						if buffer[position] != rune('N') {
							goto l95
						}
						position++
					}
				l100:
					{
						position102, tokenIndex102 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l103
						}
						position++
						goto l102
					l103:
						position, tokenIndex = position102, tokenIndex102
						if buffer[position] != rune('S') {
							goto l95
						}
						position++
					}
				l102:
					{
						position104, tokenIndex104 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l105
						}
						position++
						goto l104
					l105:
						position, tokenIndex = position104, tokenIndex104
						if buffer[position] != rune('U') {
							goto l95
						}
						position++
					}
				l104:
					goto l44
				l95:
					position, tokenIndex = position44, tokenIndex44
					{
						position107, tokenIndex107 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l108
						}
						position++
						goto l107
					l108:
						position, tokenIndex = position107, tokenIndex107
						if buffer[position] != rune('N') {
							goto l106
						}
						position++
					}
				l107:
					{
						position109, tokenIndex109 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l110
						}
						position++
						goto l109
					l110:
						position, tokenIndex = position109, tokenIndex109
						if buffer[position] != rune('E') {
							goto l106
						}
						position++
					}
				l109:
					{
						position111, tokenIndex111 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l112
						}
						position++
						goto l111
					l112:
						position, tokenIndex = position111, tokenIndex111
						if buffer[position] != rune('W') {
							goto l106
						}
						position++
					}
				l111:
					goto l44
				l106:
					position, tokenIndex = position44, tokenIndex44
					{
						position114, tokenIndex114 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l115
						}
						position++
						goto l114
					l115:
						position, tokenIndex = position114, tokenIndex114
						if buffer[position] != rune('N') {
							goto l113
						}
						position++
					}
				l114:
					{
						position116, tokenIndex116 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l117
						}
						position++
						goto l116
					l117:
						position, tokenIndex = position116, tokenIndex116
						if buffer[position] != rune('O') {
							goto l113
						}
						position++
					}
				l116:
					{
						position118, tokenIndex118 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l119
						}
						position++
						goto l118
					l119:
						position, tokenIndex = position118, tokenIndex118
						if buffer[position] != rune('N') {
							goto l113
						}
						position++
					}
				l118:
					goto l44
				l113:
					position, tokenIndex = position44, tokenIndex44
					{
						position121, tokenIndex121 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l122
						}
						position++
						goto l121
					l122:
						position, tokenIndex = position121, tokenIndex121
						if buffer[position] != rune('N') {
							goto l120
						}
						position++
					}
				l121:
					{
						position123, tokenIndex123 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l124
						}
						position++
						goto l123
					l124:
						position, tokenIndex = position123, tokenIndex123
						if buffer[position] != rune('E') {
							goto l120
						}
						position++
					}
				l123:
					{
						position125, tokenIndex125 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l126
						}
						position++
						goto l125
					l126:
						position, tokenIndex = position125, tokenIndex125
						if buffer[position] != rune('C') {
							goto l120
						}
						position++
					}
				l125:
					goto l44
				l120:
					position, tokenIndex = position44, tokenIndex44
					{
						position128, tokenIndex128 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l129
						}
						position++
						goto l128
					l129:
						position, tokenIndex = position128, tokenIndex128
						if buffer[position] != rune('H') {
							goto l127
						}
						position++
					}
				l128:
					{
						position130, tokenIndex130 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l131
						}
						position++
						goto l130
					l131:
						position, tokenIndex = position130, tokenIndex130
						if buffer[position] != rune('Y') {
							goto l127
						}
						position++
					}
				l130:
					{
						position132, tokenIndex132 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l133
						}
						position++
						goto l132
					l133:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('B') {
							goto l127
						}
						position++
					}
				l132:
					{
						position134, tokenIndex134 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l135
						}
						position++
						goto l134
					l135:
						position, tokenIndex = position134, tokenIndex134
						if buffer[position] != rune('R') {
							goto l127
						}
						position++
					}
				l134:
					{
						position136, tokenIndex136 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l137
						}
						position++
						goto l136
					l137:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('I') {
							goto l127
						}
						position++
					}
				l136:
					{
						position138, tokenIndex138 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l139
						}
						position++
						goto l138
					l139:
						position, tokenIndex = position138, tokenIndex138
						if buffer[position] != rune('D') {
							goto l127
						}
						position++
					}
				l138:
					goto l44
				l127:
					position, tokenIndex = position44, tokenIndex44
					{
						position141, tokenIndex141 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l142
						}
						position++
						goto l141
					l142:
						position, tokenIndex = position141, tokenIndex141
						if buffer[position] != rune('V') {
							goto l140
						}
						position++
					}
				l141:
					{
						position143, tokenIndex143 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l144
						}
						position++
						goto l143
					l144:
						position, tokenIndex = position143, tokenIndex143
						if buffer[position] != rune('O') {
							goto l140
						}
						position++
					}
				l143:
					{
						position145, tokenIndex145 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l146
						}
						position++
						goto l145
					l146:
						position, tokenIndex = position145, tokenIndex145
						if buffer[position] != rune('N') {
							goto l140
						}
						position++
					}
				l145:
					goto l44
				l140:
					position, tokenIndex = position44, tokenIndex44
					if buffer[position] != rune('P') {
						goto l147
					}
					position++
					if buffer[position] != rune('.') {
						goto l147
					}
					position++
					{
						position148, tokenIndex148 := position, tokenIndex
						if !_rules[rule_]() {
							goto l148
						}
						goto l149
					l148:
						position, tokenIndex = position148, tokenIndex148
					}
				l149:
					if buffer[position] != rune('P') {
						goto l147
					}
					position++
					if buffer[position] != rune('.') {
						goto l147
					}
					position++
					goto l44
				l147:
					position, tokenIndex = position44, tokenIndex44
					{
						position151, tokenIndex151 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l152
						}
						position++
						goto l151
					l152:
						position, tokenIndex = position151, tokenIndex151
						if buffer[position] != rune('M') {
							goto l150
						}
						position++
					}
				l151:
					{
						position153, tokenIndex153 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l154
						}
						position++
						goto l153
					l154:
						position, tokenIndex = position153, tokenIndex153
						if buffer[position] != rune('S') {
							goto l150
						}
						position++
					}
				l153:
					goto l44
				l150:
					position, tokenIndex = position44, tokenIndex44
					if buffer[position] != rune('C') {
						goto l42
					}
					position++
					if buffer[position] != rune('F') {
						goto l42
					}
					position++
				}
			l44:
				{
					position155, tokenIndex155 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l155
					}
					position++
					goto l156
				l155:
					position, tokenIndex = position155, tokenIndex155
				}
			l156:
				{
					position157, tokenIndex157 := position, tokenIndex
					if !_rules[ruleSpaceOrEnd]() {
						goto l42
					}
					position, tokenIndex = position157, tokenIndex157
				}
				add(ruleTailLastWordJunk, position43)
			}
			return true
		l42:
			position, tokenIndex = position42, tokenIndex42
			return false
		},
		/* 6 TailPhrase4 <- <((((('p' / 'P') ('r' / 'R') ('o' / 'O') _ (('p' / 'P') ('a' / 'A') ('r' / 'R') ('t' / 'T') ('e' / 'E'))) / (('n' / 'N') ('o' / 'O') ('m' / 'M') ('e' / 'E') ('n' / 'N'))) &NotLetterOrEnd) / ('p' '.' _? ('p' '.')) / (('n' / 'N') ('o' / 'O') ('m' / 'M') '.') / (('c' / 'C') ('o' / 'O') ('m' / 'M') ('b' / 'B') '.'))> */
		func() bool {
			position158, tokenIndex158 := position, tokenIndex
			{
				position159 := position
				{
					position160, tokenIndex160 := position, tokenIndex
					{
						position162, tokenIndex162 := position, tokenIndex
						{
							position164, tokenIndex164 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l165
							}
							position++
							goto l164
						l165:
							position, tokenIndex = position164, tokenIndex164
							if buffer[position] != rune('P') {
								goto l163
							}
							position++
						}
					l164:
						{
							position166, tokenIndex166 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l167
							}
							position++
							goto l166
						l167:
							position, tokenIndex = position166, tokenIndex166
							if buffer[position] != rune('R') {
								goto l163
							}
							position++
						}
					l166:
						{
							position168, tokenIndex168 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l169
							}
							position++
							goto l168
						l169:
							position, tokenIndex = position168, tokenIndex168
							if buffer[position] != rune('O') {
								goto l163
							}
							position++
						}
					l168:
						if !_rules[rule_]() {
							goto l163
						}
						{
							position170, tokenIndex170 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l171
							}
							position++
							goto l170
						l171:
							position, tokenIndex = position170, tokenIndex170
							if buffer[position] != rune('P') {
								goto l163
							}
							position++
						}
					l170:
						{
							position172, tokenIndex172 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l173
							}
							position++
							goto l172
						l173:
							position, tokenIndex = position172, tokenIndex172
							if buffer[position] != rune('A') {
								goto l163
							}
							position++
						}
					l172:
						{
							position174, tokenIndex174 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l175
							}
							position++
							goto l174
						l175:
							position, tokenIndex = position174, tokenIndex174
							if buffer[position] != rune('R') {
								goto l163
							}
							position++
						}
					l174:
						{
							position176, tokenIndex176 := position, tokenIndex
							if buffer[position] != rune('t') {
								goto l177
							}
							position++
							goto l176
						l177:
							position, tokenIndex = position176, tokenIndex176
							if buffer[position] != rune('T') {
								goto l163
							}
							position++
						}
					l176:
						{
							position178, tokenIndex178 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l179
							}
							position++
							goto l178
						l179:
							position, tokenIndex = position178, tokenIndex178
							if buffer[position] != rune('E') {
								goto l163
							}
							position++
						}
					l178:
						goto l162
					l163:
						position, tokenIndex = position162, tokenIndex162
						{
							position180, tokenIndex180 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l181
							}
							position++
							goto l180
						l181:
							position, tokenIndex = position180, tokenIndex180
							if buffer[position] != rune('N') {
								goto l161
							}
							position++
						}
					l180:
						{
							position182, tokenIndex182 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l183
							}
							position++
							goto l182
						l183:
							position, tokenIndex = position182, tokenIndex182
							if buffer[position] != rune('O') {
								goto l161
							}
							position++
						}
					l182:
						{
							position184, tokenIndex184 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l185
							}
							position++
							goto l184
						l185:
							position, tokenIndex = position184, tokenIndex184
							if buffer[position] != rune('M') {
								goto l161
							}
							position++
						}
					l184:
						{
							position186, tokenIndex186 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l187
							}
							position++
							goto l186
						l187:
							position, tokenIndex = position186, tokenIndex186
							if buffer[position] != rune('E') {
								goto l161
							}
							position++
						}
					l186:
						{
							position188, tokenIndex188 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l189
							}
							position++
							goto l188
						l189:
							position, tokenIndex = position188, tokenIndex188
							if buffer[position] != rune('N') {
								goto l161
							}
							position++
						}
					l188:
					}
				l162:
					{
						position190, tokenIndex190 := position, tokenIndex
						if !_rules[ruleNotLetterOrEnd]() {
							goto l161
						}
						position, tokenIndex = position190, tokenIndex190
					}
					goto l160
				l161:
					position, tokenIndex = position160, tokenIndex160
					if buffer[position] != rune('p') {
						goto l191
					}
					position++
					if buffer[position] != rune('.') {
						goto l191
					}
					position++
					{
						position192, tokenIndex192 := position, tokenIndex
						if !_rules[rule_]() {
							goto l192
						}
						goto l193
					l192:
						position, tokenIndex = position192, tokenIndex192
					}
				l193:
					if buffer[position] != rune('p') {
						goto l191
					}
					position++
					if buffer[position] != rune('.') {
						goto l191
					}
					position++
					goto l160
				l191:
					position, tokenIndex = position160, tokenIndex160
					{
						position195, tokenIndex195 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l196
						}
						position++
						goto l195
					l196:
						position, tokenIndex = position195, tokenIndex195
						if buffer[position] != rune('N') {
							goto l194
						}
						position++
					}
				l195:
					{
						position197, tokenIndex197 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l198
						}
						position++
						goto l197
					l198:
						position, tokenIndex = position197, tokenIndex197
						if buffer[position] != rune('O') {
							goto l194
						}
						position++
					}
				l197:
					{
						position199, tokenIndex199 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l200
						}
						position++
						goto l199
					l200:
						position, tokenIndex = position199, tokenIndex199
						if buffer[position] != rune('M') {
							goto l194
						}
						position++
					}
				l199:
					if buffer[position] != rune('.') {
						goto l194
					}
					position++
					goto l160
				l194:
					position, tokenIndex = position160, tokenIndex160
					{
						position201, tokenIndex201 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l202
						}
						position++
						goto l201
					l202:
						position, tokenIndex = position201, tokenIndex201
						if buffer[position] != rune('C') {
							goto l158
						}
						position++
					}
				l201:
					{
						position203, tokenIndex203 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l204
						}
						position++
						goto l203
					l204:
						position, tokenIndex = position203, tokenIndex203
						if buffer[position] != rune('O') {
							goto l158
						}
						position++
					}
				l203:
					{
						position205, tokenIndex205 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l206
						}
						position++
						goto l205
					l206:
						position, tokenIndex = position205, tokenIndex205
						if buffer[position] != rune('M') {
							goto l158
						}
						position++
					}
				l205:
					{
						position207, tokenIndex207 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l208
						}
						position++
						goto l207
					l208:
						position, tokenIndex = position207, tokenIndex207
						if buffer[position] != rune('B') {
							goto l158
						}
						position++
					}
				l207:
					if buffer[position] != rune('.') {
						goto l158
					}
					position++
				}
			l160:
				add(ruleTailPhrase4, position159)
			}
			return true
		l158:
			position, tokenIndex = position158, tokenIndex158
			return false
		},
		/* 7 TailPhrase3 <- <('('? 's' (('.' _?) / _) (('s' '.'? &NotLetterOrEnd) / ('l' '.') / ('s' 't' 'r' '.') / ('l' 'a' 't' '.')))> */
		func() bool {
			position209, tokenIndex209 := position, tokenIndex
			{
				position210 := position
				{
					position211, tokenIndex211 := position, tokenIndex
					if buffer[position] != rune('(') {
						goto l211
					}
					position++
					goto l212
				l211:
					position, tokenIndex = position211, tokenIndex211
				}
			l212:
				if buffer[position] != rune('s') {
					goto l209
				}
				position++
				{
					position213, tokenIndex213 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l214
					}
					position++
					{
						position215, tokenIndex215 := position, tokenIndex
						if !_rules[rule_]() {
							goto l215
						}
						goto l216
					l215:
						position, tokenIndex = position215, tokenIndex215
					}
				l216:
					goto l213
				l214:
					position, tokenIndex = position213, tokenIndex213
					if !_rules[rule_]() {
						goto l209
					}
				}
			l213:
				{
					position217, tokenIndex217 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l218
					}
					position++
					{
						position219, tokenIndex219 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l219
						}
						position++
						goto l220
					l219:
						position, tokenIndex = position219, tokenIndex219
					}
				l220:
					{
						position221, tokenIndex221 := position, tokenIndex
						if !_rules[ruleNotLetterOrEnd]() {
							goto l218
						}
						position, tokenIndex = position221, tokenIndex221
					}
					goto l217
				l218:
					position, tokenIndex = position217, tokenIndex217
					if buffer[position] != rune('l') {
						goto l222
					}
					position++
					if buffer[position] != rune('.') {
						goto l222
					}
					position++
					goto l217
				l222:
					position, tokenIndex = position217, tokenIndex217
					if buffer[position] != rune('s') {
						goto l223
					}
					position++
					if buffer[position] != rune('t') {
						goto l223
					}
					position++
					if buffer[position] != rune('r') {
						goto l223
					}
					position++
					if buffer[position] != rune('.') {
						goto l223
					}
					position++
					goto l217
				l223:
					position, tokenIndex = position217, tokenIndex217
					if buffer[position] != rune('l') {
						goto l209
					}
					position++
					if buffer[position] != rune('a') {
						goto l209
					}
					position++
					if buffer[position] != rune('t') {
						goto l209
					}
					position++
					if buffer[position] != rune('.') {
						goto l209
					}
					position++
				}
			l217:
				add(ruleTailPhrase3, position210)
			}
			return true
		l209:
			position, tokenIndex = position209, tokenIndex209
			return false
		},
		/* 8 TailStopWords <- <(((('e' / 'E') ('n' / 'N') ('v' / 'V') ('i' / 'I') ('r' / 'R') ('o' / 'O') ('n' / 'N') ('m' / 'M') ('e' / 'E') ('n' / 'N') ('t' / 'T') ('a' / 'A') ('l' / 'L')) / (('e' / 'E') ('n' / 'N') ('r' / 'R') ('i' / 'I') ('c' / 'C') ('h' / 'H') ('m' / 'M') ('e' / 'E') ('n' / 'N') ('t' / 'T')) / (('s' / 'S') ('a' / 'A') ('m' / 'M') ('p' / 'P') ('l' / 'L') ('e' / 'E') ('s' / 'S')) / (('s' / 'S') ('p' / 'P') ('e' / 'E') ('c' / 'C') ('i' / 'I') ('e' / 'E') ('s' / 'S')) / (('g' / 'G') ('r' / 'R') ('o' / 'O') ('u' / 'U') ('p' / 'P')) / (('c' / 'C') ('o' / 'O') ('m' / 'M') ('p' / 'P') ('l' / 'L') ('e' / 'E') ('x' / 'X')) / (('c' / 'C') ('l' / 'L') ('a' / 'A') ('d' / 'D') ('e' / 'E')) / (('a' / 'A') ('u' / 'U') ('t' / 'T') ('h' / 'H') ('o' / 'O') ('r' / 'R')) / (('n' / 'N') ('e' / 'E') ('c' / 'C')) / (('v' / 'V') ('i' / 'I') ('d' / 'D') ('e' / 'E')) / (('s' / 'S') ('p' / 'P') ('e' / 'E') ('c' / 'C') ('i' / 'I') ('e' / 'E') ('s' / 'S')) / (('f' / 'F') ('i' / 'I') ('d' / 'D') ('e' / 'E')) / (('n' / 'N') ('o' / 'O') ('n' / 'N')) / (('n' / 'N') ('o' / 'O') ('t' / 'T'))) &NotLetterOrEnd)> */
		func() bool {
			position224, tokenIndex224 := position, tokenIndex
			{
				position225 := position
				{
					position226, tokenIndex226 := position, tokenIndex
					{
						position228, tokenIndex228 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l229
						}
						position++
						goto l228
					l229:
						position, tokenIndex = position228, tokenIndex228
						if buffer[position] != rune('E') {
							goto l227
						}
						position++
					}
				l228:
					{
						position230, tokenIndex230 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l231
						}
						position++
						goto l230
					l231:
						position, tokenIndex = position230, tokenIndex230
						if buffer[position] != rune('N') {
							goto l227
						}
						position++
					}
				l230:
					{
						position232, tokenIndex232 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l233
						}
						position++
						goto l232
					l233:
						position, tokenIndex = position232, tokenIndex232
						if buffer[position] != rune('V') {
							goto l227
						}
						position++
					}
				l232:
					{
						position234, tokenIndex234 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l235
						}
						position++
						goto l234
					l235:
						position, tokenIndex = position234, tokenIndex234
						if buffer[position] != rune('I') {
							goto l227
						}
						position++
					}
				l234:
					{
						position236, tokenIndex236 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l237
						}
						position++
						goto l236
					l237:
						position, tokenIndex = position236, tokenIndex236
						if buffer[position] != rune('R') {
							goto l227
						}
						position++
					}
				l236:
					{
						position238, tokenIndex238 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l239
						}
						position++
						goto l238
					l239:
						position, tokenIndex = position238, tokenIndex238
						if buffer[position] != rune('O') {
							goto l227
						}
						position++
					}
				l238:
					{
						position240, tokenIndex240 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l241
						}
						position++
						goto l240
					l241:
						position, tokenIndex = position240, tokenIndex240
						if buffer[position] != rune('N') {
							goto l227
						}
						position++
					}
				l240:
					{
						position242, tokenIndex242 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l243
						}
						position++
						goto l242
					l243:
						position, tokenIndex = position242, tokenIndex242
						if buffer[position] != rune('M') {
							goto l227
						}
						position++
					}
				l242:
					{
						position244, tokenIndex244 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l245
						}
						position++
						goto l244
					l245:
						position, tokenIndex = position244, tokenIndex244
						if buffer[position] != rune('E') {
							goto l227
						}
						position++
					}
				l244:
					{
						position246, tokenIndex246 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l247
						}
						position++
						goto l246
					l247:
						position, tokenIndex = position246, tokenIndex246
						if buffer[position] != rune('N') {
							goto l227
						}
						position++
					}
				l246:
					{
						position248, tokenIndex248 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l249
						}
						position++
						goto l248
					l249:
						position, tokenIndex = position248, tokenIndex248
						if buffer[position] != rune('T') {
							goto l227
						}
						position++
					}
				l248:
					{
						position250, tokenIndex250 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l251
						}
						position++
						goto l250
					l251:
						position, tokenIndex = position250, tokenIndex250
						if buffer[position] != rune('A') {
							goto l227
						}
						position++
					}
				l250:
					{
						position252, tokenIndex252 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l253
						}
						position++
						goto l252
					l253:
						position, tokenIndex = position252, tokenIndex252
						if buffer[position] != rune('L') {
							goto l227
						}
						position++
					}
				l252:
					goto l226
				l227:
					position, tokenIndex = position226, tokenIndex226
					{
						position255, tokenIndex255 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l256
						}
						position++
						goto l255
					l256:
						position, tokenIndex = position255, tokenIndex255
						if buffer[position] != rune('E') {
							goto l254
						}
						position++
					}
				l255:
					{
						position257, tokenIndex257 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l258
						}
						position++
						goto l257
					l258:
						position, tokenIndex = position257, tokenIndex257
						if buffer[position] != rune('N') {
							goto l254
						}
						position++
					}
				l257:
					{
						position259, tokenIndex259 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l260
						}
						position++
						goto l259
					l260:
						position, tokenIndex = position259, tokenIndex259
						if buffer[position] != rune('R') {
							goto l254
						}
						position++
					}
				l259:
					{
						position261, tokenIndex261 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l262
						}
						position++
						goto l261
					l262:
						position, tokenIndex = position261, tokenIndex261
						if buffer[position] != rune('I') {
							goto l254
						}
						position++
					}
				l261:
					{
						position263, tokenIndex263 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l264
						}
						position++
						goto l263
					l264:
						position, tokenIndex = position263, tokenIndex263
						if buffer[position] != rune('C') {
							goto l254
						}
						position++
					}
				l263:
					{
						position265, tokenIndex265 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l266
						}
						position++
						goto l265
					l266:
						position, tokenIndex = position265, tokenIndex265
						if buffer[position] != rune('H') {
							goto l254
						}
						position++
					}
				l265:
					{
						position267, tokenIndex267 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l268
						}
						position++
						goto l267
					l268:
						position, tokenIndex = position267, tokenIndex267
						if buffer[position] != rune('M') {
							goto l254
						}
						position++
					}
				l267:
					{
						position269, tokenIndex269 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l270
						}
						position++
						goto l269
					l270:
						position, tokenIndex = position269, tokenIndex269
						if buffer[position] != rune('E') {
							goto l254
						}
						position++
					}
				l269:
					{
						position271, tokenIndex271 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l272
						}
						position++
						goto l271
					l272:
						position, tokenIndex = position271, tokenIndex271
						if buffer[position] != rune('N') {
							goto l254
						}
						position++
					}
				l271:
					{
						position273, tokenIndex273 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l274
						}
						position++
						goto l273
					l274:
						position, tokenIndex = position273, tokenIndex273
						if buffer[position] != rune('T') {
							goto l254
						}
						position++
					}
				l273:
					goto l226
				l254:
					position, tokenIndex = position226, tokenIndex226
					{
						position276, tokenIndex276 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l277
						}
						position++
						goto l276
					l277:
						position, tokenIndex = position276, tokenIndex276
						if buffer[position] != rune('S') {
							goto l275
						}
						position++
					}
				l276:
					{
						position278, tokenIndex278 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l279
						}
						position++
						goto l278
					l279:
						position, tokenIndex = position278, tokenIndex278
						if buffer[position] != rune('A') {
							goto l275
						}
						position++
					}
				l278:
					{
						position280, tokenIndex280 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l281
						}
						position++
						goto l280
					l281:
						position, tokenIndex = position280, tokenIndex280
						if buffer[position] != rune('M') {
							goto l275
						}
						position++
					}
				l280:
					{
						position282, tokenIndex282 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l283
						}
						position++
						goto l282
					l283:
						position, tokenIndex = position282, tokenIndex282
						if buffer[position] != rune('P') {
							goto l275
						}
						position++
					}
				l282:
					{
						position284, tokenIndex284 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l285
						}
						position++
						goto l284
					l285:
						position, tokenIndex = position284, tokenIndex284
						if buffer[position] != rune('L') {
							goto l275
						}
						position++
					}
				l284:
					{
						position286, tokenIndex286 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l287
						}
						position++
						goto l286
					l287:
						position, tokenIndex = position286, tokenIndex286
						if buffer[position] != rune('E') {
							goto l275
						}
						position++
					}
				l286:
					{
						position288, tokenIndex288 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l289
						}
						position++
						goto l288
					l289:
						position, tokenIndex = position288, tokenIndex288
						if buffer[position] != rune('S') {
							goto l275
						}
						position++
					}
				l288:
					goto l226
				l275:
					position, tokenIndex = position226, tokenIndex226
					{
						position291, tokenIndex291 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l292
						}
						position++
						goto l291
					l292:
						position, tokenIndex = position291, tokenIndex291
						if buffer[position] != rune('S') {
							goto l290
						}
						position++
					}
				l291:
					{
						position293, tokenIndex293 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l294
						}
						position++
						goto l293
					l294:
						position, tokenIndex = position293, tokenIndex293
						if buffer[position] != rune('P') {
							goto l290
						}
						position++
					}
				l293:
					{
						position295, tokenIndex295 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l296
						}
						position++
						goto l295
					l296:
						position, tokenIndex = position295, tokenIndex295
						if buffer[position] != rune('E') {
							goto l290
						}
						position++
					}
				l295:
					{
						position297, tokenIndex297 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l298
						}
						position++
						goto l297
					l298:
						position, tokenIndex = position297, tokenIndex297
						if buffer[position] != rune('C') {
							goto l290
						}
						position++
					}
				l297:
					{
						position299, tokenIndex299 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l300
						}
						position++
						goto l299
					l300:
						position, tokenIndex = position299, tokenIndex299
						if buffer[position] != rune('I') {
							goto l290
						}
						position++
					}
				l299:
					{
						position301, tokenIndex301 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l302
						}
						position++
						goto l301
					l302:
						position, tokenIndex = position301, tokenIndex301
						if buffer[position] != rune('E') {
							goto l290
						}
						position++
					}
				l301:
					{
						position303, tokenIndex303 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l304
						}
						position++
						goto l303
					l304:
						position, tokenIndex = position303, tokenIndex303
						if buffer[position] != rune('S') {
							goto l290
						}
						position++
					}
				l303:
					goto l226
				l290:
					position, tokenIndex = position226, tokenIndex226
					{
						position306, tokenIndex306 := position, tokenIndex
						if buffer[position] != rune('g') {
							goto l307
						}
						position++
						goto l306
					l307:
						position, tokenIndex = position306, tokenIndex306
						if buffer[position] != rune('G') {
							goto l305
						}
						position++
					}
				l306:
					{
						position308, tokenIndex308 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l309
						}
						position++
						goto l308
					l309:
						position, tokenIndex = position308, tokenIndex308
						if buffer[position] != rune('R') {
							goto l305
						}
						position++
					}
				l308:
					{
						position310, tokenIndex310 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l311
						}
						position++
						goto l310
					l311:
						position, tokenIndex = position310, tokenIndex310
						if buffer[position] != rune('O') {
							goto l305
						}
						position++
					}
				l310:
					{
						position312, tokenIndex312 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l313
						}
						position++
						goto l312
					l313:
						position, tokenIndex = position312, tokenIndex312
						if buffer[position] != rune('U') {
							goto l305
						}
						position++
					}
				l312:
					{
						position314, tokenIndex314 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l315
						}
						position++
						goto l314
					l315:
						position, tokenIndex = position314, tokenIndex314
						if buffer[position] != rune('P') {
							goto l305
						}
						position++
					}
				l314:
					goto l226
				l305:
					position, tokenIndex = position226, tokenIndex226
					{
						position317, tokenIndex317 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l318
						}
						position++
						goto l317
					l318:
						position, tokenIndex = position317, tokenIndex317
						if buffer[position] != rune('C') {
							goto l316
						}
						position++
					}
				l317:
					{
						position319, tokenIndex319 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l320
						}
						position++
						goto l319
					l320:
						position, tokenIndex = position319, tokenIndex319
						if buffer[position] != rune('O') {
							goto l316
						}
						position++
					}
				l319:
					{
						position321, tokenIndex321 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l322
						}
						position++
						goto l321
					l322:
						position, tokenIndex = position321, tokenIndex321
						if buffer[position] != rune('M') {
							goto l316
						}
						position++
					}
				l321:
					{
						position323, tokenIndex323 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l324
						}
						position++
						goto l323
					l324:
						position, tokenIndex = position323, tokenIndex323
						if buffer[position] != rune('P') {
							goto l316
						}
						position++
					}
				l323:
					{
						position325, tokenIndex325 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l326
						}
						position++
						goto l325
					l326:
						position, tokenIndex = position325, tokenIndex325
						if buffer[position] != rune('L') {
							goto l316
						}
						position++
					}
				l325:
					{
						position327, tokenIndex327 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l328
						}
						position++
						goto l327
					l328:
						position, tokenIndex = position327, tokenIndex327
						if buffer[position] != rune('E') {
							goto l316
						}
						position++
					}
				l327:
					{
						position329, tokenIndex329 := position, tokenIndex
						if buffer[position] != rune('x') {
							goto l330
						}
						position++
						goto l329
					l330:
						position, tokenIndex = position329, tokenIndex329
						if buffer[position] != rune('X') {
							goto l316
						}
						position++
					}
				l329:
					goto l226
				l316:
					position, tokenIndex = position226, tokenIndex226
					{
						position332, tokenIndex332 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l333
						}
						position++
						goto l332
					l333:
						position, tokenIndex = position332, tokenIndex332
						if buffer[position] != rune('C') {
							goto l331
						}
						position++
					}
				l332:
					{
						position334, tokenIndex334 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l335
						}
						position++
						goto l334
					l335:
						position, tokenIndex = position334, tokenIndex334
						if buffer[position] != rune('L') {
							goto l331
						}
						position++
					}
				l334:
					{
						position336, tokenIndex336 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l337
						}
						position++
						goto l336
					l337:
						position, tokenIndex = position336, tokenIndex336
						if buffer[position] != rune('A') {
							goto l331
						}
						position++
					}
				l336:
					{
						position338, tokenIndex338 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l339
						}
						position++
						goto l338
					l339:
						position, tokenIndex = position338, tokenIndex338
						if buffer[position] != rune('D') {
							goto l331
						}
						position++
					}
				l338:
					{
						position340, tokenIndex340 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l341
						}
						position++
						goto l340
					l341:
						position, tokenIndex = position340, tokenIndex340
						if buffer[position] != rune('E') {
							goto l331
						}
						position++
					}
				l340:
					goto l226
				l331:
					position, tokenIndex = position226, tokenIndex226
					{
						position343, tokenIndex343 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l344
						}
						position++
						goto l343
					l344:
						position, tokenIndex = position343, tokenIndex343
						if buffer[position] != rune('A') {
							goto l342
						}
						position++
					}
				l343:
					{
						position345, tokenIndex345 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l346
						}
						position++
						goto l345
					l346:
						position, tokenIndex = position345, tokenIndex345
						if buffer[position] != rune('U') {
							goto l342
						}
						position++
					}
				l345:
					{
						position347, tokenIndex347 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l348
						}
						position++
						goto l347
					l348:
						position, tokenIndex = position347, tokenIndex347
						if buffer[position] != rune('T') {
							goto l342
						}
						position++
					}
				l347:
					{
						position349, tokenIndex349 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l350
						}
						position++
						goto l349
					l350:
						position, tokenIndex = position349, tokenIndex349
						if buffer[position] != rune('H') {
							goto l342
						}
						position++
					}
				l349:
					{
						position351, tokenIndex351 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l352
						}
						position++
						goto l351
					l352:
						position, tokenIndex = position351, tokenIndex351
						if buffer[position] != rune('O') {
							goto l342
						}
						position++
					}
				l351:
					{
						position353, tokenIndex353 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l354
						}
						position++
						goto l353
					l354:
						position, tokenIndex = position353, tokenIndex353
						if buffer[position] != rune('R') {
							goto l342
						}
						position++
					}
				l353:
					goto l226
				l342:
					position, tokenIndex = position226, tokenIndex226
					{
						position356, tokenIndex356 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l357
						}
						position++
						goto l356
					l357:
						position, tokenIndex = position356, tokenIndex356
						if buffer[position] != rune('N') {
							goto l355
						}
						position++
					}
				l356:
					{
						position358, tokenIndex358 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l359
						}
						position++
						goto l358
					l359:
						position, tokenIndex = position358, tokenIndex358
						if buffer[position] != rune('E') {
							goto l355
						}
						position++
					}
				l358:
					{
						position360, tokenIndex360 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l361
						}
						position++
						goto l360
					l361:
						position, tokenIndex = position360, tokenIndex360
						if buffer[position] != rune('C') {
							goto l355
						}
						position++
					}
				l360:
					goto l226
				l355:
					position, tokenIndex = position226, tokenIndex226
					{
						position363, tokenIndex363 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l364
						}
						position++
						goto l363
					l364:
						position, tokenIndex = position363, tokenIndex363
						if buffer[position] != rune('V') {
							goto l362
						}
						position++
					}
				l363:
					{
						position365, tokenIndex365 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l366
						}
						position++
						goto l365
					l366:
						position, tokenIndex = position365, tokenIndex365
						if buffer[position] != rune('I') {
							goto l362
						}
						position++
					}
				l365:
					{
						position367, tokenIndex367 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l368
						}
						position++
						goto l367
					l368:
						position, tokenIndex = position367, tokenIndex367
						if buffer[position] != rune('D') {
							goto l362
						}
						position++
					}
				l367:
					{
						position369, tokenIndex369 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l370
						}
						position++
						goto l369
					l370:
						position, tokenIndex = position369, tokenIndex369
						if buffer[position] != rune('E') {
							goto l362
						}
						position++
					}
				l369:
					goto l226
				l362:
					position, tokenIndex = position226, tokenIndex226
					{
						position372, tokenIndex372 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l373
						}
						position++
						goto l372
					l373:
						position, tokenIndex = position372, tokenIndex372
						if buffer[position] != rune('S') {
							goto l371
						}
						position++
					}
				l372:
					{
						position374, tokenIndex374 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l375
						}
						position++
						goto l374
					l375:
						position, tokenIndex = position374, tokenIndex374
						if buffer[position] != rune('P') {
							goto l371
						}
						position++
					}
				l374:
					{
						position376, tokenIndex376 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l377
						}
						position++
						goto l376
					l377:
						position, tokenIndex = position376, tokenIndex376
						if buffer[position] != rune('E') {
							goto l371
						}
						position++
					}
				l376:
					{
						position378, tokenIndex378 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l379
						}
						position++
						goto l378
					l379:
						position, tokenIndex = position378, tokenIndex378
						if buffer[position] != rune('C') {
							goto l371
						}
						position++
					}
				l378:
					{
						position380, tokenIndex380 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l381
						}
						position++
						goto l380
					l381:
						position, tokenIndex = position380, tokenIndex380
						if buffer[position] != rune('I') {
							goto l371
						}
						position++
					}
				l380:
					{
						position382, tokenIndex382 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l383
						}
						position++
						goto l382
					l383:
						position, tokenIndex = position382, tokenIndex382
						if buffer[position] != rune('E') {
							goto l371
						}
						position++
					}
				l382:
					{
						position384, tokenIndex384 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l385
						}
						position++
						goto l384
					l385:
						position, tokenIndex = position384, tokenIndex384
						if buffer[position] != rune('S') {
							goto l371
						}
						position++
					}
				l384:
					goto l226
				l371:
					position, tokenIndex = position226, tokenIndex226
					{
						position387, tokenIndex387 := position, tokenIndex
						if buffer[position] != rune('f') {
							goto l388
						}
						position++
						goto l387
					l388:
						position, tokenIndex = position387, tokenIndex387
						if buffer[position] != rune('F') {
							goto l386
						}
						position++
					}
				l387:
					{
						position389, tokenIndex389 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l390
						}
						position++
						goto l389
					l390:
						position, tokenIndex = position389, tokenIndex389
						if buffer[position] != rune('I') {
							goto l386
						}
						position++
					}
				l389:
					{
						position391, tokenIndex391 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l392
						}
						position++
						goto l391
					l392:
						position, tokenIndex = position391, tokenIndex391
						if buffer[position] != rune('D') {
							goto l386
						}
						position++
					}
				l391:
					{
						position393, tokenIndex393 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l394
						}
						position++
						goto l393
					l394:
						position, tokenIndex = position393, tokenIndex393
						if buffer[position] != rune('E') {
							goto l386
						}
						position++
					}
				l393:
					goto l226
				l386:
					position, tokenIndex = position226, tokenIndex226
					{
						position396, tokenIndex396 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l397
						}
						position++
						goto l396
					l397:
						position, tokenIndex = position396, tokenIndex396
						if buffer[position] != rune('N') {
							goto l395
						}
						position++
					}
				l396:
					{
						position398, tokenIndex398 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l399
						}
						position++
						goto l398
					l399:
						position, tokenIndex = position398, tokenIndex398
						if buffer[position] != rune('O') {
							goto l395
						}
						position++
					}
				l398:
					{
						position400, tokenIndex400 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l401
						}
						position++
						goto l400
					l401:
						position, tokenIndex = position400, tokenIndex400
						if buffer[position] != rune('N') {
							goto l395
						}
						position++
					}
				l400:
					goto l226
				l395:
					position, tokenIndex = position226, tokenIndex226
					{
						position402, tokenIndex402 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l403
						}
						position++
						goto l402
					l403:
						position, tokenIndex = position402, tokenIndex402
						if buffer[position] != rune('N') {
							goto l224
						}
						position++
					}
				l402:
					{
						position404, tokenIndex404 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l405
						}
						position++
						goto l404
					l405:
						position, tokenIndex = position404, tokenIndex404
						if buffer[position] != rune('O') {
							goto l224
						}
						position++
					}
				l404:
					{
						position406, tokenIndex406 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l407
						}
						position++
						goto l406
					l407:
						position, tokenIndex = position406, tokenIndex406
						if buffer[position] != rune('T') {
							goto l224
						}
						position++
					}
				l406:
				}
			l226:
				{
					position408, tokenIndex408 := position, tokenIndex
					if !_rules[ruleNotLetterOrEnd]() {
						goto l224
					}
					position, tokenIndex = position408, tokenIndex408
				}
				add(ruleTailStopWords, position225)
			}
			return true
		l224:
			position, tokenIndex = position224, tokenIndex224
			return false
		},
		/* 9 TailPhrase2 <- <(((('s' / 'S') ('e' / 'E') ('r' / 'R') ('o' / 'O') ((('v' / 'V') ('a' / 'A') ('r' / 'R')) / (('t' / 'T') ('y' / 'Y') ('p' / 'P') ('e' / 'E')))) / (('s' / 'S') ('e' / 'E') ('n' / 'N') ('s' / 'S') ('u' / 'U')) / (('a' / 'A') ('u' / 'U') ('c' / 'C') ('t' / 'T')) / (('s' / 'S') ('e' / 'E') ('c' / 'C')) / (('n' / 'N') ('e' / 'E') ('a' / 'A') ('r' / 'R')) / (('s' / 'S') ('t' / 'T') ('r' / 'R'))) '.'? &NotLetterOrEnd)> */
		func() bool {
			position409, tokenIndex409 := position, tokenIndex
			{
				position410 := position
				{
					position411, tokenIndex411 := position, tokenIndex
					{
						position413, tokenIndex413 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l414
						}
						position++
						goto l413
					l414:
						position, tokenIndex = position413, tokenIndex413
						if buffer[position] != rune('S') {
							goto l412
						}
						position++
					}
				l413:
					{
						position415, tokenIndex415 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l416
						}
						position++
						goto l415
					l416:
						position, tokenIndex = position415, tokenIndex415
						if buffer[position] != rune('E') {
							goto l412
						}
						position++
					}
				l415:
					{
						position417, tokenIndex417 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l418
						}
						position++
						goto l417
					l418:
						position, tokenIndex = position417, tokenIndex417
						if buffer[position] != rune('R') {
							goto l412
						}
						position++
					}
				l417:
					{
						position419, tokenIndex419 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l420
						}
						position++
						goto l419
					l420:
						position, tokenIndex = position419, tokenIndex419
						if buffer[position] != rune('O') {
							goto l412
						}
						position++
					}
				l419:
					{
						position421, tokenIndex421 := position, tokenIndex
						{
							position423, tokenIndex423 := position, tokenIndex
							if buffer[position] != rune('v') {
								goto l424
							}
							position++
							goto l423
						l424:
							position, tokenIndex = position423, tokenIndex423
							if buffer[position] != rune('V') {
								goto l422
							}
							position++
						}
					l423:
						{
							position425, tokenIndex425 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l426
							}
							position++
							goto l425
						l426:
							position, tokenIndex = position425, tokenIndex425
							if buffer[position] != rune('A') {
								goto l422
							}
							position++
						}
					l425:
						{
							position427, tokenIndex427 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l428
							}
							position++
							goto l427
						l428:
							position, tokenIndex = position427, tokenIndex427
							if buffer[position] != rune('R') {
								goto l422
							}
							position++
						}
					l427:
						goto l421
					l422:
						position, tokenIndex = position421, tokenIndex421
						{
							position429, tokenIndex429 := position, tokenIndex
							if buffer[position] != rune('t') {
								goto l430
							}
							position++
							goto l429
						l430:
							position, tokenIndex = position429, tokenIndex429
							if buffer[position] != rune('T') {
								goto l412
							}
							position++
						}
					l429:
						{
							position431, tokenIndex431 := position, tokenIndex
							if buffer[position] != rune('y') {
								goto l432
							}
							position++
							goto l431
						l432:
							position, tokenIndex = position431, tokenIndex431
							if buffer[position] != rune('Y') {
								goto l412
							}
							position++
						}
					l431:
						{
							position433, tokenIndex433 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l434
							}
							position++
							goto l433
						l434:
							position, tokenIndex = position433, tokenIndex433
							if buffer[position] != rune('P') {
								goto l412
							}
							position++
						}
					l433:
						{
							position435, tokenIndex435 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l436
							}
							position++
							goto l435
						l436:
							position, tokenIndex = position435, tokenIndex435
							if buffer[position] != rune('E') {
								goto l412
							}
							position++
						}
					l435:
					}
				l421:
					goto l411
				l412:
					position, tokenIndex = position411, tokenIndex411
					{
						position438, tokenIndex438 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l439
						}
						position++
						goto l438
					l439:
						position, tokenIndex = position438, tokenIndex438
						if buffer[position] != rune('S') {
							goto l437
						}
						position++
					}
				l438:
					{
						position440, tokenIndex440 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l441
						}
						position++
						goto l440
					l441:
						position, tokenIndex = position440, tokenIndex440
						if buffer[position] != rune('E') {
							goto l437
						}
						position++
					}
				l440:
					{
						position442, tokenIndex442 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l443
						}
						position++
						goto l442
					l443:
						position, tokenIndex = position442, tokenIndex442
						if buffer[position] != rune('N') {
							goto l437
						}
						position++
					}
				l442:
					{
						position444, tokenIndex444 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l445
						}
						position++
						goto l444
					l445:
						position, tokenIndex = position444, tokenIndex444
						if buffer[position] != rune('S') {
							goto l437
						}
						position++
					}
				l444:
					{
						position446, tokenIndex446 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l447
						}
						position++
						goto l446
					l447:
						position, tokenIndex = position446, tokenIndex446
						if buffer[position] != rune('U') {
							goto l437
						}
						position++
					}
				l446:
					goto l411
				l437:
					position, tokenIndex = position411, tokenIndex411
					{
						position449, tokenIndex449 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l450
						}
						position++
						goto l449
					l450:
						position, tokenIndex = position449, tokenIndex449
						if buffer[position] != rune('A') {
							goto l448
						}
						position++
					}
				l449:
					{
						position451, tokenIndex451 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l452
						}
						position++
						goto l451
					l452:
						position, tokenIndex = position451, tokenIndex451
						if buffer[position] != rune('U') {
							goto l448
						}
						position++
					}
				l451:
					{
						position453, tokenIndex453 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l454
						}
						position++
						goto l453
					l454:
						position, tokenIndex = position453, tokenIndex453
						if buffer[position] != rune('C') {
							goto l448
						}
						position++
					}
				l453:
					{
						position455, tokenIndex455 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l456
						}
						position++
						goto l455
					l456:
						position, tokenIndex = position455, tokenIndex455
						if buffer[position] != rune('T') {
							goto l448
						}
						position++
					}
				l455:
					goto l411
				l448:
					position, tokenIndex = position411, tokenIndex411
					{
						position458, tokenIndex458 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l459
						}
						position++
						goto l458
					l459:
						position, tokenIndex = position458, tokenIndex458
						if buffer[position] != rune('S') {
							goto l457
						}
						position++
					}
				l458:
					{
						position460, tokenIndex460 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l461
						}
						position++
						goto l460
					l461:
						position, tokenIndex = position460, tokenIndex460
						if buffer[position] != rune('E') {
							goto l457
						}
						position++
					}
				l460:
					{
						position462, tokenIndex462 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l463
						}
						position++
						goto l462
					l463:
						position, tokenIndex = position462, tokenIndex462
						if buffer[position] != rune('C') {
							goto l457
						}
						position++
					}
				l462:
					goto l411
				l457:
					position, tokenIndex = position411, tokenIndex411
					{
						position465, tokenIndex465 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l466
						}
						position++
						goto l465
					l466:
						position, tokenIndex = position465, tokenIndex465
						if buffer[position] != rune('N') {
							goto l464
						}
						position++
					}
				l465:
					{
						position467, tokenIndex467 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l468
						}
						position++
						goto l467
					l468:
						position, tokenIndex = position467, tokenIndex467
						if buffer[position] != rune('E') {
							goto l464
						}
						position++
					}
				l467:
					{
						position469, tokenIndex469 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l470
						}
						position++
						goto l469
					l470:
						position, tokenIndex = position469, tokenIndex469
						if buffer[position] != rune('A') {
							goto l464
						}
						position++
					}
				l469:
					{
						position471, tokenIndex471 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l472
						}
						position++
						goto l471
					l472:
						position, tokenIndex = position471, tokenIndex471
						if buffer[position] != rune('R') {
							goto l464
						}
						position++
					}
				l471:
					goto l411
				l464:
					position, tokenIndex = position411, tokenIndex411
					{
						position473, tokenIndex473 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l474
						}
						position++
						goto l473
					l474:
						position, tokenIndex = position473, tokenIndex473
						if buffer[position] != rune('S') {
							goto l409
						}
						position++
					}
				l473:
					{
						position475, tokenIndex475 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l476
						}
						position++
						goto l475
					l476:
						position, tokenIndex = position475, tokenIndex475
						if buffer[position] != rune('T') {
							goto l409
						}
						position++
					}
				l475:
					{
						position477, tokenIndex477 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l478
						}
						position++
						goto l477
					l478:
						position, tokenIndex = position477, tokenIndex477
						if buffer[position] != rune('R') {
							goto l409
						}
						position++
					}
				l477:
				}
			l411:
				{
					position479, tokenIndex479 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l479
					}
					position++
					goto l480
				l479:
					position, tokenIndex = position479, tokenIndex479
				}
			l480:
				{
					position481, tokenIndex481 := position, tokenIndex
					if !_rules[ruleNotLetterOrEnd]() {
						goto l409
					}
					position, tokenIndex = position481, tokenIndex481
				}
				add(ruleTailPhrase2, position410)
			}
			return true
		l409:
			position, tokenIndex = position409, tokenIndex409
			return false
		},
		/* 10 TailPhrase1 <- <((('('? (('h' 't') / ('h' 'o' 'r' 't'))) / (('s' / 'S') ('p' 'e' 'c')) / ('n' 'o' 'v' '.'? _ ('s' 'p' 'e' 'c'))) '.'? &NotLetterOrEnd)> */
		func() bool {
			position482, tokenIndex482 := position, tokenIndex
			{
				position483 := position
				{
					position484, tokenIndex484 := position, tokenIndex
					{
						position486, tokenIndex486 := position, tokenIndex
						if buffer[position] != rune('(') {
							goto l486
						}
						position++
						goto l487
					l486:
						position, tokenIndex = position486, tokenIndex486
					}
				l487:
					{
						position488, tokenIndex488 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l489
						}
						position++
						if buffer[position] != rune('t') {
							goto l489
						}
						position++
						goto l488
					l489:
						position, tokenIndex = position488, tokenIndex488
						if buffer[position] != rune('h') {
							goto l485
						}
						position++
						if buffer[position] != rune('o') {
							goto l485
						}
						position++
						if buffer[position] != rune('r') {
							goto l485
						}
						position++
						if buffer[position] != rune('t') {
							goto l485
						}
						position++
					}
				l488:
					goto l484
				l485:
					position, tokenIndex = position484, tokenIndex484
					{
						position491, tokenIndex491 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l492
						}
						position++
						goto l491
					l492:
						position, tokenIndex = position491, tokenIndex491
						if buffer[position] != rune('S') {
							goto l490
						}
						position++
					}
				l491:
					if buffer[position] != rune('p') {
						goto l490
					}
					position++
					if buffer[position] != rune('e') {
						goto l490
					}
					position++
					if buffer[position] != rune('c') {
						goto l490
					}
					position++
					goto l484
				l490:
					position, tokenIndex = position484, tokenIndex484
					if buffer[position] != rune('n') {
						goto l482
					}
					position++
					if buffer[position] != rune('o') {
						goto l482
					}
					position++
					if buffer[position] != rune('v') {
						goto l482
					}
					position++
					{
						position493, tokenIndex493 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l493
						}
						position++
						goto l494
					l493:
						position, tokenIndex = position493, tokenIndex493
					}
				l494:
					if !_rules[rule_]() {
						goto l482
					}
					if buffer[position] != rune('s') {
						goto l482
					}
					position++
					if buffer[position] != rune('p') {
						goto l482
					}
					position++
					if buffer[position] != rune('e') {
						goto l482
					}
					position++
					if buffer[position] != rune('c') {
						goto l482
					}
					position++
				}
			l484:
				{
					position495, tokenIndex495 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l495
					}
					position++
					goto l496
				l495:
					position, tokenIndex = position495, tokenIndex495
				}
			l496:
				{
					position497, tokenIndex497 := position, tokenIndex
					if !_rules[ruleNotLetterOrEnd]() {
						goto l482
					}
					position, tokenIndex = position497, tokenIndex497
				}
				add(ruleTailPhrase1, position483)
			}
			return true
		l482:
			position, tokenIndex = position482, tokenIndex482
			return false
		},
		/* 11 SpaceOrEnd <- <(CommaSpace? END)> */
		func() bool {
			position498, tokenIndex498 := position, tokenIndex
			{
				position499 := position
				{
					position500, tokenIndex500 := position, tokenIndex
					if !_rules[ruleCommaSpace]() {
						goto l500
					}
					goto l501
				l500:
					position, tokenIndex = position500, tokenIndex500
				}
			l501:
				if !_rules[ruleEND]() {
					goto l498
				}
				add(ruleSpaceOrEnd, position499)
			}
			return true
		l498:
			position, tokenIndex = position498, tokenIndex498
			return false
		},
		/* 12 CommaSpace <- <((_? ',' _?)+ / _)> */
		func() bool {
			position502, tokenIndex502 := position, tokenIndex
			{
				position503 := position
				{
					position504, tokenIndex504 := position, tokenIndex
					{
						position508, tokenIndex508 := position, tokenIndex
						if !_rules[rule_]() {
							goto l508
						}
						goto l509
					l508:
						position, tokenIndex = position508, tokenIndex508
					}
				l509:
					if buffer[position] != rune(',') {
						goto l505
					}
					position++
					{
						position510, tokenIndex510 := position, tokenIndex
						if !_rules[rule_]() {
							goto l510
						}
						goto l511
					l510:
						position, tokenIndex = position510, tokenIndex510
					}
				l511:
				l506:
					{
						position507, tokenIndex507 := position, tokenIndex
						{
							position512, tokenIndex512 := position, tokenIndex
							if !_rules[rule_]() {
								goto l512
							}
							goto l513
						l512:
							position, tokenIndex = position512, tokenIndex512
						}
					l513:
						if buffer[position] != rune(',') {
							goto l507
						}
						position++
						{
							position514, tokenIndex514 := position, tokenIndex
							if !_rules[rule_]() {
								goto l514
							}
							goto l515
						l514:
							position, tokenIndex = position514, tokenIndex514
						}
					l515:
						goto l506
					l507:
						position, tokenIndex = position507, tokenIndex507
					}
					goto l504
				l505:
					position, tokenIndex = position504, tokenIndex504
					if !_rules[rule_]() {
						goto l502
					}
				}
			l504:
				add(ruleCommaSpace, position503)
			}
			return true
		l502:
			position, tokenIndex = position502, tokenIndex502
			return false
		},
		/* 13 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position516, tokenIndex516 := position, tokenIndex
			{
				position517 := position
				{
					position518, tokenIndex518 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l519
					}
					goto l518
				l519:
					position, tokenIndex = position518, tokenIndex518
					if !_rules[ruleSingleSpace]() {
						goto l516
					}
				}
			l518:
				add(rule_, position517)
			}
			return true
		l516:
			position, tokenIndex = position516, tokenIndex516
			return false
		},
		/* 14 NotLetterOrEnd <- <(NotLetter / END)> */
		func() bool {
			position520, tokenIndex520 := position, tokenIndex
			{
				position521 := position
				{
					position522, tokenIndex522 := position, tokenIndex
					if !_rules[ruleNotLetter]() {
						goto l523
					}
					goto l522
				l523:
					position, tokenIndex = position522, tokenIndex522
					if !_rules[ruleEND]() {
						goto l520
					}
				}
			l522:
				add(ruleNotLetterOrEnd, position521)
			}
			return true
		l520:
			position, tokenIndex = position520, tokenIndex520
			return false
		},
		/* 15 NotLetter <- <(!([a-z] / [A-Z] / ([0-9] / [0-9]) / '_' / '-') .)> */
		func() bool {
			position524, tokenIndex524 := position, tokenIndex
			{
				position525 := position
				{
					position526, tokenIndex526 := position, tokenIndex
					{
						position527, tokenIndex527 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l528
						}
						position++
						goto l527
					l528:
						position, tokenIndex = position527, tokenIndex527
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l529
						}
						position++
						goto l527
					l529:
						position, tokenIndex = position527, tokenIndex527
						{
							position531, tokenIndex531 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l532
							}
							position++
							goto l531
						l532:
							position, tokenIndex = position531, tokenIndex531
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l530
							}
							position++
						}
					l531:
						goto l527
					l530:
						position, tokenIndex = position527, tokenIndex527
						if buffer[position] != rune('_') {
							goto l533
						}
						position++
						goto l527
					l533:
						position, tokenIndex = position527, tokenIndex527
						if buffer[position] != rune('-') {
							goto l526
						}
						position++
					}
				l527:
					goto l524
				l526:
					position, tokenIndex = position526, tokenIndex526
				}
				if !matchDot() {
					goto l524
				}
				add(ruleNotLetter, position525)
			}
			return true
		l524:
			position, tokenIndex = position524, tokenIndex524
			return false
		},
		/* 16 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position534, tokenIndex534 := position, tokenIndex
			{
				position535 := position
				if !_rules[ruleSingleSpace]() {
					goto l534
				}
				if !_rules[ruleSingleSpace]() {
					goto l534
				}
			l536:
				{
					position537, tokenIndex537 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l537
					}
					goto l536
				l537:
					position, tokenIndex = position537, tokenIndex537
				}
				add(ruleMultipleSpace, position535)
			}
			return true
		l534:
			position, tokenIndex = position534, tokenIndex534
			return false
		},
		/* 17 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position538, tokenIndex538 := position, tokenIndex
			{
				position539 := position
				{
					position540, tokenIndex540 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l541
					}
					position++
					goto l540
				l541:
					position, tokenIndex = position540, tokenIndex540
					if !_rules[ruleOtherSpace]() {
						goto l538
					}
				}
			l540:
				add(ruleSingleSpace, position539)
			}
			return true
		l538:
			position, tokenIndex = position538, tokenIndex538
			return false
		},
		/* 18 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position542, tokenIndex542 := position, tokenIndex
			{
				position543 := position
				{
					position544, tokenIndex544 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l545
					}
					position++
					goto l544
				l545:
					position, tokenIndex = position544, tokenIndex544
					if buffer[position] != rune('\u00a0') {
						goto l546
					}
					position++
					goto l544
				l546:
					position, tokenIndex = position544, tokenIndex544
					if buffer[position] != rune('\t') {
						goto l547
					}
					position++
					goto l544
				l547:
					position, tokenIndex = position544, tokenIndex544
					if buffer[position] != rune('\r') {
						goto l548
					}
					position++
					goto l544
				l548:
					position, tokenIndex = position544, tokenIndex544
					if buffer[position] != rune('\n') {
						goto l549
					}
					position++
					goto l544
				l549:
					position, tokenIndex = position544, tokenIndex544
					if buffer[position] != rune('\f') {
						goto l550
					}
					position++
					goto l544
				l550:
					position, tokenIndex = position544, tokenIndex544
					if buffer[position] != rune('\v') {
						goto l542
					}
					position++
				}
			l544:
				add(ruleOtherSpace, position543)
			}
			return true
		l542:
			position, tokenIndex = position542, tokenIndex542
			return false
		},
		/* 19 END <- <!.> */
		func() bool {
			position551, tokenIndex551 := position, tokenIndex
			{
				position552 := position
				{
					position553, tokenIndex553 := position, tokenIndex
					if !matchDot() {
						goto l553
					}
					goto l551
				l553:
					position, tokenIndex = position553, tokenIndex553
				}
				add(ruleEND, position552)
			}
			return true
		l551:
			position, tokenIndex = position551, tokenIndex551
			return false
		},
		/* 21 Action0 <- <{ p.tailIndex = int(token.begin) }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
