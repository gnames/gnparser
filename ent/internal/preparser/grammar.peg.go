package preparser

// Code generated by peg grammar.peg DO NOT EDIT.

import (
	"fmt"
	"io"
	"os"
	"sort"
	"strconv"
	"strings"
)

const endSymbol rune = 1114112

/* The rule types inferred from the grammar are below. */
type pegRule uint8

const (
	ruleUnknown pegRule = iota
	ruleString
	ruleHead
	ruleTail
	ruleWord
	ruleTailPhrase
	ruleTailLastWordJunk
	ruleTailPhrase4
	ruleTailPhrase3
	ruleTailStopWords
	ruleTailPhrase2
	ruleTailPhrase1
	ruleSpaceOrEnd
	ruleCommaSpace
	rule_
	ruleNotLetterOrEnd
	ruleNotLetter
	ruleMultipleSpace
	ruleSingleSpace
	ruleOtherSpace
	ruleEND
	ruleAction0
)

var rul3s = [...]string{
	"Unknown",
	"String",
	"Head",
	"Tail",
	"Word",
	"TailPhrase",
	"TailLastWordJunk",
	"TailPhrase4",
	"TailPhrase3",
	"TailStopWords",
	"TailPhrase2",
	"TailPhrase1",
	"SpaceOrEnd",
	"CommaSpace",
	"_",
	"NotLetterOrEnd",
	"NotLetter",
	"MultipleSpace",
	"SingleSpace",
	"OtherSpace",
	"END",
	"Action0",
}

type token32 struct {
	pegRule
	begin, end uint32
}

func (t *token32) String() string {
	return fmt.Sprintf("\x1B[34m%v\x1B[m %v %v", rul3s[t.pegRule], t.begin, t.end)
}

type node32 struct {
	token32
	up, next *node32
}

func (node *node32) print(w io.Writer, pretty bool, buffer string) {
	var print func(node *node32, depth int)
	print = func(node *node32, depth int) {
		for node != nil {
			for c := 0; c < depth; c++ {
				fmt.Fprintf(w, " ")
			}
			rule := rul3s[node.pegRule]
			quote := strconv.Quote(string(([]rune(buffer)[node.begin:node.end])))
			if !pretty {
				fmt.Fprintf(w, "%v %v\n", rule, quote)
			} else {
				fmt.Fprintf(w, "\x1B[36m%v\x1B[m %v\n", rule, quote)
			}
			if node.up != nil {
				print(node.up, depth+1)
			}
			node = node.next
		}
	}
	print(node, 0)
}

func (node *node32) Print(w io.Writer, buffer string) {
	node.print(w, false, buffer)
}

func (node *node32) PrettyPrint(w io.Writer, buffer string) {
	node.print(w, true, buffer)
}

type tokens32 struct {
	tree []token32
}

func (t *tokens32) Trim(length uint32) {
	t.tree = t.tree[:length]
}

func (t *tokens32) Print() {
	for _, token := range t.tree {
		fmt.Println(token.String())
	}
}

func (t *tokens32) AST() *node32 {
	type element struct {
		node *node32
		down *element
	}
	tokens := t.Tokens()
	var stack *element
	for _, token := range tokens {
		if token.begin == token.end {
			continue
		}
		node := &node32{token32: token}
		for stack != nil && stack.node.begin >= token.begin && stack.node.end <= token.end {
			stack.node.next = node.up
			node.up = stack.node
			stack = stack.down
		}
		stack = &element{node: node, down: stack}
	}
	if stack != nil {
		return stack.node
	}
	return nil
}

func (t *tokens32) PrintSyntaxTree(buffer string) {
	t.AST().Print(os.Stdout, buffer)
}

func (t *tokens32) WriteSyntaxTree(w io.Writer, buffer string) {
	t.AST().Print(w, buffer)
}

func (t *tokens32) PrettyPrintSyntaxTree(buffer string) {
	t.AST().PrettyPrint(os.Stdout, buffer)
}

func (t *tokens32) Add(rule pegRule, begin, end, index uint32) {
	tree, i := t.tree, int(index)
	if i >= len(tree) {
		t.tree = append(tree, token32{pegRule: rule, begin: begin, end: end})
		return
	}
	tree[i] = token32{pegRule: rule, begin: begin, end: end}
}

func (t *tokens32) Tokens() []token32 {
	return t.tree
}

type PreParser struct {
	PreString
	Buffer string
	buffer []rune
	rules  [22]func() bool
	parse  func(rule ...int) error
	reset  func()
	Pretty bool
	tokens32
}

func (p *PreParser) Parse(rule ...int) error {
	return p.parse(rule...)
}

func (p *PreParser) Reset() {
	p.reset()
}

type textPosition struct {
	line, symbol int
}

type textPositionMap map[int]textPosition

func translatePositions(buffer []rune, positions []int) textPositionMap {
	length, translations, j, line, symbol := len(positions), make(textPositionMap, len(positions)), 0, 1, 0
	sort.Ints(positions)

search:
	for i, c := range buffer {
		if c == '\n' {
			line, symbol = line+1, 0
		} else {
			symbol++
		}
		if i == positions[j] {
			translations[positions[j]] = textPosition{line, symbol}
			for j++; j < length; j++ {
				if i != positions[j] {
					continue search
				}
			}
			break search
		}
	}

	return translations
}

type parseError struct {
	p   *PreParser
	max token32
}

func (e *parseError) Error() string {
	tokens, err := []token32{e.max}, "\n"
	positions, p := make([]int, 2*len(tokens)), 0
	for _, token := range tokens {
		positions[p], p = int(token.begin), p+1
		positions[p], p = int(token.end), p+1
	}
	translations := translatePositions(e.p.buffer, positions)
	format := "parse error near %v (line %v symbol %v - line %v symbol %v):\n%v\n"
	if e.p.Pretty {
		format = "parse error near \x1B[34m%v\x1B[m (line %v symbol %v - line %v symbol %v):\n%v\n"
	}
	for _, token := range tokens {
		begin, end := int(token.begin), int(token.end)
		err += fmt.Sprintf(format,
			rul3s[token.pegRule],
			translations[begin].line, translations[begin].symbol,
			translations[end].line, translations[end].symbol,
			strconv.Quote(string(e.p.buffer[begin:end])))
	}

	return err
}

func (p *PreParser) PrintSyntaxTree() {
	if p.Pretty {
		p.tokens32.PrettyPrintSyntaxTree(p.Buffer)
	} else {
		p.tokens32.PrintSyntaxTree(p.Buffer)
	}
}

func (p *PreParser) WriteSyntaxTree(w io.Writer) {
	p.tokens32.WriteSyntaxTree(w, p.Buffer)
}

func (p *PreParser) SprintSyntaxTree() string {
	var bldr strings.Builder
	p.WriteSyntaxTree(&bldr)
	return bldr.String()
}

func (p *PreParser) Execute() {
	buffer, _buffer, text, begin, end := p.Buffer, p.buffer, "", 0, 0
	for _, token := range p.Tokens() {
		switch token.pegRule {

		case ruleAction0:
			p.tailIndex = int(token.begin)

		}
	}
	_, _, _, _, _ = buffer, _buffer, text, begin, end
}

func Pretty(pretty bool) func(*PreParser) error {
	return func(p *PreParser) error {
		p.Pretty = pretty
		return nil
	}
}

func Size(size int) func(*PreParser) error {
	return func(p *PreParser) error {
		p.tokens32 = tokens32{tree: make([]token32, 0, size)}
		return nil
	}
}
func (p *PreParser) Init(options ...func(*PreParser) error) error {
	var (
		max                  token32
		position, tokenIndex uint32
		buffer               []rune
	)
	for _, option := range options {
		err := option(p)
		if err != nil {
			return err
		}
	}
	p.reset = func() {
		max = token32{}
		position, tokenIndex = 0, 0

		p.buffer = []rune(p.Buffer)
		if len(p.buffer) == 0 || p.buffer[len(p.buffer)-1] != endSymbol {
			p.buffer = append(p.buffer, endSymbol)
		}
		buffer = p.buffer
	}
	p.reset()

	_rules := p.rules
	tree := p.tokens32
	p.parse = func(rule ...int) error {
		r := 1
		if len(rule) > 0 {
			r = rule[0]
		}
		matches := p.rules[r]()
		p.tokens32 = tree
		if matches {
			p.Trim(tokenIndex)
			return nil
		}
		return &parseError{p, max}
	}

	add := func(rule pegRule, begin uint32) {
		tree.Add(rule, begin, position, tokenIndex)
		tokenIndex++
		if begin != position && position > max.end {
			max = token32{rule, begin, position}
		}
	}

	matchDot := func() bool {
		if buffer[position] != endSymbol {
			position++
			return true
		}
		return false
	}

	/*matchChar := func(c byte) bool {
		if buffer[position] == c {
			position++
			return true
		}
		return false
	}*/

	/*matchRange := func(lower byte, upper byte) bool {
		if c := buffer[position]; c >= lower && c <= upper {
			position++
			return true
		}
		return false
	}*/

	_rules = [...]func() bool{
		nil,
		/* 0 String <- <(_? ((Head Tail?) / (TailPhrase .*)) SpaceOrEnd)> */
		func() bool {
			position0, tokenIndex0 := position, tokenIndex
			{
				position1 := position
				{
					position2, tokenIndex2 := position, tokenIndex
					if !_rules[rule_]() {
						goto l2
					}
					goto l3
				l2:
					position, tokenIndex = position2, tokenIndex2
				}
			l3:
				{
					position4, tokenIndex4 := position, tokenIndex
					if !_rules[ruleHead]() {
						goto l5
					}
					{
						position6, tokenIndex6 := position, tokenIndex
						if !_rules[ruleTail]() {
							goto l6
						}
						goto l7
					l6:
						position, tokenIndex = position6, tokenIndex6
					}
				l7:
					goto l4
				l5:
					position, tokenIndex = position4, tokenIndex4
					if !_rules[ruleTailPhrase]() {
						goto l0
					}
				l8:
					{
						position9, tokenIndex9 := position, tokenIndex
						if !matchDot() {
							goto l9
						}
						goto l8
					l9:
						position, tokenIndex = position9, tokenIndex9
					}
				}
			l4:
				if !_rules[ruleSpaceOrEnd]() {
					goto l0
				}
				add(ruleString, position1)
			}
			return true
		l0:
			position, tokenIndex = position0, tokenIndex0
			return false
		},
		/* 1 Head <- <(Word (CommaSpace Word)* &(Tail / SpaceOrEnd))> */
		func() bool {
			position10, tokenIndex10 := position, tokenIndex
			{
				position11 := position
				if !_rules[ruleWord]() {
					goto l10
				}
			l12:
				{
					position13, tokenIndex13 := position, tokenIndex
					if !_rules[ruleCommaSpace]() {
						goto l13
					}
					if !_rules[ruleWord]() {
						goto l13
					}
					goto l12
				l13:
					position, tokenIndex = position13, tokenIndex13
				}
				{
					position14, tokenIndex14 := position, tokenIndex
					{
						position15, tokenIndex15 := position, tokenIndex
						if !_rules[ruleTail]() {
							goto l16
						}
						goto l15
					l16:
						position, tokenIndex = position15, tokenIndex15
						if !_rules[ruleSpaceOrEnd]() {
							goto l10
						}
					}
				l15:
					position, tokenIndex = position14, tokenIndex14
				}
				add(ruleHead, position11)
			}
			return true
		l10:
			position, tokenIndex = position10, tokenIndex10
			return false
		},
		/* 2 Tail <- <(Action0 CommaSpace TailPhrase .*)> */
		func() bool {
			position17, tokenIndex17 := position, tokenIndex
			{
				position18 := position
				if !_rules[ruleAction0]() {
					goto l17
				}
				if !_rules[ruleCommaSpace]() {
					goto l17
				}
				if !_rules[ruleTailPhrase]() {
					goto l17
				}
			l19:
				{
					position20, tokenIndex20 := position, tokenIndex
					if !matchDot() {
						goto l20
					}
					goto l19
				l20:
					position, tokenIndex = position20, tokenIndex20
				}
				add(ruleTail, position18)
			}
			return true
		l17:
			position, tokenIndex = position17, tokenIndex17
			return false
		},
		/* 3 Word <- <((!TailPhrase (!(',' / ' ') .)+) / ',')> */
		func() bool {
			position21, tokenIndex21 := position, tokenIndex
			{
				position22 := position
				{
					position23, tokenIndex23 := position, tokenIndex
					{
						position25, tokenIndex25 := position, tokenIndex
						if !_rules[ruleTailPhrase]() {
							goto l25
						}
						goto l24
					l25:
						position, tokenIndex = position25, tokenIndex25
					}
					{
						position28, tokenIndex28 := position, tokenIndex
						{
							position29, tokenIndex29 := position, tokenIndex
							if buffer[position] != rune(',') {
								goto l30
							}
							position++
							goto l29
						l30:
							position, tokenIndex = position29, tokenIndex29
							if buffer[position] != rune(' ') {
								goto l28
							}
							position++
						}
					l29:
						goto l24
					l28:
						position, tokenIndex = position28, tokenIndex28
					}
					if !matchDot() {
						goto l24
					}
				l26:
					{
						position27, tokenIndex27 := position, tokenIndex
						{
							position31, tokenIndex31 := position, tokenIndex
							{
								position32, tokenIndex32 := position, tokenIndex
								if buffer[position] != rune(',') {
									goto l33
								}
								position++
								goto l32
							l33:
								position, tokenIndex = position32, tokenIndex32
								if buffer[position] != rune(' ') {
									goto l31
								}
								position++
							}
						l32:
							goto l27
						l31:
							position, tokenIndex = position31, tokenIndex31
						}
						if !matchDot() {
							goto l27
						}
						goto l26
					l27:
						position, tokenIndex = position27, tokenIndex27
					}
					goto l23
				l24:
					position, tokenIndex = position23, tokenIndex23
					if buffer[position] != rune(',') {
						goto l21
					}
					position++
				}
			l23:
				add(ruleWord, position22)
			}
			return true
		l21:
			position, tokenIndex = position21, tokenIndex21
			return false
		},
		/* 4 TailPhrase <- <(TailLastWordJunk / TailPhrase4 / TailPhrase3 / TailStopWords / TailPhrase2 / TailPhrase1)> */
		func() bool {
			position34, tokenIndex34 := position, tokenIndex
			{
				position35 := position
				{
					position36, tokenIndex36 := position, tokenIndex
					if !_rules[ruleTailLastWordJunk]() {
						goto l37
					}
					goto l36
				l37:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase4]() {
						goto l38
					}
					goto l36
				l38:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase3]() {
						goto l39
					}
					goto l36
				l39:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailStopWords]() {
						goto l40
					}
					goto l36
				l40:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase2]() {
						goto l41
					}
					goto l36
				l41:
					position, tokenIndex = position36, tokenIndex36
					if !_rules[ruleTailPhrase1]() {
						goto l34
					}
				}
			l36:
				add(ruleTailPhrase, position35)
			}
			return true
		l34:
			position, tokenIndex = position34, tokenIndex34
			return false
		},
		/* 5 TailLastWordJunk <- <(((((('v' / 'V') ('a' / 'A') ('r' / 'R')) / (('i' / 'I') ('n' / 'N') ('e' / 'E') ('d' / 'D')) / (('s' / 'S') ('s' / 'S') ('p' / 'P')) / (('s' / 'S') ('u' / 'U') ('b' / 'B') ('s' / 'S') ('p' / 'P')) / (('s' / 'S') ('u' / 'U') ('b' / 'B') ('g' / 'G') ('e' / 'E') ('n' / 'N'))) '.'?) / (('s' / 'S') ('e' / 'E') ('n' / 'N') ('s' / 'S') ('u' / 'U')) / (('n' / 'N') ('e' / 'E') ('w' / 'W')) / (('n' / 'N') ('o' / 'O') ('n' / 'N')) / (('n' / 'N') ('e' / 'E') ('c' / 'C')) / (('h' / 'H') ('y' / 'Y') ('b' / 'B') ('r' / 'R') ('i' / 'I') ('d' / 'D')) / (('v' / 'V') ('o' / 'O') ('n' / 'N'))) '?'? &SpaceOrEnd)> */
		func() bool {
			position42, tokenIndex42 := position, tokenIndex
			{
				position43 := position
				{
					position44, tokenIndex44 := position, tokenIndex
					{
						position46, tokenIndex46 := position, tokenIndex
						{
							position48, tokenIndex48 := position, tokenIndex
							if buffer[position] != rune('v') {
								goto l49
							}
							position++
							goto l48
						l49:
							position, tokenIndex = position48, tokenIndex48
							if buffer[position] != rune('V') {
								goto l47
							}
							position++
						}
					l48:
						{
							position50, tokenIndex50 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l51
							}
							position++
							goto l50
						l51:
							position, tokenIndex = position50, tokenIndex50
							if buffer[position] != rune('A') {
								goto l47
							}
							position++
						}
					l50:
						{
							position52, tokenIndex52 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l53
							}
							position++
							goto l52
						l53:
							position, tokenIndex = position52, tokenIndex52
							if buffer[position] != rune('R') {
								goto l47
							}
							position++
						}
					l52:
						goto l46
					l47:
						position, tokenIndex = position46, tokenIndex46
						{
							position55, tokenIndex55 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l56
							}
							position++
							goto l55
						l56:
							position, tokenIndex = position55, tokenIndex55
							if buffer[position] != rune('I') {
								goto l54
							}
							position++
						}
					l55:
						{
							position57, tokenIndex57 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l58
							}
							position++
							goto l57
						l58:
							position, tokenIndex = position57, tokenIndex57
							if buffer[position] != rune('N') {
								goto l54
							}
							position++
						}
					l57:
						{
							position59, tokenIndex59 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l60
							}
							position++
							goto l59
						l60:
							position, tokenIndex = position59, tokenIndex59
							if buffer[position] != rune('E') {
								goto l54
							}
							position++
						}
					l59:
						{
							position61, tokenIndex61 := position, tokenIndex
							if buffer[position] != rune('d') {
								goto l62
							}
							position++
							goto l61
						l62:
							position, tokenIndex = position61, tokenIndex61
							if buffer[position] != rune('D') {
								goto l54
							}
							position++
						}
					l61:
						goto l46
					l54:
						position, tokenIndex = position46, tokenIndex46
						{
							position64, tokenIndex64 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l65
							}
							position++
							goto l64
						l65:
							position, tokenIndex = position64, tokenIndex64
							if buffer[position] != rune('S') {
								goto l63
							}
							position++
						}
					l64:
						{
							position66, tokenIndex66 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l67
							}
							position++
							goto l66
						l67:
							position, tokenIndex = position66, tokenIndex66
							if buffer[position] != rune('S') {
								goto l63
							}
							position++
						}
					l66:
						{
							position68, tokenIndex68 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l69
							}
							position++
							goto l68
						l69:
							position, tokenIndex = position68, tokenIndex68
							if buffer[position] != rune('P') {
								goto l63
							}
							position++
						}
					l68:
						goto l46
					l63:
						position, tokenIndex = position46, tokenIndex46
						{
							position71, tokenIndex71 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l72
							}
							position++
							goto l71
						l72:
							position, tokenIndex = position71, tokenIndex71
							if buffer[position] != rune('S') {
								goto l70
							}
							position++
						}
					l71:
						{
							position73, tokenIndex73 := position, tokenIndex
							if buffer[position] != rune('u') {
								goto l74
							}
							position++
							goto l73
						l74:
							position, tokenIndex = position73, tokenIndex73
							if buffer[position] != rune('U') {
								goto l70
							}
							position++
						}
					l73:
						{
							position75, tokenIndex75 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l76
							}
							position++
							goto l75
						l76:
							position, tokenIndex = position75, tokenIndex75
							if buffer[position] != rune('B') {
								goto l70
							}
							position++
						}
					l75:
						{
							position77, tokenIndex77 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l78
							}
							position++
							goto l77
						l78:
							position, tokenIndex = position77, tokenIndex77
							if buffer[position] != rune('S') {
								goto l70
							}
							position++
						}
					l77:
						{
							position79, tokenIndex79 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l80
							}
							position++
							goto l79
						l80:
							position, tokenIndex = position79, tokenIndex79
							if buffer[position] != rune('P') {
								goto l70
							}
							position++
						}
					l79:
						goto l46
					l70:
						position, tokenIndex = position46, tokenIndex46
						{
							position81, tokenIndex81 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l82
							}
							position++
							goto l81
						l82:
							position, tokenIndex = position81, tokenIndex81
							if buffer[position] != rune('S') {
								goto l45
							}
							position++
						}
					l81:
						{
							position83, tokenIndex83 := position, tokenIndex
							if buffer[position] != rune('u') {
								goto l84
							}
							position++
							goto l83
						l84:
							position, tokenIndex = position83, tokenIndex83
							if buffer[position] != rune('U') {
								goto l45
							}
							position++
						}
					l83:
						{
							position85, tokenIndex85 := position, tokenIndex
							if buffer[position] != rune('b') {
								goto l86
							}
							position++
							goto l85
						l86:
							position, tokenIndex = position85, tokenIndex85
							if buffer[position] != rune('B') {
								goto l45
							}
							position++
						}
					l85:
						{
							position87, tokenIndex87 := position, tokenIndex
							if buffer[position] != rune('g') {
								goto l88
							}
							position++
							goto l87
						l88:
							position, tokenIndex = position87, tokenIndex87
							if buffer[position] != rune('G') {
								goto l45
							}
							position++
						}
					l87:
						{
							position89, tokenIndex89 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l90
							}
							position++
							goto l89
						l90:
							position, tokenIndex = position89, tokenIndex89
							if buffer[position] != rune('E') {
								goto l45
							}
							position++
						}
					l89:
						{
							position91, tokenIndex91 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l92
							}
							position++
							goto l91
						l92:
							position, tokenIndex = position91, tokenIndex91
							if buffer[position] != rune('N') {
								goto l45
							}
							position++
						}
					l91:
					}
				l46:
					{
						position93, tokenIndex93 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l93
						}
						position++
						goto l94
					l93:
						position, tokenIndex = position93, tokenIndex93
					}
				l94:
					goto l44
				l45:
					position, tokenIndex = position44, tokenIndex44
					{
						position96, tokenIndex96 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l97
						}
						position++
						goto l96
					l97:
						position, tokenIndex = position96, tokenIndex96
						if buffer[position] != rune('S') {
							goto l95
						}
						position++
					}
				l96:
					{
						position98, tokenIndex98 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l99
						}
						position++
						goto l98
					l99:
						position, tokenIndex = position98, tokenIndex98
						if buffer[position] != rune('E') {
							goto l95
						}
						position++
					}
				l98:
					{
						position100, tokenIndex100 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l101
						}
						position++
						goto l100
					l101:
						position, tokenIndex = position100, tokenIndex100
						if buffer[position] != rune('N') {
							goto l95
						}
						position++
					}
				l100:
					{
						position102, tokenIndex102 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l103
						}
						position++
						goto l102
					l103:
						position, tokenIndex = position102, tokenIndex102
						if buffer[position] != rune('S') {
							goto l95
						}
						position++
					}
				l102:
					{
						position104, tokenIndex104 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l105
						}
						position++
						goto l104
					l105:
						position, tokenIndex = position104, tokenIndex104
						if buffer[position] != rune('U') {
							goto l95
						}
						position++
					}
				l104:
					goto l44
				l95:
					position, tokenIndex = position44, tokenIndex44
					{
						position107, tokenIndex107 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l108
						}
						position++
						goto l107
					l108:
						position, tokenIndex = position107, tokenIndex107
						if buffer[position] != rune('N') {
							goto l106
						}
						position++
					}
				l107:
					{
						position109, tokenIndex109 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l110
						}
						position++
						goto l109
					l110:
						position, tokenIndex = position109, tokenIndex109
						if buffer[position] != rune('E') {
							goto l106
						}
						position++
					}
				l109:
					{
						position111, tokenIndex111 := position, tokenIndex
						if buffer[position] != rune('w') {
							goto l112
						}
						position++
						goto l111
					l112:
						position, tokenIndex = position111, tokenIndex111
						if buffer[position] != rune('W') {
							goto l106
						}
						position++
					}
				l111:
					goto l44
				l106:
					position, tokenIndex = position44, tokenIndex44
					{
						position114, tokenIndex114 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l115
						}
						position++
						goto l114
					l115:
						position, tokenIndex = position114, tokenIndex114
						if buffer[position] != rune('N') {
							goto l113
						}
						position++
					}
				l114:
					{
						position116, tokenIndex116 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l117
						}
						position++
						goto l116
					l117:
						position, tokenIndex = position116, tokenIndex116
						if buffer[position] != rune('O') {
							goto l113
						}
						position++
					}
				l116:
					{
						position118, tokenIndex118 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l119
						}
						position++
						goto l118
					l119:
						position, tokenIndex = position118, tokenIndex118
						if buffer[position] != rune('N') {
							goto l113
						}
						position++
					}
				l118:
					goto l44
				l113:
					position, tokenIndex = position44, tokenIndex44
					{
						position121, tokenIndex121 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l122
						}
						position++
						goto l121
					l122:
						position, tokenIndex = position121, tokenIndex121
						if buffer[position] != rune('N') {
							goto l120
						}
						position++
					}
				l121:
					{
						position123, tokenIndex123 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l124
						}
						position++
						goto l123
					l124:
						position, tokenIndex = position123, tokenIndex123
						if buffer[position] != rune('E') {
							goto l120
						}
						position++
					}
				l123:
					{
						position125, tokenIndex125 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l126
						}
						position++
						goto l125
					l126:
						position, tokenIndex = position125, tokenIndex125
						if buffer[position] != rune('C') {
							goto l120
						}
						position++
					}
				l125:
					goto l44
				l120:
					position, tokenIndex = position44, tokenIndex44
					{
						position128, tokenIndex128 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l129
						}
						position++
						goto l128
					l129:
						position, tokenIndex = position128, tokenIndex128
						if buffer[position] != rune('H') {
							goto l127
						}
						position++
					}
				l128:
					{
						position130, tokenIndex130 := position, tokenIndex
						if buffer[position] != rune('y') {
							goto l131
						}
						position++
						goto l130
					l131:
						position, tokenIndex = position130, tokenIndex130
						if buffer[position] != rune('Y') {
							goto l127
						}
						position++
					}
				l130:
					{
						position132, tokenIndex132 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l133
						}
						position++
						goto l132
					l133:
						position, tokenIndex = position132, tokenIndex132
						if buffer[position] != rune('B') {
							goto l127
						}
						position++
					}
				l132:
					{
						position134, tokenIndex134 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l135
						}
						position++
						goto l134
					l135:
						position, tokenIndex = position134, tokenIndex134
						if buffer[position] != rune('R') {
							goto l127
						}
						position++
					}
				l134:
					{
						position136, tokenIndex136 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l137
						}
						position++
						goto l136
					l137:
						position, tokenIndex = position136, tokenIndex136
						if buffer[position] != rune('I') {
							goto l127
						}
						position++
					}
				l136:
					{
						position138, tokenIndex138 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l139
						}
						position++
						goto l138
					l139:
						position, tokenIndex = position138, tokenIndex138
						if buffer[position] != rune('D') {
							goto l127
						}
						position++
					}
				l138:
					goto l44
				l127:
					position, tokenIndex = position44, tokenIndex44
					{
						position140, tokenIndex140 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l141
						}
						position++
						goto l140
					l141:
						position, tokenIndex = position140, tokenIndex140
						if buffer[position] != rune('V') {
							goto l42
						}
						position++
					}
				l140:
					{
						position142, tokenIndex142 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l143
						}
						position++
						goto l142
					l143:
						position, tokenIndex = position142, tokenIndex142
						if buffer[position] != rune('O') {
							goto l42
						}
						position++
					}
				l142:
					{
						position144, tokenIndex144 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l145
						}
						position++
						goto l144
					l145:
						position, tokenIndex = position144, tokenIndex144
						if buffer[position] != rune('N') {
							goto l42
						}
						position++
					}
				l144:
				}
			l44:
				{
					position146, tokenIndex146 := position, tokenIndex
					if buffer[position] != rune('?') {
						goto l146
					}
					position++
					goto l147
				l146:
					position, tokenIndex = position146, tokenIndex146
				}
			l147:
				{
					position148, tokenIndex148 := position, tokenIndex
					if !_rules[ruleSpaceOrEnd]() {
						goto l42
					}
					position, tokenIndex = position148, tokenIndex148
				}
				add(ruleTailLastWordJunk, position43)
			}
			return true
		l42:
			position, tokenIndex = position42, tokenIndex42
			return false
		},
		/* 6 TailPhrase4 <- <((((('p' / 'P') ('r' / 'R') ('o' / 'O') _ (('p' / 'P') ('a' / 'A') ('r' / 'R') ('t' / 'T') ('e' / 'E'))) / (('n' / 'N') ('o' / 'O') ('m' / 'M') ('e' / 'E') ('n' / 'N'))) &NotLetterOrEnd) / (('p' / 'P') '.' _? (('p' / 'P') '.')) / (('n' / 'N') ('o' / 'O') ('m' / 'M') '.') / (('c' / 'C') ('o' / 'O') ('m' / 'M') ('b' / 'B') '.'))> */
		func() bool {
			position149, tokenIndex149 := position, tokenIndex
			{
				position150 := position
				{
					position151, tokenIndex151 := position, tokenIndex
					{
						position153, tokenIndex153 := position, tokenIndex
						{
							position155, tokenIndex155 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l156
							}
							position++
							goto l155
						l156:
							position, tokenIndex = position155, tokenIndex155
							if buffer[position] != rune('P') {
								goto l154
							}
							position++
						}
					l155:
						{
							position157, tokenIndex157 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l158
							}
							position++
							goto l157
						l158:
							position, tokenIndex = position157, tokenIndex157
							if buffer[position] != rune('R') {
								goto l154
							}
							position++
						}
					l157:
						{
							position159, tokenIndex159 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l160
							}
							position++
							goto l159
						l160:
							position, tokenIndex = position159, tokenIndex159
							if buffer[position] != rune('O') {
								goto l154
							}
							position++
						}
					l159:
						if !_rules[rule_]() {
							goto l154
						}
						{
							position161, tokenIndex161 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l162
							}
							position++
							goto l161
						l162:
							position, tokenIndex = position161, tokenIndex161
							if buffer[position] != rune('P') {
								goto l154
							}
							position++
						}
					l161:
						{
							position163, tokenIndex163 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l164
							}
							position++
							goto l163
						l164:
							position, tokenIndex = position163, tokenIndex163
							if buffer[position] != rune('A') {
								goto l154
							}
							position++
						}
					l163:
						{
							position165, tokenIndex165 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l166
							}
							position++
							goto l165
						l166:
							position, tokenIndex = position165, tokenIndex165
							if buffer[position] != rune('R') {
								goto l154
							}
							position++
						}
					l165:
						{
							position167, tokenIndex167 := position, tokenIndex
							if buffer[position] != rune('t') {
								goto l168
							}
							position++
							goto l167
						l168:
							position, tokenIndex = position167, tokenIndex167
							if buffer[position] != rune('T') {
								goto l154
							}
							position++
						}
					l167:
						{
							position169, tokenIndex169 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l170
							}
							position++
							goto l169
						l170:
							position, tokenIndex = position169, tokenIndex169
							if buffer[position] != rune('E') {
								goto l154
							}
							position++
						}
					l169:
						goto l153
					l154:
						position, tokenIndex = position153, tokenIndex153
						{
							position171, tokenIndex171 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l172
							}
							position++
							goto l171
						l172:
							position, tokenIndex = position171, tokenIndex171
							if buffer[position] != rune('N') {
								goto l152
							}
							position++
						}
					l171:
						{
							position173, tokenIndex173 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l174
							}
							position++
							goto l173
						l174:
							position, tokenIndex = position173, tokenIndex173
							if buffer[position] != rune('O') {
								goto l152
							}
							position++
						}
					l173:
						{
							position175, tokenIndex175 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l176
							}
							position++
							goto l175
						l176:
							position, tokenIndex = position175, tokenIndex175
							if buffer[position] != rune('M') {
								goto l152
							}
							position++
						}
					l175:
						{
							position177, tokenIndex177 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l178
							}
							position++
							goto l177
						l178:
							position, tokenIndex = position177, tokenIndex177
							if buffer[position] != rune('E') {
								goto l152
							}
							position++
						}
					l177:
						{
							position179, tokenIndex179 := position, tokenIndex
							if buffer[position] != rune('n') {
								goto l180
							}
							position++
							goto l179
						l180:
							position, tokenIndex = position179, tokenIndex179
							if buffer[position] != rune('N') {
								goto l152
							}
							position++
						}
					l179:
					}
				l153:
					{
						position181, tokenIndex181 := position, tokenIndex
						if !_rules[ruleNotLetterOrEnd]() {
							goto l152
						}
						position, tokenIndex = position181, tokenIndex181
					}
					goto l151
				l152:
					position, tokenIndex = position151, tokenIndex151
					{
						position183, tokenIndex183 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l184
						}
						position++
						goto l183
					l184:
						position, tokenIndex = position183, tokenIndex183
						if buffer[position] != rune('P') {
							goto l182
						}
						position++
					}
				l183:
					if buffer[position] != rune('.') {
						goto l182
					}
					position++
					{
						position185, tokenIndex185 := position, tokenIndex
						if !_rules[rule_]() {
							goto l185
						}
						goto l186
					l185:
						position, tokenIndex = position185, tokenIndex185
					}
				l186:
					{
						position187, tokenIndex187 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l188
						}
						position++
						goto l187
					l188:
						position, tokenIndex = position187, tokenIndex187
						if buffer[position] != rune('P') {
							goto l182
						}
						position++
					}
				l187:
					if buffer[position] != rune('.') {
						goto l182
					}
					position++
					goto l151
				l182:
					position, tokenIndex = position151, tokenIndex151
					{
						position190, tokenIndex190 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l191
						}
						position++
						goto l190
					l191:
						position, tokenIndex = position190, tokenIndex190
						if buffer[position] != rune('N') {
							goto l189
						}
						position++
					}
				l190:
					{
						position192, tokenIndex192 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l193
						}
						position++
						goto l192
					l193:
						position, tokenIndex = position192, tokenIndex192
						if buffer[position] != rune('O') {
							goto l189
						}
						position++
					}
				l192:
					{
						position194, tokenIndex194 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l195
						}
						position++
						goto l194
					l195:
						position, tokenIndex = position194, tokenIndex194
						if buffer[position] != rune('M') {
							goto l189
						}
						position++
					}
				l194:
					if buffer[position] != rune('.') {
						goto l189
					}
					position++
					goto l151
				l189:
					position, tokenIndex = position151, tokenIndex151
					{
						position196, tokenIndex196 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l197
						}
						position++
						goto l196
					l197:
						position, tokenIndex = position196, tokenIndex196
						if buffer[position] != rune('C') {
							goto l149
						}
						position++
					}
				l196:
					{
						position198, tokenIndex198 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l199
						}
						position++
						goto l198
					l199:
						position, tokenIndex = position198, tokenIndex198
						if buffer[position] != rune('O') {
							goto l149
						}
						position++
					}
				l198:
					{
						position200, tokenIndex200 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l201
						}
						position++
						goto l200
					l201:
						position, tokenIndex = position200, tokenIndex200
						if buffer[position] != rune('M') {
							goto l149
						}
						position++
					}
				l200:
					{
						position202, tokenIndex202 := position, tokenIndex
						if buffer[position] != rune('b') {
							goto l203
						}
						position++
						goto l202
					l203:
						position, tokenIndex = position202, tokenIndex202
						if buffer[position] != rune('B') {
							goto l149
						}
						position++
					}
				l202:
					if buffer[position] != rune('.') {
						goto l149
					}
					position++
				}
			l151:
				add(ruleTailPhrase4, position150)
			}
			return true
		l149:
			position, tokenIndex = position149, tokenIndex149
			return false
		},
		/* 7 TailPhrase3 <- <('('? 's' (('.' _?) / _) (('s' '.'? &NotLetterOrEnd) / ('l' '.') / ('s' 't' 'r' '.') / ('l' 'a' 't' '.')))> */
		func() bool {
			position204, tokenIndex204 := position, tokenIndex
			{
				position205 := position
				{
					position206, tokenIndex206 := position, tokenIndex
					if buffer[position] != rune('(') {
						goto l206
					}
					position++
					goto l207
				l206:
					position, tokenIndex = position206, tokenIndex206
				}
			l207:
				if buffer[position] != rune('s') {
					goto l204
				}
				position++
				{
					position208, tokenIndex208 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l209
					}
					position++
					{
						position210, tokenIndex210 := position, tokenIndex
						if !_rules[rule_]() {
							goto l210
						}
						goto l211
					l210:
						position, tokenIndex = position210, tokenIndex210
					}
				l211:
					goto l208
				l209:
					position, tokenIndex = position208, tokenIndex208
					if !_rules[rule_]() {
						goto l204
					}
				}
			l208:
				{
					position212, tokenIndex212 := position, tokenIndex
					if buffer[position] != rune('s') {
						goto l213
					}
					position++
					{
						position214, tokenIndex214 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l214
						}
						position++
						goto l215
					l214:
						position, tokenIndex = position214, tokenIndex214
					}
				l215:
					{
						position216, tokenIndex216 := position, tokenIndex
						if !_rules[ruleNotLetterOrEnd]() {
							goto l213
						}
						position, tokenIndex = position216, tokenIndex216
					}
					goto l212
				l213:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('l') {
						goto l217
					}
					position++
					if buffer[position] != rune('.') {
						goto l217
					}
					position++
					goto l212
				l217:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('s') {
						goto l218
					}
					position++
					if buffer[position] != rune('t') {
						goto l218
					}
					position++
					if buffer[position] != rune('r') {
						goto l218
					}
					position++
					if buffer[position] != rune('.') {
						goto l218
					}
					position++
					goto l212
				l218:
					position, tokenIndex = position212, tokenIndex212
					if buffer[position] != rune('l') {
						goto l204
					}
					position++
					if buffer[position] != rune('a') {
						goto l204
					}
					position++
					if buffer[position] != rune('t') {
						goto l204
					}
					position++
					if buffer[position] != rune('.') {
						goto l204
					}
					position++
				}
			l212:
				add(ruleTailPhrase3, position205)
			}
			return true
		l204:
			position, tokenIndex = position204, tokenIndex204
			return false
		},
		/* 8 TailStopWords <- <(((('e' / 'E') ('n' / 'N') ('v' / 'V') ('i' / 'I') ('r' / 'R') ('o' / 'O') ('n' / 'N') ('m' / 'M') ('e' / 'E') ('n' / 'N') ('t' / 'T') ('a' / 'A') ('l' / 'L')) / (('e' / 'E') ('n' / 'N') ('r' / 'R') ('i' / 'I') ('c' / 'C') ('h' / 'H') ('m' / 'M') ('e' / 'E') ('n' / 'N') ('t' / 'T')) / (('s' / 'S') ('a' / 'A') ('m' / 'M') ('p' / 'P') ('l' / 'L') ('e' / 'E') ('s' / 'S')) / ((('s' / 'S') ('p' / 'P') ('e' / 'E') ('c' / 'C') ('i' / 'I') ('e' / 'E') ('s' / 'S') _)? ((('g' / 'G') ('r' / 'R') ('o' / 'O') ('u' / 'U') ('p' / 'P')) / (('c' / 'C') ('o' / 'O') ('m' / 'M') ('p' / 'P') ('l' / 'L') ('e' / 'E') ('x' / 'X')))) / (('c' / 'C') ('l' / 'L') ('a' / 'A') ('d' / 'D') ('e' / 'E')) / (('a' / 'A') ('u' / 'U') ('t' / 'T') ('h' / 'H') ('o' / 'O') ('r' / 'R')) / (('n' / 'N') ('e' / 'E') ('c' / 'C')) / (('v' / 'V') ('i' / 'I') ('d' / 'D') ('e' / 'E')) / (('f' / 'F') ('i' / 'I') ('d' / 'D') ('e' / 'E')) / (('n' / 'N') ('o' / 'O') ('n' / 'N'))) &NotLetterOrEnd)> */
		func() bool {
			position219, tokenIndex219 := position, tokenIndex
			{
				position220 := position
				{
					position221, tokenIndex221 := position, tokenIndex
					{
						position223, tokenIndex223 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l224
						}
						position++
						goto l223
					l224:
						position, tokenIndex = position223, tokenIndex223
						if buffer[position] != rune('E') {
							goto l222
						}
						position++
					}
				l223:
					{
						position225, tokenIndex225 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l226
						}
						position++
						goto l225
					l226:
						position, tokenIndex = position225, tokenIndex225
						if buffer[position] != rune('N') {
							goto l222
						}
						position++
					}
				l225:
					{
						position227, tokenIndex227 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l228
						}
						position++
						goto l227
					l228:
						position, tokenIndex = position227, tokenIndex227
						if buffer[position] != rune('V') {
							goto l222
						}
						position++
					}
				l227:
					{
						position229, tokenIndex229 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l230
						}
						position++
						goto l229
					l230:
						position, tokenIndex = position229, tokenIndex229
						if buffer[position] != rune('I') {
							goto l222
						}
						position++
					}
				l229:
					{
						position231, tokenIndex231 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l232
						}
						position++
						goto l231
					l232:
						position, tokenIndex = position231, tokenIndex231
						if buffer[position] != rune('R') {
							goto l222
						}
						position++
					}
				l231:
					{
						position233, tokenIndex233 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l234
						}
						position++
						goto l233
					l234:
						position, tokenIndex = position233, tokenIndex233
						if buffer[position] != rune('O') {
							goto l222
						}
						position++
					}
				l233:
					{
						position235, tokenIndex235 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l236
						}
						position++
						goto l235
					l236:
						position, tokenIndex = position235, tokenIndex235
						if buffer[position] != rune('N') {
							goto l222
						}
						position++
					}
				l235:
					{
						position237, tokenIndex237 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l238
						}
						position++
						goto l237
					l238:
						position, tokenIndex = position237, tokenIndex237
						if buffer[position] != rune('M') {
							goto l222
						}
						position++
					}
				l237:
					{
						position239, tokenIndex239 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l240
						}
						position++
						goto l239
					l240:
						position, tokenIndex = position239, tokenIndex239
						if buffer[position] != rune('E') {
							goto l222
						}
						position++
					}
				l239:
					{
						position241, tokenIndex241 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l242
						}
						position++
						goto l241
					l242:
						position, tokenIndex = position241, tokenIndex241
						if buffer[position] != rune('N') {
							goto l222
						}
						position++
					}
				l241:
					{
						position243, tokenIndex243 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l244
						}
						position++
						goto l243
					l244:
						position, tokenIndex = position243, tokenIndex243
						if buffer[position] != rune('T') {
							goto l222
						}
						position++
					}
				l243:
					{
						position245, tokenIndex245 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l246
						}
						position++
						goto l245
					l246:
						position, tokenIndex = position245, tokenIndex245
						if buffer[position] != rune('A') {
							goto l222
						}
						position++
					}
				l245:
					{
						position247, tokenIndex247 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l248
						}
						position++
						goto l247
					l248:
						position, tokenIndex = position247, tokenIndex247
						if buffer[position] != rune('L') {
							goto l222
						}
						position++
					}
				l247:
					goto l221
				l222:
					position, tokenIndex = position221, tokenIndex221
					{
						position250, tokenIndex250 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l251
						}
						position++
						goto l250
					l251:
						position, tokenIndex = position250, tokenIndex250
						if buffer[position] != rune('E') {
							goto l249
						}
						position++
					}
				l250:
					{
						position252, tokenIndex252 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l253
						}
						position++
						goto l252
					l253:
						position, tokenIndex = position252, tokenIndex252
						if buffer[position] != rune('N') {
							goto l249
						}
						position++
					}
				l252:
					{
						position254, tokenIndex254 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l255
						}
						position++
						goto l254
					l255:
						position, tokenIndex = position254, tokenIndex254
						if buffer[position] != rune('R') {
							goto l249
						}
						position++
					}
				l254:
					{
						position256, tokenIndex256 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l257
						}
						position++
						goto l256
					l257:
						position, tokenIndex = position256, tokenIndex256
						if buffer[position] != rune('I') {
							goto l249
						}
						position++
					}
				l256:
					{
						position258, tokenIndex258 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l259
						}
						position++
						goto l258
					l259:
						position, tokenIndex = position258, tokenIndex258
						if buffer[position] != rune('C') {
							goto l249
						}
						position++
					}
				l258:
					{
						position260, tokenIndex260 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l261
						}
						position++
						goto l260
					l261:
						position, tokenIndex = position260, tokenIndex260
						if buffer[position] != rune('H') {
							goto l249
						}
						position++
					}
				l260:
					{
						position262, tokenIndex262 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l263
						}
						position++
						goto l262
					l263:
						position, tokenIndex = position262, tokenIndex262
						if buffer[position] != rune('M') {
							goto l249
						}
						position++
					}
				l262:
					{
						position264, tokenIndex264 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l265
						}
						position++
						goto l264
					l265:
						position, tokenIndex = position264, tokenIndex264
						if buffer[position] != rune('E') {
							goto l249
						}
						position++
					}
				l264:
					{
						position266, tokenIndex266 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l267
						}
						position++
						goto l266
					l267:
						position, tokenIndex = position266, tokenIndex266
						if buffer[position] != rune('N') {
							goto l249
						}
						position++
					}
				l266:
					{
						position268, tokenIndex268 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l269
						}
						position++
						goto l268
					l269:
						position, tokenIndex = position268, tokenIndex268
						if buffer[position] != rune('T') {
							goto l249
						}
						position++
					}
				l268:
					goto l221
				l249:
					position, tokenIndex = position221, tokenIndex221
					{
						position271, tokenIndex271 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l272
						}
						position++
						goto l271
					l272:
						position, tokenIndex = position271, tokenIndex271
						if buffer[position] != rune('S') {
							goto l270
						}
						position++
					}
				l271:
					{
						position273, tokenIndex273 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l274
						}
						position++
						goto l273
					l274:
						position, tokenIndex = position273, tokenIndex273
						if buffer[position] != rune('A') {
							goto l270
						}
						position++
					}
				l273:
					{
						position275, tokenIndex275 := position, tokenIndex
						if buffer[position] != rune('m') {
							goto l276
						}
						position++
						goto l275
					l276:
						position, tokenIndex = position275, tokenIndex275
						if buffer[position] != rune('M') {
							goto l270
						}
						position++
					}
				l275:
					{
						position277, tokenIndex277 := position, tokenIndex
						if buffer[position] != rune('p') {
							goto l278
						}
						position++
						goto l277
					l278:
						position, tokenIndex = position277, tokenIndex277
						if buffer[position] != rune('P') {
							goto l270
						}
						position++
					}
				l277:
					{
						position279, tokenIndex279 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l280
						}
						position++
						goto l279
					l280:
						position, tokenIndex = position279, tokenIndex279
						if buffer[position] != rune('L') {
							goto l270
						}
						position++
					}
				l279:
					{
						position281, tokenIndex281 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l282
						}
						position++
						goto l281
					l282:
						position, tokenIndex = position281, tokenIndex281
						if buffer[position] != rune('E') {
							goto l270
						}
						position++
					}
				l281:
					{
						position283, tokenIndex283 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l284
						}
						position++
						goto l283
					l284:
						position, tokenIndex = position283, tokenIndex283
						if buffer[position] != rune('S') {
							goto l270
						}
						position++
					}
				l283:
					goto l221
				l270:
					position, tokenIndex = position221, tokenIndex221
					{
						position286, tokenIndex286 := position, tokenIndex
						{
							position288, tokenIndex288 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l289
							}
							position++
							goto l288
						l289:
							position, tokenIndex = position288, tokenIndex288
							if buffer[position] != rune('S') {
								goto l286
							}
							position++
						}
					l288:
						{
							position290, tokenIndex290 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l291
							}
							position++
							goto l290
						l291:
							position, tokenIndex = position290, tokenIndex290
							if buffer[position] != rune('P') {
								goto l286
							}
							position++
						}
					l290:
						{
							position292, tokenIndex292 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l293
							}
							position++
							goto l292
						l293:
							position, tokenIndex = position292, tokenIndex292
							if buffer[position] != rune('E') {
								goto l286
							}
							position++
						}
					l292:
						{
							position294, tokenIndex294 := position, tokenIndex
							if buffer[position] != rune('c') {
								goto l295
							}
							position++
							goto l294
						l295:
							position, tokenIndex = position294, tokenIndex294
							if buffer[position] != rune('C') {
								goto l286
							}
							position++
						}
					l294:
						{
							position296, tokenIndex296 := position, tokenIndex
							if buffer[position] != rune('i') {
								goto l297
							}
							position++
							goto l296
						l297:
							position, tokenIndex = position296, tokenIndex296
							if buffer[position] != rune('I') {
								goto l286
							}
							position++
						}
					l296:
						{
							position298, tokenIndex298 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l299
							}
							position++
							goto l298
						l299:
							position, tokenIndex = position298, tokenIndex298
							if buffer[position] != rune('E') {
								goto l286
							}
							position++
						}
					l298:
						{
							position300, tokenIndex300 := position, tokenIndex
							if buffer[position] != rune('s') {
								goto l301
							}
							position++
							goto l300
						l301:
							position, tokenIndex = position300, tokenIndex300
							if buffer[position] != rune('S') {
								goto l286
							}
							position++
						}
					l300:
						if !_rules[rule_]() {
							goto l286
						}
						goto l287
					l286:
						position, tokenIndex = position286, tokenIndex286
					}
				l287:
					{
						position302, tokenIndex302 := position, tokenIndex
						{
							position304, tokenIndex304 := position, tokenIndex
							if buffer[position] != rune('g') {
								goto l305
							}
							position++
							goto l304
						l305:
							position, tokenIndex = position304, tokenIndex304
							if buffer[position] != rune('G') {
								goto l303
							}
							position++
						}
					l304:
						{
							position306, tokenIndex306 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l307
							}
							position++
							goto l306
						l307:
							position, tokenIndex = position306, tokenIndex306
							if buffer[position] != rune('R') {
								goto l303
							}
							position++
						}
					l306:
						{
							position308, tokenIndex308 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l309
							}
							position++
							goto l308
						l309:
							position, tokenIndex = position308, tokenIndex308
							if buffer[position] != rune('O') {
								goto l303
							}
							position++
						}
					l308:
						{
							position310, tokenIndex310 := position, tokenIndex
							if buffer[position] != rune('u') {
								goto l311
							}
							position++
							goto l310
						l311:
							position, tokenIndex = position310, tokenIndex310
							if buffer[position] != rune('U') {
								goto l303
							}
							position++
						}
					l310:
						{
							position312, tokenIndex312 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l313
							}
							position++
							goto l312
						l313:
							position, tokenIndex = position312, tokenIndex312
							if buffer[position] != rune('P') {
								goto l303
							}
							position++
						}
					l312:
						goto l302
					l303:
						position, tokenIndex = position302, tokenIndex302
						{
							position314, tokenIndex314 := position, tokenIndex
							if buffer[position] != rune('c') {
								goto l315
							}
							position++
							goto l314
						l315:
							position, tokenIndex = position314, tokenIndex314
							if buffer[position] != rune('C') {
								goto l285
							}
							position++
						}
					l314:
						{
							position316, tokenIndex316 := position, tokenIndex
							if buffer[position] != rune('o') {
								goto l317
							}
							position++
							goto l316
						l317:
							position, tokenIndex = position316, tokenIndex316
							if buffer[position] != rune('O') {
								goto l285
							}
							position++
						}
					l316:
						{
							position318, tokenIndex318 := position, tokenIndex
							if buffer[position] != rune('m') {
								goto l319
							}
							position++
							goto l318
						l319:
							position, tokenIndex = position318, tokenIndex318
							if buffer[position] != rune('M') {
								goto l285
							}
							position++
						}
					l318:
						{
							position320, tokenIndex320 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l321
							}
							position++
							goto l320
						l321:
							position, tokenIndex = position320, tokenIndex320
							if buffer[position] != rune('P') {
								goto l285
							}
							position++
						}
					l320:
						{
							position322, tokenIndex322 := position, tokenIndex
							if buffer[position] != rune('l') {
								goto l323
							}
							position++
							goto l322
						l323:
							position, tokenIndex = position322, tokenIndex322
							if buffer[position] != rune('L') {
								goto l285
							}
							position++
						}
					l322:
						{
							position324, tokenIndex324 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l325
							}
							position++
							goto l324
						l325:
							position, tokenIndex = position324, tokenIndex324
							if buffer[position] != rune('E') {
								goto l285
							}
							position++
						}
					l324:
						{
							position326, tokenIndex326 := position, tokenIndex
							if buffer[position] != rune('x') {
								goto l327
							}
							position++
							goto l326
						l327:
							position, tokenIndex = position326, tokenIndex326
							if buffer[position] != rune('X') {
								goto l285
							}
							position++
						}
					l326:
					}
				l302:
					goto l221
				l285:
					position, tokenIndex = position221, tokenIndex221
					{
						position329, tokenIndex329 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l330
						}
						position++
						goto l329
					l330:
						position, tokenIndex = position329, tokenIndex329
						if buffer[position] != rune('C') {
							goto l328
						}
						position++
					}
				l329:
					{
						position331, tokenIndex331 := position, tokenIndex
						if buffer[position] != rune('l') {
							goto l332
						}
						position++
						goto l331
					l332:
						position, tokenIndex = position331, tokenIndex331
						if buffer[position] != rune('L') {
							goto l328
						}
						position++
					}
				l331:
					{
						position333, tokenIndex333 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l334
						}
						position++
						goto l333
					l334:
						position, tokenIndex = position333, tokenIndex333
						if buffer[position] != rune('A') {
							goto l328
						}
						position++
					}
				l333:
					{
						position335, tokenIndex335 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l336
						}
						position++
						goto l335
					l336:
						position, tokenIndex = position335, tokenIndex335
						if buffer[position] != rune('D') {
							goto l328
						}
						position++
					}
				l335:
					{
						position337, tokenIndex337 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l338
						}
						position++
						goto l337
					l338:
						position, tokenIndex = position337, tokenIndex337
						if buffer[position] != rune('E') {
							goto l328
						}
						position++
					}
				l337:
					goto l221
				l328:
					position, tokenIndex = position221, tokenIndex221
					{
						position340, tokenIndex340 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l341
						}
						position++
						goto l340
					l341:
						position, tokenIndex = position340, tokenIndex340
						if buffer[position] != rune('A') {
							goto l339
						}
						position++
					}
				l340:
					{
						position342, tokenIndex342 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l343
						}
						position++
						goto l342
					l343:
						position, tokenIndex = position342, tokenIndex342
						if buffer[position] != rune('U') {
							goto l339
						}
						position++
					}
				l342:
					{
						position344, tokenIndex344 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l345
						}
						position++
						goto l344
					l345:
						position, tokenIndex = position344, tokenIndex344
						if buffer[position] != rune('T') {
							goto l339
						}
						position++
					}
				l344:
					{
						position346, tokenIndex346 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l347
						}
						position++
						goto l346
					l347:
						position, tokenIndex = position346, tokenIndex346
						if buffer[position] != rune('H') {
							goto l339
						}
						position++
					}
				l346:
					{
						position348, tokenIndex348 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l349
						}
						position++
						goto l348
					l349:
						position, tokenIndex = position348, tokenIndex348
						if buffer[position] != rune('O') {
							goto l339
						}
						position++
					}
				l348:
					{
						position350, tokenIndex350 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l351
						}
						position++
						goto l350
					l351:
						position, tokenIndex = position350, tokenIndex350
						if buffer[position] != rune('R') {
							goto l339
						}
						position++
					}
				l350:
					goto l221
				l339:
					position, tokenIndex = position221, tokenIndex221
					{
						position353, tokenIndex353 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l354
						}
						position++
						goto l353
					l354:
						position, tokenIndex = position353, tokenIndex353
						if buffer[position] != rune('N') {
							goto l352
						}
						position++
					}
				l353:
					{
						position355, tokenIndex355 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l356
						}
						position++
						goto l355
					l356:
						position, tokenIndex = position355, tokenIndex355
						if buffer[position] != rune('E') {
							goto l352
						}
						position++
					}
				l355:
					{
						position357, tokenIndex357 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l358
						}
						position++
						goto l357
					l358:
						position, tokenIndex = position357, tokenIndex357
						if buffer[position] != rune('C') {
							goto l352
						}
						position++
					}
				l357:
					goto l221
				l352:
					position, tokenIndex = position221, tokenIndex221
					{
						position360, tokenIndex360 := position, tokenIndex
						if buffer[position] != rune('v') {
							goto l361
						}
						position++
						goto l360
					l361:
						position, tokenIndex = position360, tokenIndex360
						if buffer[position] != rune('V') {
							goto l359
						}
						position++
					}
				l360:
					{
						position362, tokenIndex362 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l363
						}
						position++
						goto l362
					l363:
						position, tokenIndex = position362, tokenIndex362
						if buffer[position] != rune('I') {
							goto l359
						}
						position++
					}
				l362:
					{
						position364, tokenIndex364 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l365
						}
						position++
						goto l364
					l365:
						position, tokenIndex = position364, tokenIndex364
						if buffer[position] != rune('D') {
							goto l359
						}
						position++
					}
				l364:
					{
						position366, tokenIndex366 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l367
						}
						position++
						goto l366
					l367:
						position, tokenIndex = position366, tokenIndex366
						if buffer[position] != rune('E') {
							goto l359
						}
						position++
					}
				l366:
					goto l221
				l359:
					position, tokenIndex = position221, tokenIndex221
					{
						position369, tokenIndex369 := position, tokenIndex
						if buffer[position] != rune('f') {
							goto l370
						}
						position++
						goto l369
					l370:
						position, tokenIndex = position369, tokenIndex369
						if buffer[position] != rune('F') {
							goto l368
						}
						position++
					}
				l369:
					{
						position371, tokenIndex371 := position, tokenIndex
						if buffer[position] != rune('i') {
							goto l372
						}
						position++
						goto l371
					l372:
						position, tokenIndex = position371, tokenIndex371
						if buffer[position] != rune('I') {
							goto l368
						}
						position++
					}
				l371:
					{
						position373, tokenIndex373 := position, tokenIndex
						if buffer[position] != rune('d') {
							goto l374
						}
						position++
						goto l373
					l374:
						position, tokenIndex = position373, tokenIndex373
						if buffer[position] != rune('D') {
							goto l368
						}
						position++
					}
				l373:
					{
						position375, tokenIndex375 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l376
						}
						position++
						goto l375
					l376:
						position, tokenIndex = position375, tokenIndex375
						if buffer[position] != rune('E') {
							goto l368
						}
						position++
					}
				l375:
					goto l221
				l368:
					position, tokenIndex = position221, tokenIndex221
					{
						position377, tokenIndex377 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l378
						}
						position++
						goto l377
					l378:
						position, tokenIndex = position377, tokenIndex377
						if buffer[position] != rune('N') {
							goto l219
						}
						position++
					}
				l377:
					{
						position379, tokenIndex379 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l380
						}
						position++
						goto l379
					l380:
						position, tokenIndex = position379, tokenIndex379
						if buffer[position] != rune('O') {
							goto l219
						}
						position++
					}
				l379:
					{
						position381, tokenIndex381 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l382
						}
						position++
						goto l381
					l382:
						position, tokenIndex = position381, tokenIndex381
						if buffer[position] != rune('N') {
							goto l219
						}
						position++
					}
				l381:
				}
			l221:
				{
					position383, tokenIndex383 := position, tokenIndex
					if !_rules[ruleNotLetterOrEnd]() {
						goto l219
					}
					position, tokenIndex = position383, tokenIndex383
				}
				add(ruleTailStopWords, position220)
			}
			return true
		l219:
			position, tokenIndex = position219, tokenIndex219
			return false
		},
		/* 9 TailPhrase2 <- <(((('s' / 'S') ('e' / 'E') ('r' / 'R') ('o' / 'O') ((('v' / 'V') ('a' / 'A') ('r' / 'R')) / (('t' / 'T') ('y' / 'Y') ('p' / 'P') ('e' / 'E')))) / (('s' / 'S') ('e' / 'E') ('n' / 'N') ('s' / 'S') ('u' / 'U')) / (('a' / 'A') ('u' / 'U') ('c' / 'C') ('t' / 'T')) / (('s' / 'S') ('e' / 'E') ('c' / 'C')) / (('n' / 'N') ('e' / 'E') ('a' / 'A') ('r' / 'R')) / (('s' / 'S') ('t' / 'T') ('r' / 'R'))) '.'? &NotLetterOrEnd)> */
		func() bool {
			position384, tokenIndex384 := position, tokenIndex
			{
				position385 := position
				{
					position386, tokenIndex386 := position, tokenIndex
					{
						position388, tokenIndex388 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l389
						}
						position++
						goto l388
					l389:
						position, tokenIndex = position388, tokenIndex388
						if buffer[position] != rune('S') {
							goto l387
						}
						position++
					}
				l388:
					{
						position390, tokenIndex390 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l391
						}
						position++
						goto l390
					l391:
						position, tokenIndex = position390, tokenIndex390
						if buffer[position] != rune('E') {
							goto l387
						}
						position++
					}
				l390:
					{
						position392, tokenIndex392 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l393
						}
						position++
						goto l392
					l393:
						position, tokenIndex = position392, tokenIndex392
						if buffer[position] != rune('R') {
							goto l387
						}
						position++
					}
				l392:
					{
						position394, tokenIndex394 := position, tokenIndex
						if buffer[position] != rune('o') {
							goto l395
						}
						position++
						goto l394
					l395:
						position, tokenIndex = position394, tokenIndex394
						if buffer[position] != rune('O') {
							goto l387
						}
						position++
					}
				l394:
					{
						position396, tokenIndex396 := position, tokenIndex
						{
							position398, tokenIndex398 := position, tokenIndex
							if buffer[position] != rune('v') {
								goto l399
							}
							position++
							goto l398
						l399:
							position, tokenIndex = position398, tokenIndex398
							if buffer[position] != rune('V') {
								goto l397
							}
							position++
						}
					l398:
						{
							position400, tokenIndex400 := position, tokenIndex
							if buffer[position] != rune('a') {
								goto l401
							}
							position++
							goto l400
						l401:
							position, tokenIndex = position400, tokenIndex400
							if buffer[position] != rune('A') {
								goto l397
							}
							position++
						}
					l400:
						{
							position402, tokenIndex402 := position, tokenIndex
							if buffer[position] != rune('r') {
								goto l403
							}
							position++
							goto l402
						l403:
							position, tokenIndex = position402, tokenIndex402
							if buffer[position] != rune('R') {
								goto l397
							}
							position++
						}
					l402:
						goto l396
					l397:
						position, tokenIndex = position396, tokenIndex396
						{
							position404, tokenIndex404 := position, tokenIndex
							if buffer[position] != rune('t') {
								goto l405
							}
							position++
							goto l404
						l405:
							position, tokenIndex = position404, tokenIndex404
							if buffer[position] != rune('T') {
								goto l387
							}
							position++
						}
					l404:
						{
							position406, tokenIndex406 := position, tokenIndex
							if buffer[position] != rune('y') {
								goto l407
							}
							position++
							goto l406
						l407:
							position, tokenIndex = position406, tokenIndex406
							if buffer[position] != rune('Y') {
								goto l387
							}
							position++
						}
					l406:
						{
							position408, tokenIndex408 := position, tokenIndex
							if buffer[position] != rune('p') {
								goto l409
							}
							position++
							goto l408
						l409:
							position, tokenIndex = position408, tokenIndex408
							if buffer[position] != rune('P') {
								goto l387
							}
							position++
						}
					l408:
						{
							position410, tokenIndex410 := position, tokenIndex
							if buffer[position] != rune('e') {
								goto l411
							}
							position++
							goto l410
						l411:
							position, tokenIndex = position410, tokenIndex410
							if buffer[position] != rune('E') {
								goto l387
							}
							position++
						}
					l410:
					}
				l396:
					goto l386
				l387:
					position, tokenIndex = position386, tokenIndex386
					{
						position413, tokenIndex413 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l414
						}
						position++
						goto l413
					l414:
						position, tokenIndex = position413, tokenIndex413
						if buffer[position] != rune('S') {
							goto l412
						}
						position++
					}
				l413:
					{
						position415, tokenIndex415 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l416
						}
						position++
						goto l415
					l416:
						position, tokenIndex = position415, tokenIndex415
						if buffer[position] != rune('E') {
							goto l412
						}
						position++
					}
				l415:
					{
						position417, tokenIndex417 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l418
						}
						position++
						goto l417
					l418:
						position, tokenIndex = position417, tokenIndex417
						if buffer[position] != rune('N') {
							goto l412
						}
						position++
					}
				l417:
					{
						position419, tokenIndex419 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l420
						}
						position++
						goto l419
					l420:
						position, tokenIndex = position419, tokenIndex419
						if buffer[position] != rune('S') {
							goto l412
						}
						position++
					}
				l419:
					{
						position421, tokenIndex421 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l422
						}
						position++
						goto l421
					l422:
						position, tokenIndex = position421, tokenIndex421
						if buffer[position] != rune('U') {
							goto l412
						}
						position++
					}
				l421:
					goto l386
				l412:
					position, tokenIndex = position386, tokenIndex386
					{
						position424, tokenIndex424 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l425
						}
						position++
						goto l424
					l425:
						position, tokenIndex = position424, tokenIndex424
						if buffer[position] != rune('A') {
							goto l423
						}
						position++
					}
				l424:
					{
						position426, tokenIndex426 := position, tokenIndex
						if buffer[position] != rune('u') {
							goto l427
						}
						position++
						goto l426
					l427:
						position, tokenIndex = position426, tokenIndex426
						if buffer[position] != rune('U') {
							goto l423
						}
						position++
					}
				l426:
					{
						position428, tokenIndex428 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l429
						}
						position++
						goto l428
					l429:
						position, tokenIndex = position428, tokenIndex428
						if buffer[position] != rune('C') {
							goto l423
						}
						position++
					}
				l428:
					{
						position430, tokenIndex430 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l431
						}
						position++
						goto l430
					l431:
						position, tokenIndex = position430, tokenIndex430
						if buffer[position] != rune('T') {
							goto l423
						}
						position++
					}
				l430:
					goto l386
				l423:
					position, tokenIndex = position386, tokenIndex386
					{
						position433, tokenIndex433 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l434
						}
						position++
						goto l433
					l434:
						position, tokenIndex = position433, tokenIndex433
						if buffer[position] != rune('S') {
							goto l432
						}
						position++
					}
				l433:
					{
						position435, tokenIndex435 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l436
						}
						position++
						goto l435
					l436:
						position, tokenIndex = position435, tokenIndex435
						if buffer[position] != rune('E') {
							goto l432
						}
						position++
					}
				l435:
					{
						position437, tokenIndex437 := position, tokenIndex
						if buffer[position] != rune('c') {
							goto l438
						}
						position++
						goto l437
					l438:
						position, tokenIndex = position437, tokenIndex437
						if buffer[position] != rune('C') {
							goto l432
						}
						position++
					}
				l437:
					goto l386
				l432:
					position, tokenIndex = position386, tokenIndex386
					{
						position440, tokenIndex440 := position, tokenIndex
						if buffer[position] != rune('n') {
							goto l441
						}
						position++
						goto l440
					l441:
						position, tokenIndex = position440, tokenIndex440
						if buffer[position] != rune('N') {
							goto l439
						}
						position++
					}
				l440:
					{
						position442, tokenIndex442 := position, tokenIndex
						if buffer[position] != rune('e') {
							goto l443
						}
						position++
						goto l442
					l443:
						position, tokenIndex = position442, tokenIndex442
						if buffer[position] != rune('E') {
							goto l439
						}
						position++
					}
				l442:
					{
						position444, tokenIndex444 := position, tokenIndex
						if buffer[position] != rune('a') {
							goto l445
						}
						position++
						goto l444
					l445:
						position, tokenIndex = position444, tokenIndex444
						if buffer[position] != rune('A') {
							goto l439
						}
						position++
					}
				l444:
					{
						position446, tokenIndex446 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l447
						}
						position++
						goto l446
					l447:
						position, tokenIndex = position446, tokenIndex446
						if buffer[position] != rune('R') {
							goto l439
						}
						position++
					}
				l446:
					goto l386
				l439:
					position, tokenIndex = position386, tokenIndex386
					{
						position448, tokenIndex448 := position, tokenIndex
						if buffer[position] != rune('s') {
							goto l449
						}
						position++
						goto l448
					l449:
						position, tokenIndex = position448, tokenIndex448
						if buffer[position] != rune('S') {
							goto l384
						}
						position++
					}
				l448:
					{
						position450, tokenIndex450 := position, tokenIndex
						if buffer[position] != rune('t') {
							goto l451
						}
						position++
						goto l450
					l451:
						position, tokenIndex = position450, tokenIndex450
						if buffer[position] != rune('T') {
							goto l384
						}
						position++
					}
				l450:
					{
						position452, tokenIndex452 := position, tokenIndex
						if buffer[position] != rune('r') {
							goto l453
						}
						position++
						goto l452
					l453:
						position, tokenIndex = position452, tokenIndex452
						if buffer[position] != rune('R') {
							goto l384
						}
						position++
					}
				l452:
				}
			l386:
				{
					position454, tokenIndex454 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l454
					}
					position++
					goto l455
				l454:
					position, tokenIndex = position454, tokenIndex454
				}
			l455:
				{
					position456, tokenIndex456 := position, tokenIndex
					if !_rules[ruleNotLetterOrEnd]() {
						goto l384
					}
					position, tokenIndex = position456, tokenIndex456
				}
				add(ruleTailPhrase2, position385)
			}
			return true
		l384:
			position, tokenIndex = position384, tokenIndex384
			return false
		},
		/* 10 TailPhrase1 <- <((('('? (('h' 't') / ('h' 'o' 'r' 't'))) / ('s' 'p' 'e' 'c') / ('n' 'o' 'v' '.'? _ ('s' 'p' 'e' 'c'))) '.'? &NotLetterOrEnd)> */
		func() bool {
			position457, tokenIndex457 := position, tokenIndex
			{
				position458 := position
				{
					position459, tokenIndex459 := position, tokenIndex
					{
						position461, tokenIndex461 := position, tokenIndex
						if buffer[position] != rune('(') {
							goto l461
						}
						position++
						goto l462
					l461:
						position, tokenIndex = position461, tokenIndex461
					}
				l462:
					{
						position463, tokenIndex463 := position, tokenIndex
						if buffer[position] != rune('h') {
							goto l464
						}
						position++
						if buffer[position] != rune('t') {
							goto l464
						}
						position++
						goto l463
					l464:
						position, tokenIndex = position463, tokenIndex463
						if buffer[position] != rune('h') {
							goto l460
						}
						position++
						if buffer[position] != rune('o') {
							goto l460
						}
						position++
						if buffer[position] != rune('r') {
							goto l460
						}
						position++
						if buffer[position] != rune('t') {
							goto l460
						}
						position++
					}
				l463:
					goto l459
				l460:
					position, tokenIndex = position459, tokenIndex459
					if buffer[position] != rune('s') {
						goto l465
					}
					position++
					if buffer[position] != rune('p') {
						goto l465
					}
					position++
					if buffer[position] != rune('e') {
						goto l465
					}
					position++
					if buffer[position] != rune('c') {
						goto l465
					}
					position++
					goto l459
				l465:
					position, tokenIndex = position459, tokenIndex459
					if buffer[position] != rune('n') {
						goto l457
					}
					position++
					if buffer[position] != rune('o') {
						goto l457
					}
					position++
					if buffer[position] != rune('v') {
						goto l457
					}
					position++
					{
						position466, tokenIndex466 := position, tokenIndex
						if buffer[position] != rune('.') {
							goto l466
						}
						position++
						goto l467
					l466:
						position, tokenIndex = position466, tokenIndex466
					}
				l467:
					if !_rules[rule_]() {
						goto l457
					}
					if buffer[position] != rune('s') {
						goto l457
					}
					position++
					if buffer[position] != rune('p') {
						goto l457
					}
					position++
					if buffer[position] != rune('e') {
						goto l457
					}
					position++
					if buffer[position] != rune('c') {
						goto l457
					}
					position++
				}
			l459:
				{
					position468, tokenIndex468 := position, tokenIndex
					if buffer[position] != rune('.') {
						goto l468
					}
					position++
					goto l469
				l468:
					position, tokenIndex = position468, tokenIndex468
				}
			l469:
				{
					position470, tokenIndex470 := position, tokenIndex
					if !_rules[ruleNotLetterOrEnd]() {
						goto l457
					}
					position, tokenIndex = position470, tokenIndex470
				}
				add(ruleTailPhrase1, position458)
			}
			return true
		l457:
			position, tokenIndex = position457, tokenIndex457
			return false
		},
		/* 11 SpaceOrEnd <- <(CommaSpace? END)> */
		func() bool {
			position471, tokenIndex471 := position, tokenIndex
			{
				position472 := position
				{
					position473, tokenIndex473 := position, tokenIndex
					if !_rules[ruleCommaSpace]() {
						goto l473
					}
					goto l474
				l473:
					position, tokenIndex = position473, tokenIndex473
				}
			l474:
				if !_rules[ruleEND]() {
					goto l471
				}
				add(ruleSpaceOrEnd, position472)
			}
			return true
		l471:
			position, tokenIndex = position471, tokenIndex471
			return false
		},
		/* 12 CommaSpace <- <((_? ',' _?)+ / _)> */
		func() bool {
			position475, tokenIndex475 := position, tokenIndex
			{
				position476 := position
				{
					position477, tokenIndex477 := position, tokenIndex
					{
						position481, tokenIndex481 := position, tokenIndex
						if !_rules[rule_]() {
							goto l481
						}
						goto l482
					l481:
						position, tokenIndex = position481, tokenIndex481
					}
				l482:
					if buffer[position] != rune(',') {
						goto l478
					}
					position++
					{
						position483, tokenIndex483 := position, tokenIndex
						if !_rules[rule_]() {
							goto l483
						}
						goto l484
					l483:
						position, tokenIndex = position483, tokenIndex483
					}
				l484:
				l479:
					{
						position480, tokenIndex480 := position, tokenIndex
						{
							position485, tokenIndex485 := position, tokenIndex
							if !_rules[rule_]() {
								goto l485
							}
							goto l486
						l485:
							position, tokenIndex = position485, tokenIndex485
						}
					l486:
						if buffer[position] != rune(',') {
							goto l480
						}
						position++
						{
							position487, tokenIndex487 := position, tokenIndex
							if !_rules[rule_]() {
								goto l487
							}
							goto l488
						l487:
							position, tokenIndex = position487, tokenIndex487
						}
					l488:
						goto l479
					l480:
						position, tokenIndex = position480, tokenIndex480
					}
					goto l477
				l478:
					position, tokenIndex = position477, tokenIndex477
					if !_rules[rule_]() {
						goto l475
					}
				}
			l477:
				add(ruleCommaSpace, position476)
			}
			return true
		l475:
			position, tokenIndex = position475, tokenIndex475
			return false
		},
		/* 13 _ <- <(MultipleSpace / SingleSpace)> */
		func() bool {
			position489, tokenIndex489 := position, tokenIndex
			{
				position490 := position
				{
					position491, tokenIndex491 := position, tokenIndex
					if !_rules[ruleMultipleSpace]() {
						goto l492
					}
					goto l491
				l492:
					position, tokenIndex = position491, tokenIndex491
					if !_rules[ruleSingleSpace]() {
						goto l489
					}
				}
			l491:
				add(rule_, position490)
			}
			return true
		l489:
			position, tokenIndex = position489, tokenIndex489
			return false
		},
		/* 14 NotLetterOrEnd <- <(NotLetter / END)> */
		func() bool {
			position493, tokenIndex493 := position, tokenIndex
			{
				position494 := position
				{
					position495, tokenIndex495 := position, tokenIndex
					if !_rules[ruleNotLetter]() {
						goto l496
					}
					goto l495
				l496:
					position, tokenIndex = position495, tokenIndex495
					if !_rules[ruleEND]() {
						goto l493
					}
				}
			l495:
				add(ruleNotLetterOrEnd, position494)
			}
			return true
		l493:
			position, tokenIndex = position493, tokenIndex493
			return false
		},
		/* 15 NotLetter <- <(!([a-z] / [A-Z] / ([0-9] / [0-9]) / '_' / '-') .)> */
		func() bool {
			position497, tokenIndex497 := position, tokenIndex
			{
				position498 := position
				{
					position499, tokenIndex499 := position, tokenIndex
					{
						position500, tokenIndex500 := position, tokenIndex
						if c := buffer[position]; c < rune('a') || c > rune('z') {
							goto l501
						}
						position++
						goto l500
					l501:
						position, tokenIndex = position500, tokenIndex500
						if c := buffer[position]; c < rune('A') || c > rune('Z') {
							goto l502
						}
						position++
						goto l500
					l502:
						position, tokenIndex = position500, tokenIndex500
						{
							position504, tokenIndex504 := position, tokenIndex
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l505
							}
							position++
							goto l504
						l505:
							position, tokenIndex = position504, tokenIndex504
							if c := buffer[position]; c < rune('0') || c > rune('9') {
								goto l503
							}
							position++
						}
					l504:
						goto l500
					l503:
						position, tokenIndex = position500, tokenIndex500
						if buffer[position] != rune('_') {
							goto l506
						}
						position++
						goto l500
					l506:
						position, tokenIndex = position500, tokenIndex500
						if buffer[position] != rune('-') {
							goto l499
						}
						position++
					}
				l500:
					goto l497
				l499:
					position, tokenIndex = position499, tokenIndex499
				}
				if !matchDot() {
					goto l497
				}
				add(ruleNotLetter, position498)
			}
			return true
		l497:
			position, tokenIndex = position497, tokenIndex497
			return false
		},
		/* 16 MultipleSpace <- <(SingleSpace SingleSpace+)> */
		func() bool {
			position507, tokenIndex507 := position, tokenIndex
			{
				position508 := position
				if !_rules[ruleSingleSpace]() {
					goto l507
				}
				if !_rules[ruleSingleSpace]() {
					goto l507
				}
			l509:
				{
					position510, tokenIndex510 := position, tokenIndex
					if !_rules[ruleSingleSpace]() {
						goto l510
					}
					goto l509
				l510:
					position, tokenIndex = position510, tokenIndex510
				}
				add(ruleMultipleSpace, position508)
			}
			return true
		l507:
			position, tokenIndex = position507, tokenIndex507
			return false
		},
		/* 17 SingleSpace <- <(' ' / OtherSpace)> */
		func() bool {
			position511, tokenIndex511 := position, tokenIndex
			{
				position512 := position
				{
					position513, tokenIndex513 := position, tokenIndex
					if buffer[position] != rune(' ') {
						goto l514
					}
					position++
					goto l513
				l514:
					position, tokenIndex = position513, tokenIndex513
					if !_rules[ruleOtherSpace]() {
						goto l511
					}
				}
			l513:
				add(ruleSingleSpace, position512)
			}
			return true
		l511:
			position, tokenIndex = position511, tokenIndex511
			return false
		},
		/* 18 OtherSpace <- <('\u3000' / '\u00a0' / '\t' / '\r' / '\n' / '\f' / '\v')> */
		func() bool {
			position515, tokenIndex515 := position, tokenIndex
			{
				position516 := position
				{
					position517, tokenIndex517 := position, tokenIndex
					if buffer[position] != rune('\u3000') {
						goto l518
					}
					position++
					goto l517
				l518:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('\u00a0') {
						goto l519
					}
					position++
					goto l517
				l519:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('\t') {
						goto l520
					}
					position++
					goto l517
				l520:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('\r') {
						goto l521
					}
					position++
					goto l517
				l521:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('\n') {
						goto l522
					}
					position++
					goto l517
				l522:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('\f') {
						goto l523
					}
					position++
					goto l517
				l523:
					position, tokenIndex = position517, tokenIndex517
					if buffer[position] != rune('\v') {
						goto l515
					}
					position++
				}
			l517:
				add(ruleOtherSpace, position516)
			}
			return true
		l515:
			position, tokenIndex = position515, tokenIndex515
			return false
		},
		/* 19 END <- <!.> */
		func() bool {
			position524, tokenIndex524 := position, tokenIndex
			{
				position525 := position
				{
					position526, tokenIndex526 := position, tokenIndex
					if !matchDot() {
						goto l526
					}
					goto l524
				l526:
					position, tokenIndex = position526, tokenIndex526
				}
				add(ruleEND, position525)
			}
			return true
		l524:
			position, tokenIndex = position524, tokenIndex524
			return false
		},
		/* 21 Action0 <- <{ p.tailIndex = int(token.begin) }> */
		func() bool {
			{
				add(ruleAction0, position)
			}
			return true
		},
	}
	p.rules = _rules
	return nil
}
